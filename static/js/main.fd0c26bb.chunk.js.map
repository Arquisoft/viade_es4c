{"version":3,"sources":["viade/Model/route-viade.js","viade/Model/image-viade.js","viade/Model/item-viade.js","viade/Model/video-viade.js","viade/Model/notification-viade.js","viade/Parsers/ParserToRDF/route-to-RDF.js","utils/ldflex-helper.js","utils/permissions.js","utils/sparql-fiddle.js","utils/toaster.js","viade/Parsers/ParserFromRDF/RDF-to-route.js","viade/Parsers/ParserFromRDF/small-RDF-to-route.js","viade/Parsers/ParserToRoute/ParsersTypes/GeoJSON/Types/line-string.js","viade/Parsers/ParserToRoute/ParsersTypes/GeoJSON/Types/feature.js","viade/Parsers/ParserToRoute/ParsersTypes/GeoJSON/Types/feature-collection.js","viade/Parsers/ParserToRoute/ParsersTypes/GeoJSON/index.js","viade/Parsers/ParserToRoute/ParsersTypes/GeoJSON/geoJSON-to-route.js","viade/Parsers/ParserToRoute/ParsersTypes/gpx-to-route.js","viade/Parsers/ParserToRoute/parser-to-route.js","viade/Parsers/Notification/rdf-to-notification.js","viade/Parsers/Notification/notification-to-rdf.js","viade/util/route-helper.js","viade/util/notification-helper.js","viade/util/storage-helper.js","viade/util/fetcher.js","components/AuthNavBar/UploadButton/upload.component.js","components/AuthNavBar/UploadButton/index.js","components/AuthNavBar/index.js","components/AuthNavBar/auth-nav-bar.component.js","services/provider.js","components/NavBar/Login/index.js","components/NavBar/Login/login.component.js","components/NavBar/Register/ProviderItem/index.js","components/NavBar/Register/ProviderItem/provider.item.component.js","components/NavBar/Register/register.component.js","components/NavBar/Register/index.js","components/NavBar/Register/register.container.js","components/NavBar/index.js","components/NavBar/nav-bar.component.js","components/Cards/friend-card.component.js","components/Cards/notification-card.component.js","components/Cards/profile-card.component.js","components/Cards/route-card.component.js","components/ErrorBoundary/index.js","components/ErrorBoundary/error-boundary.component.js","components/RoutesMap/RouteMap/route-map.component.js","components/RoutesMap/RouteMap/index.js","components/Share/children/share-form.component.js","components/Share/index.js","components/Share/share.container.js","components/RoutesMap/RoutesTitle/index.js","components/RoutesMap/RoutesTitle/routes-title.component.js","components/RoutesMap/RoutesCarousel/index.js","components/RoutesMap/RoutesCarousel/routes-carousel.component.js","components/RoutesMap/RoutesItinerary/index.js","components/RoutesMap/RoutesItinerary/routes-itinerary.component.js","components/RoutesMap/RoutesMediaUpload/routes-media-upload.component.js","components/RoutesMap/RoutesMediaUpload/index.js","components/Spacer/index.js","components/Spacer/spacer.component.js","components/Toaster/index.js","components/Toaster/toaster.component.js","components/RouteList/RouteItem/index.js","components/RouteList/RouteItem/route-item.component.js","components/RouteList/index.js","components/RouteList/route-list.component.js","components/Customs/CustomButton/index.js","components/Customs/CustomButton/custom-button.component.js","components/Customs/CustomModal/index.js","components/Customs/CustomModal/custom-modal.component.js","components/Customs/CustomLoader/index.js","components/Customs/CustomLoader/loader-component.js","containers/Home/home.container.js","containers/Home/index.js","containers/Profile/services/friends.service.js","containers/Profile/services/index.js","containers/Profile/profile.container.js","containers/Profile/index.js","containers/NotFound/index.js","containers/NotFound/notfound.component.js","containers/MyRoutes/index.js","containers/MyRoutes/myRoutes.container.js","containers/ShowRoute/index.js","containers/ShowRoute/show-route.container.js","containers/FriendsRoutes/index.js","containers/FriendsRoutes/friendsRoutes.container.js","containers/Notifications/children/NotificationItem/index.js","containers/Notifications/children/NotificationItem/notification-item.component.js","containers/Notifications/children/NotificationsList/index.js","containers/Notifications/children/NotificationsList/notifications-list.component.js","containers/Notifications/index.js","containers/Notifications/notifications.component.js","layouts/PublicLayout/index.js","layouts/PublicLayout/public.layout.js","hooks/components/withHistory.jsx","hooks/util.js","layouts/PrivateLayout/index.js","hooks/with-authorization.component.js","layouts/PrivateLayout/private.layout.js","routes.js","App.js","index.js"],"names":["RouteViade","name","items","description","media","comments","url","this","ImageViade","iri","author","publicationTime","image","URL","createObjectURL","className","src","getUrl","alt","ItemViade","longitude","latitude","order","elevation","VideoViade","video","controls","NotificationViade","title","license","actor","object","published","summary","target","read","RouteToRDF","route","str","length","parseitems","parseMedia","i","aux","getDate","date","getFullYear","getMonth","getHours","getMinutes","getSeconds","documentExists","documentUri","a","auth","fetch","headers","createDoc","options","deleteFile","method","createDocument","body","createDocumentWithTurtle","createNonExistentDocument","result","status","fetchLdflexDocument","ldflex","document","resourceExists","resourcePath","discoverInbox","inboxDocument","value","inbox","getLinkedInbox","inboxLinkedPath","fc","FC","checkAppPermissions","userAppPermissions","appPermissions","every","permission","includes","checkSpecificAppPermission","webId","AppPermission","checkPermissions","permissions","errorMessage","userApp","AccessControlList","MODES","APPEND","READ","WRITE","CONTROL","errorToaster","message","label","href","checkOrSetInboxAppendPermissions","inboxPath","inboxAcls","getPermissions","inboxPublicPermissions","filter","perm","agents","modes","ACLFile","createACL","setReadPermissionRoute","agent","setReadPermission","toString","documentUrl","path","split","itemExists","aclUri","agentsPermissions","modeRead","listPermissions","newAgents","push","sparq","setRdfType","type","rdfType","do","fiddle","Promise","resolve","reject","parseRdf","then","response","prepare","preparedQuery","execute","results","store","wanted","ary2hash","key","Object","keys","formatted","displayHandler","err","ary","hash","data","dataType","rdf","uri","query","rowHandler","vars","resultAry","row","r","found","got","replace","w","undefined","showText","showHtml","columnHeads","reverse","k","c","table","topRow","runFromLibrary","fiddleLibrary","fiddleName","run","newFiddle","console","log","loadLibrary","match","loadFromUrl","loadSparqlAndDo","fetcher","load","responseText","catch","loadFromUrlPlain","content","link","toast","autoClose","warningToaster","successToaster","infoToaster","parser","parse","sparqlFiddle","fiddleMedia","resultMedia","getMedia","getRoute","readFile","blob","map","parseToFloat","parseFloat","LineString","geoJSON","getItems","coordinates","coor","index","Feature","selectType","Error","geometry","FeatureCollection","features","GeoJSONToRoute","JSON","GpxToRoute","gpxParse","gpxParser","numTracks","tracks","j","numTotalPoints","numPoints","points","lon","lat","ele","selectParser","file","f","reader","FileReader","onload","onerror","readAsText","arrayToNotification","notification","clearQuotes","string","supportRoutes","array","supported","slice","notSupported","fetchSupportedUrlSharedWithMeRoutes","fetchAllUrlSharedWithMeRoutes","res","fetchSupportedUrlMyRoutes","fetchAllUrlMyRoutes","currentSession","Fetcher","sparql","shared_with_me","route_uris","storageHelper","getSharedWithMeFile","error","folder","getMyRoutesFolder","readFolder","routes","files","getBasicRoute","SmallRDFToRoute","getFullRoute","RDFToRoute","parseRoutefromFile","ParserToRoute","fetchNotificationsURLS","inboxURL","fetchNotification","RDFToNotification","findUserInboxes","paths","inboxes","currentPath","ldflexHelper","getDefaultInbox","inbox1","inbox2","find","addRouteSharedWithMe","friend","docu","createFile","markAsRead","NotificationToRDF","hasNotBeenAccepted","urlSharedWithMe","getViadeFolder","getMediaFolder","getInboxFolder","createInbox","createFolder","createSharedMeFile","createMediaFolder","createRoutesFolder","initFolderStructure","checkFolderStructure","permissionHelper","endPoint","output","SolidFileClient","UploadComponent","webid","useWebId","nameInput","React","createRef","descriptionInput","valueName","valueDescription","summitHandler","e","preventDefault","rutaPod","rutaMedia","Date","now","promise","extension","putFile","substring","strRoute","parserToRDF","Form","Group","controlId","Label","Control","ref","onChange","current","data-testid","placeholder","as","Text","withIcon","withPreview","buttonText","imgExtension","maxFileSize","onClick","text","AuthNavBar","logOut","logout","localStorage","removeItem","window","location","process","Navbar","bg","expand","Brand","navbar","logo","Image","img","component","Toggle","aria-controls","Collapse","id","Nav","exact","to","notifications","links","style","height","testid","Provider","registerLink","LoginComponent","Card","width","Img","variant","Body","Title","selectPlaceholder","inputPlaholder","formButtonText","btnTxtWebId","btnTxtProvider","callbackUri","protocol","host","errorsText","unknown","webIdNotValid","emptyProvider","emptyWebId","providers","getIdentityProviders","ProviderItem","onSelect","radioName","checked","RegisterComponent","props","next","state","canContinue","provider","register","selectProvider","setState","onSubmit","rel","providerData","disabled","Component","RegisterContainer","NavBar","Login","Register","FriendCardComponent","enable","NotificationCardComponent","useState","isAccepted","setAccepted","accept","condition","action","user","ProfileCardComponent","icon","faExternalLinkAlt","data-toggle","faRoute","nMyRoutes","faUserFriends","nFriendsRoutes","faFolderOpen","RouteCardComponent","desc","ErrorBoundary","errorInfo","whiteSpace","componentStack","children","polyline","RouteMap","forEach","item","north","Math","max","apply","x","east","south","min","west","bounds","getBounds","WORLD_DIM","latRad","sin","PI","radX2","zoom","mapPx","worldPx","fraction","floor","LN2","lngDiff","lngFraction","latZoom","lngZoom","Map","center","getCenter","getZoomLevel","TileLayer","attribution","Marker","position","Polyline","color","positions","ShareFormComponent","sendNotification","sentTo","setSentTo","shareRoute","NotificationTypes","OFFER","shareWith","concat","LoggedIn","List","ShareComponent","withWebId","createNotification","useNotification","RouteTitle","edit","isEditing","save","editedName","editedDescription","nombreRuta","updateName","evt","updateDescription","handleKeyEnter","share","onKeyDown","Share","RoutesCarousel","Carousel","interval","Item","getComponent","RoutesItinerary","isOpen","setIsOpen","in","RoutesMediaUpload","Spacer","Toaster","RouteItem","setRoute","routeHelper","init","Col","md","lg","encodeURIComponent","RouteList","urlRoutes","setUrlRoutes","readRoutes","urls","initRoutes","Row","xs","sm","xl","pos","textAlign","margin","size","CustomButton","CustomModal","Modal","show","onHide","Loader","HomeComponent","session","getItem","setItem","checkStructure","Container","home","team","images","footer","require","default","isWebIdValid","friendWebId","FileClient","login","op","client","isFriend","friends","String","localeCompare","addFriend","userWebId","knows","add","ProfileComponent","getNumMyRoutes","loadedNMyRoutes","getNumSharedWithMe","loadedNFriendsRoutes","updateFriendWebId","enteredWebId","defaultSrc","Value","InputGroup","FormControl","aria-label","aria-describedby","Append","Button","updateLastFriend","faPlus","NotFoundComponent","MyRoutesComponent","ShowRoute","linkRuta","decodeURIComponent","params","promiseIsResolved","routeURL","FriendsRoutesComponent","NotificationItem","notificationHelper","addSharedWithMe","setSharing","marked","isSharing","substr","NotificationsList","setNotifications","initNotifications","Notifications","PublicLayout","rest","history","higherOrderComponent","createWrapper","useHistory","Wrapper","displayName","getDisplayName","PrivateLayout","withHistory","withAuthorization","errorMessages","useEffect","Routes","Home","FriendsRoutes","Profile","MyRoutes","NotFound","App","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","ReactDOM","render","getElementById"],"mappings":"2qFAYeA,EAVX,WAAYC,EAAKC,GAAsD,IAAhDC,EAA+C,uDAAnC,GAAIC,EAA+B,uDAAzB,GAAIC,EAAqB,uDAAV,GAAGC,EAAO,uDAAH,GAAG,oBAClEC,KAAKN,KAAKA,EACVM,KAAKL,MAAMA,EACXK,KAAKJ,YAAYA,EACjBI,KAAKH,MAAQA,EACbG,KAAKF,SAAWA,EAChBE,KAAKD,IAAIA,G,QCNXE,E,WAEF,WAAYC,EAAIC,EAAOC,GAA4B,IAAZC,EAAW,uDAAL,KAAK,oBAC9CL,KAAKE,IAAIA,EACTF,KAAKG,OAAOA,EACZH,KAAKI,gBAAgBA,EACrBJ,KAAKK,MAAMA,E,qDAIX,GAAIL,KAAKK,MAIT,OAAOC,IAAIC,gBAAgBP,KAAKK,S,qCAIhC,OAAO,yBAAKG,UAAU,oBAAoBC,IAAKT,KAAKU,SAAUC,IAAKX,KAAKG,a,KAKjEF,ICfAW,EARX,WAAYC,EAAUC,EAASC,GAAsB,IAAhBC,EAAe,uDAAL,KAAK,oBAChDhB,KAAKa,UAAUA,EACfb,KAAKc,SAASA,EACdd,KAAKgB,UAAUA,EACfhB,KAAKe,MAAMA,GCJbE,E,WAEL,WAAYf,EAAKC,EAAQC,GAAgC,IAAfc,EAAc,uDAAN,KAAM,oBACvDlB,KAAKE,IAAMA,EACXF,KAAKG,OAASA,EACdH,KAAKI,gBAAkBA,EACvBJ,KAAKkB,MAAQA,E,qDAIb,GAAKlB,KAAKkB,MAGV,OAAOZ,IAAIC,gBAAgBP,KAAKkB,S,qCAIhC,OAAO,2BAAOC,UAAQ,EAACX,UAAU,oBAAoBC,IAAKT,KAAKU,e,KAIlDO,ICTAG,EAbX,WAAYC,EAAMC,EAAQC,EAAMC,EAAOC,EAAUC,EAAQC,EAAOC,EAAK7B,GAAK,oBACtEC,KAAKqB,MAAMA,EACXrB,KAAKsB,QAAQA,EACbtB,KAAKuB,MAAMA,EACXvB,KAAKwB,OAAOA,EACZxB,KAAKyB,UAAUA,EACfzB,KAAK0B,QAAQA,EACb1B,KAAK2B,OAAOA,EACZ3B,KAAK4B,KAAKA,EACV5B,KAAKD,IAAIA,GCVX8B,E,WAEF,WAAYC,GAAQ,oBAEhB9B,KAAK8B,MAAQA,EACb9B,KAAK+B,IAAM,G,oDA0DX,OAnDA/B,KAAK+B,KAAO,oBACZ/B,KAAK+B,KAAO,6DACZ/B,KAAK+B,KAAO,2CACZ/B,KAAK+B,KAAO,4DACZ/B,KAAK+B,KAAO,uDACZ/B,KAAK+B,KAAO,KAQZ/B,KAAK+B,KAAO,WACZ/B,KAAK+B,KAAO,qBAGZ/B,KAAK+B,KAAO,kBACZ/B,KAAK+B,KAAO/B,KAAK8B,MAAMpC,KAGO,MAA1BM,KAAK8B,MAAMlC,aAA2C,KAApBI,KAAK8B,MAAMpC,OAC7CM,KAAK+B,KAAO,QACZ/B,KAAK+B,KAAO,yBACZ/B,KAAK+B,KAAO/B,KAAK8B,MAAMlC,cASvBI,KAAK8B,MAAMnC,MAAMqC,OAAS,IAAMhC,KAAK8B,MAAMjC,MAAMmC,OAAS,EAC9DhC,KAAK+B,KAAO,QAER/B,KAAK+B,KAAO,QAGhB/B,KAAK+B,KAAO,KAGZ/B,KAAKiC,aAGLjC,KAAKkC,aAMElC,KAAK+B,M,mCAOZ,IAAK,IAAII,EAAI,EAAGA,EAAInC,KAAK8B,MAAMnC,MAAMqC,OAASG,IAG1CnC,KAAK+B,KAAO,oBAGZ/B,KAAK+B,KAAO,uBACZ/B,KAAK+B,KAAO/B,KAAK8B,MAAMnC,MAAMwC,GAAGrB,SAChCd,KAAK+B,KAAO,OACZ/B,KAAK+B,KAAO,wBACZ/B,KAAK+B,KAAO/B,KAAK8B,MAAMnC,MAAMwC,GAAGtB,UAChCb,KAAK+B,KAAO,OAGZ/B,KAAK+B,KAAO,mBACZ/B,KAAK+B,KAAO/B,KAAK8B,MAAMnC,MAAMwC,GAAGpB,MAGK,MAAjCf,KAAK8B,MAAMnC,MAAMwC,GAAGnB,YACpBhB,KAAK+B,KAAO,OACZ/B,KAAK+B,KAAO,wBACZ/B,KAAK+B,KAAO/B,KAAK8B,MAAMnC,MAAMwC,GAAGnB,WAGpChB,KAAK+B,KAAO,OAQRI,IAAMnC,KAAK8B,MAAMnC,MAAMqC,OAAS,IAAMhC,KAAK8B,MAAMjC,MAAMmC,OAAS,EAChEhC,KAAK+B,KAAO,KAEZ/B,KAAK+B,KAAO,S,mCAQpB,IAAIK,EAAM,GACVpC,KAAK+B,KAAO,KAIZ,IAAK,IAAII,EAAI,EAAGA,EAAInC,KAAK8B,MAAMjC,MAAMmC,OAAQG,IAGzCnC,KAAK+B,KAAO,4BACZ/B,KAAK+B,KAAQ,SACb/B,KAAK+B,KAAQI,EAAE,EAOXA,IAAMnC,KAAK8B,MAAMjC,MAAMmC,OAAS,EAChChC,KAAK+B,KAAO,OAEZ/B,KAAK+B,KAAO,OAahBK,GAAO,WACPA,GAAQD,EAAE,EACVC,GAAO,KAGPA,GAAO,wBACPA,GAAOpC,KAAK8B,MAAMjC,MAAMsC,GAAGjC,IAC3BkC,GAAO,QAGPA,GAAO,0BACPA,GAAOpC,KAAKqC,QAAQrC,KAAK8B,MAAMjC,MAAMsC,GAAG/B,iBACxCgC,GAAO,iBACPA,GAAO,OAGPA,GAAO,oBACPA,GAAOpC,KAAK8B,MAAMjC,MAAMsC,GAAGhC,OAC3BiC,GAAO,QAIXpC,KAAK+B,KAAO,KAOZ/B,KAAK+B,KAAOK,I,8BAIRE,GAKJ,IAAIF,EAAM,GACV,MAAmB,iBAARE,GACPF,EAAM,GAENA,GAAQ,IACRA,GAAQE,EACRF,GAAQ,MAIRA,EAAM,GAENA,GAAQ,IACRA,GAAQE,EAAKC,cACbH,GAAQ,IACRA,GAAQE,EAAKE,WACbJ,GAAQ,IACRA,GAAQE,EAAKD,UACbD,GAAQ,IACRA,GAAQE,EAAKG,WACbL,GAAQ,IACRA,GAAQE,EAAKI,aACbN,GAAQ,IACRA,GAAQE,EAAKK,aACbP,GAAQ,S,KASLP,I,SCtNFe,EAAc,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAC5BC,IAAKC,MAAMH,EAAa,CACtBI,QAAS,CACP,eAAgB,kBAHQ,2CAAH,sDAOdC,EAAS,uCAAG,WAAOL,EAAaM,GAApB,SAAAL,EAAA,+EAERC,IAAKC,MAAMH,EAAaM,GAFhB,2IAAH,wDAQTC,EAAU,uCAAG,WAAOrD,GAAP,SAAA+C,EAAA,+EAETC,IAAKC,MAAMjD,EAAK,CAAEsD,OAAQ,WAFjB,2IAAH,sDAQVC,EAAc,uCAAG,WAAOT,GAAP,6BAAAC,EAAA,6DAAoBS,EAApB,+BAA2B,GAA3B,SAEpBJ,EAAU,CACdE,OAAQ,MACRJ,QAAS,CACP,eAAgB,eAElBM,QAPwB,SASbL,EAAUL,EAAaM,GATV,4IAAH,sDAedK,EAAwB,uCAAG,WAAOX,GAAP,2BAAAC,EAAA,6DAAoBS,EAApB,+BAA2B,GAA3B,2BAE7BL,EAAUL,EAAa,CAC5BQ,OAAQ,MACRJ,QAAS,CACP,eAAgB,eAElBM,UAPkC,mGAAH,sDAcxBE,EAAyB,uCAAG,WAAOZ,GAAP,6BAAAC,EAAA,6DAAoBS,EAApB,+BAA2B,GAA3B,kBAEhBX,EAAeC,GAFC,cAE/Ba,EAF+B,yBAIZ,MAAlBA,EAAOC,OAAiBL,EAAeT,EAAaU,GAAQ,MAJ9B,oGAAH,sDAUzBK,EAAmB,uCAAG,WAAOf,GAAP,eAAAC,EAAA,+EAEVF,EAAeC,GAFL,UAGT,MAHS,OAGpBc,OAHoB,yCAGI,MAHJ,uBAIRE,UAAOhB,GAJC,cAIzBiB,EAJyB,yBAKxBA,GALwB,uGAAH,sDAWnBC,EAAc,uCAAG,WAAOC,GAAP,eAAAlB,EAAA,+EAGLC,IAAKC,MAAMgB,GAHN,cAGpBN,EAHoB,yBAIF,MAAlBA,EAAOC,QAAoC,MAAlBD,EAAOC,QAJZ,oGAAH,sDAWdM,EAAa,uCAAG,WAAOH,GAAP,iBAAAhB,EAAA,+EAEIiB,EAAeD,GAFnB,2DAGI,GAHJ,uBAKGD,UAAOC,GAAU,aALpB,YAKnBI,EALmB,0CAMWA,EAAcC,MANzB,kDAMiC,EANjC,eAMnBC,EANmB,uBAOlBA,GAPkB,uGAAH,sDAkBbC,EAAc,uCAAG,WAAOL,GAAP,eAAAlB,EAAA,+EAEIe,UAAOG,GAAcI,MAFzB,YAEpBE,EAFoB,iDAIjBA,EAAgBH,OAJC,gCAMnB,IANmB,oGAAH,sD,QClGrBI,EAAK,IAAIC,IAAGzB,KAEZ0B,GAAsB,SAACC,EAAoBC,GAArB,OAC1BA,EAAeC,OAAM,SAACC,GAAD,OAAgBH,EAAmBI,SAASD,OAGtDE,GAA0B,uCAAG,WAAOC,EAAOH,GAAd,eAAA/B,EAAA,sEACPmC,gBAAcC,iBAAiBF,GADxB,cAClCN,EADkC,yBAEjCA,EAAmBS,YAAYL,SAASD,IAFP,2CAAH,wDAQ1BK,GAAgB,uCAAG,WAAOF,EAAOI,GAAd,yBAAAtC,EAAA,sEAIRmC,gBAAcC,iBAAiBF,GAJvB,OAIxBK,EAJwB,OASxBF,EAAcG,oBAAkBC,MAC9BC,EAAiCL,EAAjCK,OAAQC,EAAyBN,EAAzBM,KAAMC,EAAmBP,EAAnBO,MAAOC,EAAYR,EAAZQ,QAIf,OAAZN,GACwB,OAAxBA,EAAQF,aACPV,GAAoBY,EAAQF,YAAa,CAACK,EAAQC,EAAMC,EAAOC,KAEhEC,GAAaR,EAAaS,QAAST,EAAa/D,MAAO,CACrDyE,MAAOV,EAAaU,MACpBC,KAAMX,EAAaW,OApBO,2CAAH,wDA+BhBC,GAAgC,uCAAG,WAAOC,EAAWjB,GAAlB,uBAAAlC,EAAA,6DAExCoD,EAAY,IAAIZ,oBAAkBN,EAAOiB,GAFD,SAGpBC,EAAUC,iBAHU,UAGxChB,EAHwC,OAIxCiB,EAAyBjB,EAAYkB,QACzC,SAACC,GAAD,OAA0B,OAAhBA,EAAKC,YAGQH,EAAuBC,QAAO,SAACC,GAAD,OACrDA,EAAKE,MAAM1B,SAASQ,oBAAkBC,MAAMC,WAGzBxD,QAAU,GAZe,iCAgBpCmD,EAAc,CAClB,CACEoB,OAAQ,KACRC,MAAO,CAAClB,oBAAkBC,MAAMC,UAG9BiB,EAAU,IAAInB,oBAAkBN,EAAOiB,GAtBH,UAuBpCQ,EAAQC,UAAUvB,GAvBkB,uGA8BvC,GA9BuC,0DAAH,wDAiChCwB,GAAsB,uCAAC,WAAM3B,EAAM4B,EAAM9E,GAAlB,eAAAgB,EAAA,sDAElC,IADA+D,GAAkB7B,EAAM4B,EAAM9E,EAAM/B,IAAI+G,YAChC3E,EAAE,EAAEA,EAAEL,EAAMjC,MAAMmC,OAAOG,IAC/B0E,GAAkB7B,EAAM4B,EAAM9E,EAAMjC,MAAMsC,GAAGjC,IAAI4G,YAHjB,2CAAD,0DAQtBD,GAAiB,uCAAG,WAAO7B,EAAM4B,EAAOG,GAApB,+BAAAjE,EAAA,6DAC3BkE,EAAKD,EAAYE,MAAM,KAAK,GAC1BR,EAAU,IAAInB,oBAAkBN,EAAOgC,GAFd,SAGpBzC,EAAG2C,WAAWT,EAAQU,QAHF,wCAIvBC,EAAoB,CACxB,CACEb,OAAQK,EACRJ,MAAO,CAAClB,oBAAkBC,MAAME,QAPP,SAUvBgB,EAAQC,UAAUU,GAVK,yDAaLX,EAAQN,iBAbH,WAazBhB,EAbyB,OAczBkC,EAAW,CAAC/B,oBAAkBC,MAAME,MAEd,KADtB6B,EAAkBnC,EAAYkB,QAAO,SAACC,GAAD,OAAUA,EAAKE,MAAMM,aAAeO,EAASP,eACrE9E,OAhBY,wBAiBvBoF,EAAoB,CACxB,CACEb,OAAQK,EACRJ,MAAO,CAAClB,oBAAkBC,MAAME,QApBP,UAuBvBgB,EAAQC,UAAUU,GAvBK,uCAyBzBG,EAAUD,EAAgB,GAAGf,QACvBiB,KAAKZ,GACTQ,EAAoB,CACxB,CACEb,OAAQgB,EACRf,MAAO,CAAClB,oBAAkBC,MAAME,QA9BP,UAiCvBgB,EAAQC,UAAUU,GAjCK,4CAAH,0D,8BC6KxBK,GAAM,I,iDAvQRC,WAAa,SAACC,GAAW,EAAKC,QAAUD,G,KAExCE,GAAK,SAACC,GACJ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,EAAKC,SAASJ,GAAQK,MAAM,SAACC,GACzB,EAAKC,QAAQP,GAAQK,MAAM,SAACG,GACxB,EAAKC,QAAQT,EAAOQ,GAAeH,MAAM,SAACK,GAEtC,GADA,EAAKC,MAAQX,EAAOW,MACD,UAAhBX,EAAOY,OACNV,EAAQQ,QAEP,GAAmB,SAAhBV,EAAOY,OACXV,EAAS,EAAKW,SAASb,EAAOU,SAE7B,GAAGA,EAAQxG,OAAS,EACrBgG,EAAS,oBAER,GAAmB,UAAhBF,EAAOY,OAAkB,CAC7B,IAAIE,EAAQC,OAAOC,KAAKN,EAAQ,IAAI,GACpCR,EAASQ,EAAQ,GAAGI,QAEnB,CACD,IAAIG,EAAY,EAAKC,eAAelB,EAAOU,GAC3CR,EAAQe,OAEd,SAAAE,GAAG,OAAIhB,EAAOgB,SAClB,SAAAA,GAAG,OAAIhB,EAAOgB,SAClB,SAAAA,GAAG,OAAIhB,EAAOgB,U,KAIpBN,SAAU,SAACb,EAAOoB,GACd,IACIpG,EADAqG,EAAO,GAEX,IAAIrG,KAAKoG,EAELC,GADArG,EAAIoG,EAAIpG,IACDgF,EAAOc,MAAQ9F,EAE1B,OAAOqG,G,KAEXjB,SAAW,SAACJ,GAAa,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAClD,IAAIH,EAAOsB,KACL,OAAOpB,IAEb,IAAIL,EAAOG,EAAOuB,SACI,qBAAZvF,WAA0B6D,EAAO,EAAKC,SAC5CD,IAAQA,EAAO,eAEnB,IACI2B,KACIxB,EAAOsB,KAAMtB,EAAOW,MAAOa,KAHjB,+BAGsCC,IAAK5B,GAEzDK,IAEJ,MAAMiB,GAAOhB,EAAOgB,Q,KAExBZ,QAAU,SAACP,GACP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAEED,EADYsB,KAAkBxB,EAAO0B,OAAM,EAAM1B,EAAOW,QAG1D,MAAMQ,GAAOhB,EAAOgB,Q,KAG5BV,QAAW,SAACT,EAAOQ,GACf,IAAImB,EAAa3B,EAAO2B,YAAc,EAAKA,WAC3C,OAAO,IAAI1B,SAAQ,SAACC,EAASC,GACzB,IAAIS,EAASJ,EAAcoB,KACvBC,EAAY,GAChB7B,EAAOW,MAAMe,MAAMlB,GAAe,SAACE,GAC/B,GAAqB,qBAAXA,EAA0BP,EAAO,mBACtC,CACD,IAAI2B,EAAMH,EAAW3B,EAAOY,EAAOF,GAChCoB,GAAMD,EAAUnC,KAAKoC,MAE7B,IAAK,WAAW5B,EAAQ2B,U,KAGnCF,WAAY,SAAC3B,EAAOY,EAAOF,GACvB,IACIqB,EADAD,EAAM,GAEV,IAAIC,KAAKrB,EAAQ,CACb,IAAIsB,GAAQ,EACRC,EAAMF,EAAEG,QAAQ,MAAM,IAC1B,GAAGtB,EAAO1G,OAAO,CACb,IAAIiI,OAAC,EACL,IAAIA,KAAKvB,EACFqB,IAAMrB,EAAOuB,GAAGnE,QAAQgE,GAAM,GAErC,IAAIA,EAAQ,SAEhBF,EAAIG,GAAKvB,EAAQqB,GAAG1F,MAKxB,OAHG2D,EAAO2B,aACNG,EAAM9B,EAAO2B,WAAWG,IAErBA,G,KAKXZ,eAAiB,SAAClB,EAAOU,GACrB,IAAIb,EAAQG,EAAOY,OACRZ,EAAOY,YACawB,WAAZpG,SACN,OACA,OACb,MAAU,SAAP6D,EAAuB,EAAKwC,SAAS3B,GAC9B,SAAPb,EAAuB,EAAKyC,SAAS5B,QAAxC,G,KAEJ2B,SAAW,SAAC3B,GACR,IAEIqB,EAFAQ,EAAcxB,OAAOC,KAAKN,EAAQ,IAAI8B,UACtCvI,EAAM,KAEV,IAAI8H,KAAKrB,EAAQ,CAEb,IAAI+B,OAAC,EACL,IAAIA,KAAKF,EACLtI,GAAG,UAAOsI,EAAYE,GAAnB,cAA2B/B,EAAQqB,GAAGQ,EAAYE,IAAlD,MAEPxI,GAAO,KAEX,OAAOA,G,KAIXqI,SAAW,SAAC5B,GACR,IAGIgC,EAKAX,EARAQ,EAAcxB,OAAOC,KAAKN,EAAQ,IAAI8B,UACtCG,EAAQ,UACRC,EAAS,GAEb,IAAIF,KAAKH,EACLK,GAAM,cAAWL,EAAYG,GAAvB,SAIV,IAAIX,KAFJY,GAAK,cAAWC,EAAX,SAEIlC,EAAQ,CACb,IAAIoB,EAAM,GACNW,OAAC,EACL,IAAIA,KAAKF,EACLT,GAAG,cAAWpB,EAAQqB,GAAGQ,EAAYE,IAAlC,SAEPE,GAAK,cAAWb,EAAX,SAGT,OADAa,GAAS,Y,KAYbE,eAAiB,SAAEC,EAAeC,EAAY1H,GAC1C,OAAO,IAAI4E,SAAQ,SAACC,EAASC,GACzB,IAAIH,EAAS,CACXY,OAAS,QACPU,KAAOwB,EACPpB,MAAK,mHAGDqB,EAHC,iEAOT,EAAKC,IAAKhD,GAASK,MAAM,SAACL,GACtB,IAAIiD,EAAY,CACZrC,OAASvF,EAAQuF,OACfU,KAAOtB,EAAO,GAAGsB,KAClBI,MAAQ1B,EAAO,GAAG0B,MACrBH,SAAWvB,EAAO,GAAGH,MAEvB,EAAKmD,IAAKC,GAAY5C,MAAM,SAACK,GACzBR,EAAQQ,MACT,SAAAS,GAAG,OAAIhB,EAAOgB,SAClB,SAAAA,GAAG,OAAIhB,EAAOgB,SAClB,SAAAA,GAAG,OAAI+B,QAAQC,IAAIhC,O,KAE1BiC,YAAc,SAAEN,GACZ,OAAO,IAAI7C,SAAQ,SAACC,EAASC,GACzB,IAAIH,EAAS,CACXY,OAAS,OACNE,IAAM,OACPQ,KAAOwB,EACPpB,MAAK,iLAOT,EAAKsB,IAAKhD,GAASK,MAAM,SAACK,GACtBR,EAAQQ,MACT,SAAAS,GAAG,OAAIhB,EAAOgB,SAClB,SAACA,GAAD,OAAS+B,QAAQC,IAAI,OAAOhC,O,KAEnC6B,IAAM,SAAChD,GACL,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BH,EAAOW,MAASX,EAAOsB,KAAKpH,OAAO,EACpBsH,OACA,EAAKb,MAChBX,EAAOsB,KAAK+B,MAAM,SAClB,EAAKC,YAAYtD,EAAO,QAAQK,MAAM,SAACL,GACnC,EAAKuD,gBAAiBvD,GAASK,MAAM,SAACK,GAClCR,EAAQQ,MACT,SAACS,GAAD,OAAShB,EAAOgB,SACpB,SAACA,GAAD,OAAShB,EAAOgB,MAGnB,EAAKoC,gBAAiBvD,GAASK,MAAM,SAACK,GAClCR,EAAQQ,MACT,SAACS,GAAD,OAAShB,EAAOgB,U,KAO3BoC,gBAAkB,SAAEvD,GAClB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBH,EAAO0B,MAAM2B,MAAO,SACpB,EAAKC,YAAYtD,EAAO,SAASK,MAAM,SAACL,GACpC,EAAKD,GAAGC,GAAQK,MAAM,SAACK,GACnBR,EAAQQ,MACT,SAACS,GAAD,OAAShB,EAAOgB,SACpB,SAACA,GAAD,OAAUhB,EAAOgB,MAGpB,EAAKpB,GAAGC,GAAQK,MAAM,SAACK,GACnBR,EAAQQ,MACT,SAACS,GAAD,OAAShB,EAAOgB,U,KAI3BmC,YAAc,SAACtD,EAAOH,GACpB,IAAI5H,EAAM+H,EAAOH,GACjB,OAAO,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAIqD,EAAU,IAAIhC,KAAaA,QAC/B,IACIgC,EAAQC,KAAKxL,GAAKoI,MAAM,SAACC,GAErBN,EAAOH,GAAQS,EAASoD,aACxBxD,EAASF,MACV2D,OAAM,SAACxC,GAAD,OAAOhB,EAAOgB,MACzB,MAAMA,GAAOhB,EAAOgB,Q,KAG1ByC,iBAAmB,SAAC3L,GAClB,OAAO,IAAIgI,SAAQ,SAACC,EAASC,GAC3B,IAAIqD,EAAU,IAAIhC,KAAaA,QAC/B,IACIgC,EAAQC,KAAKxL,GAAKoI,MAAM,SAAAC,GACpBJ,EAASI,EAASoD,iBAExB,MAAMvC,GAAOhB,EAAOgB,SAMfxB,M,UCvQF7B,GAAe,SAAC+F,GAAD,IAAkBtK,EAAlB,uDAAkC,KAAMuK,EAAxC,8CAC1BC,aAAM,kBAAC,GAAY,CAAEF,UAAStK,QAAOsG,KAAM,QAASiE,SAAY,CAC9DE,WAAW,EACXtL,UAAW,gBACXmH,KAAM,WAGGoE,GAAiB,SAACJ,GAAD,IAAkBtK,EAAlB,uDAAkC,KAAMuK,EAAxC,8CAC1BC,aAAM,kBAAC,GAAY,CAAEF,UAAStK,QAAOsG,KAAM,UAAWiE,SAAY,CAC9DpL,UAAW,kBACXmH,KAAM,aAGDqE,GAAiB,SAACL,GAAD,IAAkBtK,EAAlB,uDAAkC,KAAMuK,EAAxC,8CAC5BC,aAAM,kBAAC,GAAY,CAAEF,UAAStK,QAAOsG,KAAM,UAAWiE,SAAW,CAC/DpL,UAAW,kBACXmH,KAAM,aAGKsE,GAAc,SAACN,GAAD,IAAkBtK,EAAlB,uDAAkC,KAAMuK,EAAxC,8CAC3BC,aAAM,kBAAC,GAAY,CAAEF,UAAStK,QAAOsG,KAAM,OAAQiE,SAAY,CAC7DpL,UAAW,eACXmH,KAAM,UCpBJpD,GAAK,IAAIC,IAAGzB,KA2HZmJ,GAAS,I,iDAzHbC,M,uCAAQ,WAAOpM,GAAP,uBAAA+C,EAAA,8oBAeFgF,EAAS,CACXsB,KAAMrJ,EACNyJ,MAjBI,klBAkBJd,OAAQ,SAlBJ,SAqBe0D,GAAatB,IAAIhD,GAAQK,MAC5C,SAACK,GACC,OAAOA,KAET,SAACS,GAAD,OAAS+B,QAAQC,IAAIhC,MAzBjB,cAqBAvF,EArBA,kZAyCF2I,EAAc,CAChBjD,KAAMrJ,EACNyJ,MA3CI,2YA4CJd,OAAQ,SA5CJ,SA8CoB0D,GAAatB,IAAIuB,GAAalE,MACtD,SAACK,GACC,OAAOA,KAET,SAACS,GAAD,OAAS+B,QAAQC,IAAIhC,MAlDjB,cA8CAqD,EA9CA,iBAoDY,EAAKC,SAASD,GApD1B,eAoDFzM,EApDE,yBAqDC,EAAK2M,SAAS9I,EAAQ7D,EAAOE,IArD9B,4C,2DAwDRwM,S,uCAAW,WAAO/D,GAAP,mBAAA1F,EAAA,yDACL0F,EADK,yCACW,IADX,OAEL3I,EAAQ,GAEPsC,EAAE,EAJE,YAIAA,EAAEqG,EAAQxG,QAJV,iCAKUuC,GAAGkI,SAASjE,EAAQrG,GAAR,KALtB,OAKHuK,EALG,YAMCA,EAAK/E,KAAKV,MAAM,KAAK,GANtB,OAOA,UAPA,QAiBE,UAjBF,gCAQHpH,EAAM2H,KACJ,IAAIvH,EACFuI,EAAQrG,GAAR,IACAqG,EAAQrG,GAAR,OACAqG,EAAQrG,GAAR,cACAuK,IAbD,oCAkBD7M,EAAM2H,KACJ,IAAIvG,EACFuH,EAAQrG,GAAR,IACAqG,EAAQrG,GAAR,OACAqG,EAAQrG,GAAR,cACAuK,IAvBH,iEAIiBvK,IAJjB,gDA+BFtC,GA/BE,4C,2DAkCX2M,SAAW,SAAChE,EAAS3I,EAAOE,GAC1B,GAAKyI,GAAYA,EAAQxG,OAAzB,CAGA,IAAIrC,EAAQ6I,EAAQmE,KAClB,SAACxK,GAAD,OACE,IAAIvB,EACF,EAAKgM,aAAazK,EAAC,MACnB,EAAKyK,aAAazK,EAAC,KACnB,EAAKyK,aAAazK,EAAC,OACnB,EAAKyK,aAAazK,EAAC,eAGzB,OAAO,IAAI1C,EACT+I,EAAQ,GAAR,KACA7I,EACA6I,EAAQ,GAAR,YACA3I,EACA,GACAE,K,KAIJ6M,aAAe,SAACzI,GACd,GAAKA,EAGL,OAAO0I,WAAW1I,KAMP+H,MCzFTA,GAAS,I,iDArCbC,M,uCAAM,WAAOpM,GAAP,iBAAA+C,EAAA,sZAWEgF,EAAS,CACXsB,KAAMrJ,EACNyJ,MAbA,0VAcAd,OAAQ,SAdR,kBAkBmB0D,GAAatB,IAAIhD,GAAQK,MAC1C,SAACK,GACD,OAAOA,KAEP,SAACS,GAAS,MAAMA,KAtBlB,cAkBIvF,EAlBJ,yBAwBK,EAAK8I,SAAS9I,EAAO3D,IAxB1B,oG,2DA8BNyM,SAAS,SAAChE,EAAQzI,GAChB,GAAIyI,GAAUA,EAAQxG,OACtB,OAAO,IAAIvC,EAAW+I,EAAQ,GAAR,KAAmB,KAAKA,EAAQ,GAAR,YAA0B,GAAG,GAAGzI,KAOnEmM,MC5BAY,G,iDAbbvE,QAAU,SAACwE,GACT,IAAMpN,EAAQ,EAAKqN,SAASD,EAAQE,aAEpC,OADc,IAAIxN,EAAW,UAAWE,I,KAI1CqN,SAAW,SAACC,GACV,OAAOA,EAAYN,KAAI,SAACO,EAAMC,GAC5B,OAAO,IAAIvM,EAAUsM,EAAK,GAAIA,EAAK,GAAIC,QCTvCC,G,iDACJC,WAAa,SAAC1F,GACZ,OAAQA,GACN,IAAK,aACH,OAAO,IAAImF,GACb,QACE,MAAM,IAAIQ,MAAM,4C,oDAIdP,GACN,IAAMQ,EAAWR,EAAQQ,SAEzB,OADAvN,KAAKkM,OAASlM,KAAKqN,WAAWE,EAAS5F,MAChC3H,KAAKkM,OAAO3D,QAAQgF,O,KAIhBH,MCNAI,G,iDATXjF,QAAQ,SAACwE,GACL,IAAMU,EAASV,EAAQU,SACvB,GAAGA,EAASzL,OAAO,EAAG,MAAM,IAAIsL,MAAM,oDAEtC,OADA,EAAKpB,OAAO,IAAIkB,GACT,EAAKlB,OAAO3D,QAAQkF,EAAS,MCN7BC,G,iDCCbL,WAAW,SAAC1F,GACV,OAAQA,GACN,IAAK,oBACH,OAAO,IAAI6F,GACb,IAAK,UACH,OAAO,IAAIJ,GACb,IAAK,aACH,OAAO,IAAIN,GACb,QACE,MAAM,IAAIQ,MAAM,yC,KAItB/E,QAAU,SAACoD,GACT,IAAMoB,EAAUY,KAAKxB,MAAMR,GAE3B,OADA,EAAKO,OAAS,EAAKmB,WAAWN,EAAQpF,MAC/B,EAAKuE,OAAO3D,QAAQwE,K,qBCgDhBa,G,iDA9DXrF,QAAU,SAACoD,GACP,OAAO,EAAKQ,MAAMR,I,KAGtBQ,MAAQ,SAACR,GAGL,IAAIkC,EAAW,IAAIC,KAGnBD,EAAS1B,MAAMR,GAGf,IAAMhM,EAAQ,EAAKqN,SAASa,GAM5B,OAHc,IAAIpO,EAAW,UAAWE,I,KAO5CqN,SAAW,SAACa,GAGR,IAAME,EAAYF,EAASG,OAAOhM,OAG9BrC,EAAQ,GAGRwC,EAAI,EACJ8L,EAAI,EACJC,EAAiB,EAErB,IAAK/L,EAAI,EAAGA,EAAI4L,EAAW5L,IAAK,CAG5B,IAAIgM,EAAYN,EAASG,OAAO7L,GAAGiM,OAAOpM,OAG1C,IAAKiM,EAAI,EAAGA,EAAIE,EAAWF,IAAK,CAE5B,IAAMpN,EAAYgN,EAASG,OAAO7L,GAAGiM,OAAOH,GAAGI,IACzCvN,EAAW+M,EAASG,OAAO7L,GAAGiM,OAAOH,GAAGK,IACxCtN,EAAY6M,EAASG,OAAO7L,GAAGiM,OAAOH,GAAGM,IAC/C5O,EAAMuO,GAAkB,IAAItN,EAAUC,EAAWC,EAAUoN,EAAe,EAAGlN,GAE7EkN,KAOR,OAAOvO,ICtBAuM,GAFA,I,iDAhCbsC,aAAe,SAACC,GAEd,OADaA,EAAK/O,KAAKuH,MAAM,KAAK,IAEhC,IAAK,OACL,IAAK,UACL,IAAK,UACH,OAAO,IAAIyG,GAAee,GAC5B,IAAK,MACH,OAAO,IAAIb,GAAWa,GACxB,QACE,MAAM,IAAInB,MAAM,wB,KAItBnB,MAAS,SAACsC,GACR,IAAMC,EAAID,EACJvC,EAAS,EAAKsC,aAAaE,GACjC,OAAO,IAAI3G,SAAQ,SAACC,EAASC,GAC3B,IAAI0G,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WACd,IACE7G,EAAQkE,EAAO3D,QAAQoG,EAAOjL,SAC/B,MAAMuF,GACLhB,EAAO,IAAIqF,MAAM,iDAGrBqB,EAAOG,QAAQ7G,EACf0G,EAAOI,WAAWL,QC2BTxC,GAFA,I,iDAfb8C,oBAAsB,SAACtL,EAAO3D,GAC5B,OAAO,IAAIqB,EACTsC,EAAO,GAAP,MACAA,EAAO,GAAP,QACAA,EAAO,GAAP,MACAA,EAAO,GAAP,OACAA,EAAO,GAAP,UACAA,EAAO,GAAP,QACAA,EAAO,GAAP,OACoB,SAApBA,EAAO,GAAP,KACA3D,I,2FAhDQA,G,ozBAqBN+H,EAAS,CACXsB,KAAMrJ,EACNyJ,M,quBACAd,OAAQ,S,SAIW0D,GAAatB,IAAIhD,GAAQK,MAC5C,SAACK,GACC,OAAOA,KAET,SAACS,GAAS,MAAMA,K,cAJZvF,E,yBAMC1D,KAAKgP,oBAAoBtL,EAAO3D,I,+GCR5BmM,GADF,I,iDA3BTC,MAAO,SAAC8C,GACJ,MAAO,0ZAQe,EAAKC,YAAYD,EAAa3N,SAR7C,gCASY2N,EAAa5N,MATzB,+BAUW4N,EAAarP,YAVxB,6BAWS,EAAKsP,YAAYD,EAAa1N,OAXvC,8BAYU,EAAK2N,YAAYD,EAAatN,QAZxC,8BAaU,EAAKuN,YAAYD,EAAazN,QAbxC,+BAcWyN,EAAarN,KAdxB,8CAeaqN,EAAaxN,UAf1B,oB,KAkBXyN,YAAa,SAACC,GACV,GAAIA,EAGJ,OAAOA,EAAOnF,QAAQ,SAAU,M,UCnBlCzF,GAAK,IAAIC,IAAGzB,KAEZqM,GAAgB,SAACC,GACrB,IAAIC,EAAYD,EAAMhJ,QAAO,SAACtG,GAAD,MAAyC,QAAhCA,EAAIkH,MAAM,KAAKsI,OAAO,GAAG,MAC/D,GAAIF,EAAMrN,SAAWsN,EAAUtN,OAAQ,CACrC,IAAIwN,EAAaH,EAAMrN,OAAOsN,EAAUtN,OACxCiK,GACE,kCAAkCuD,EAAa,uDAGnD,OAAOF,GAGIG,GAAmC,uCAAG,sBAAA3M,EAAA,+EACxC4M,KAAgCvH,MAAK,SAACwH,GAAD,OAASP,GAAcO,OADpB,2CAAH,qDAInCC,GAAyB,uCAAG,sBAAA9M,EAAA,+EAChC+M,KAAsB1H,MAAK,SAACwH,GAAD,OAASP,GAAcO,OADlB,2CAAH,qDAKzBD,GAA6B,uCAAG,8BAAA5M,EAAA,+EAEtBC,IAAK+M,iBAFiB,cAErC9K,EAFqC,OAECA,MAFD,SAGtB+K,GAAQ/M,MACzBgN,GAAOC,eAAeC,WACtBC,EAAcC,oBAAoBpL,IALK,cAGrCtB,EAHqC,yBAOlCA,EAAOiJ,KAAI,SAAC7K,GAAD,OAAWA,EAAK,UAPO,wCASzCkJ,QAAQqF,MAAR,MACM,IAAI/C,MAAM,4DAVyB,0DAAH,qDAc7BuC,GAAmB,uCAAG,gCAAA/M,EAAA,+EAEZC,IAAK+M,iBAFO,cAE3B9K,EAF2B,OAEWA,MACtCsL,EAASH,EAAcI,kBAAkBvL,GAHd,SAInBT,GAAG2C,WAAWoJ,GAJK,0DAKtB,IALsB,wBAOZ/L,GAAGiM,WAAWF,GAPF,eAO3BG,EAP2B,yBAQxBA,EAAOC,MAAM/D,KAAI,SAAC8B,GAAD,OAAUA,EAAK1O,QARR,wCAU/BiL,QAAQqF,MAAR,MACM,IAAI/C,MAAM,6CAXe,0DAAH,qDAenBqD,GAAa,uCAAG,WAAO5Q,GAAP,SAAA+C,EAAA,+EAEZ8N,GAAgBzE,MAAMpM,GAFV,8EAIzBiL,QAAQqF,MAAR,MACM,IAAI/C,MAAM,6CALS,yDAAH,sDASbuD,GAAY,uCAAG,WAAO9Q,GAAP,SAAA+C,EAAA,+EAEXgO,GAAW3E,MAAMpM,GAFN,8EAIxBiL,QAAQqF,MAAR,MACM,IAAI/C,MAAM,6CALQ,yDAAH,sDASZyD,GAAqB,SAACtC,GACjC,OAAOuC,GAAc7E,MAAMsC,GAAMtG,MAC/B,SAACrG,GAAD,OAAWA,KACX,SAACmH,GACC,MAAMA,M,2BCzEN1E,GAAK,IAAIC,IAAGzB,KAELkO,GAAsB,uCAAG,WAAOC,GAAP,eAAApO,EAAA,yDAC/BoO,EAD+B,0EAKb3M,GAAGiM,WAAWU,EAAU,IALX,cAK5BZ,EAL4B,yBAM3BA,EAAOI,MAAM/D,KAAI,SAAC8B,GAAD,OAAUA,EAAK1O,QANL,sCAQlCiL,QAAQqF,MAAR,MACM,IAAI/C,MAAM,2DATkB,yDAAH,sDAatB6D,GAAiB,uCAAG,WAAOpR,GAAP,SAAA+C,EAAA,+EAEhBsO,GAAkBjF,MAAMpM,GAFR,8EAI7BiL,QAAQqF,MAAR,MACM,IAAI/C,MAAM,2DALa,yDAAH,sDASjB+D,GAAe,uCAAG,WAAOC,GAAP,iCAAAxO,EAAA,+DAEvByO,EAAU,GAFa,kCAGFD,GAHE,gIAIXE,GADCxK,EAHU,GAIjBA,KAJiB,UAKLyK,EAAaxN,cAAcuN,GALtB,SAKnBpN,EALmB,UAQvBmN,EAAO,uBAAOA,GAAP,iBAAqBvK,EAArB,CAA2BA,KAAM5C,OARjB,0UAYpBmN,GAZoB,wCAc3BvG,QAAQqF,MAAR,MACM,IAAI/C,MAAJ,MAfqB,mFAAH,sDAmBfoE,GAAkB,SAACH,EAASI,EAAQC,GAAlB,OAC7BL,EAAQM,MAAK,SAACzN,GAAD,OAAWA,EAAM1E,OAASiS,MACvCJ,EAAQM,MAAK,SAACzN,GAAD,OAAWA,EAAM1E,OAASkS,MAE5BE,GAAoB,uCAAG,WAAOhQ,EAAOiQ,GAAd,mBAAAjP,EAAA,+EAEbC,IAAK+M,iBAFQ,cAE5B9K,EAF4B,OAEUA,MACpCgC,EAAOmJ,EAAcC,oBAAoBpL,GAHf,SAIfT,GAAGkI,SAASzF,GAJG,cAI5BgL,EAJ4B,OAmBhCA,GAbE,qFAIAD,EAJA,qCAOAjQ,EAPA,uCAUAkD,EAVA,iBAN8B,UAoB1BT,GAAG0N,WAAWjL,EAAMgL,EAAM,cAAe,IApBf,gEAsBhChH,QAAQqF,MAAR,MACM,IAAI/C,MACR,oEAxB8B,0DAAH,wDA6BpB4E,GAAU,uCAAG,WAAOjD,GAAP,eAAAnM,EAAA,sEAEtBmM,EAAarN,MAAO,EAChBoQ,EAAOG,GAAkBhG,MAAM8C,GAHb,SAIhB1K,GAAG0N,WAAWhD,EAAalP,IAAKiS,EAAM,cAAe,IAJrC,iCAKf,GALe,sCAOtBhH,QAAQqF,MAAR,MACM,IAAI/C,MAAM,gDARM,yDAAH,sDAYV8E,GAAkB,uCAAC,WAAOtQ,EAAMkD,GAAb,mBAAAlC,EAAA,6DACtBuP,EAAgBlC,EAAcC,oBAAoBpL,GAClDgL,EAAO,6FAEWlO,EAFX,YAFe,SAMTiO,GAAQ/M,MAAMgN,EAAOqC,GANZ,cAMtB3O,EANsB,yBAOL,IAAhBA,EAAO1B,QAPc,2CAAD,wDC3FzBuC,GAAK,IAAIC,IAAGzB,KAELuP,GAAiB,SAACtN,GAC7B,OAAOA,EAAMiC,MAAM,WAAW,GAAK,UAGxBsJ,GAAoB,SAACvL,GAChC,OAAOsN,GAAetN,GAAS,WAGpBuN,GAAiB,SAACvN,GAC7B,OAAOsN,GAAetN,GAAS,UAGpBoL,GAAsB,SAACpL,GAClC,OAAOsN,GAAetN,GAAS,sBAGpBwN,GAAiB,SAACxN,GAC7B,OAAOsN,GAAetN,GAAS,UAG3ByN,GAAc,SAACzN,GACnB,IAAMgC,EAAOwL,GAAexN,GAC5BT,GAAGmO,aAAa1L,IAGZ2L,GAAqB,SAAC3N,GAC1B,IAAMgC,EAAOoJ,GAAoBpL,GACjCT,GAAG0N,WAAWjL,EAAM,yCAA0C,cAAe,KAGzE4L,GAAoB,SAAC5N,GACzB,IAAMgC,EAAOuL,GAAevN,GAC5BT,GAAGmO,aAAa1L,IAGZ6L,GAAqB,SAAC7N,GAC1B,IAAMgC,EAAOuJ,GAAkBvL,GAC/BT,GAAGmO,aAAa1L,IAGL8L,GAAmB,uCAAG,WAAO9N,GAAP,SAAAlC,EAAA,sEAC3B+P,GAAmB7N,GADQ,uBAE3B4N,GAAkB5N,GAFS,uBAG3B2N,GAAmB3N,GAHQ,uBAI3ByN,GAAYzN,GAJe,2CAAH,sDAOnB+N,GAAoB,uCAAG,WAAO/N,GAAP,SAAAlC,EAAA,sEACtByB,GAAG2C,WAAWoL,GAAetN,IADP,wCAEhC8N,GAAoB9N,GAFY,0CAKtBT,GAAG2C,WAAWsL,GAAexN,IALP,mDAM1ByN,GAAYzN,GANc,yBAQtBT,GAAG2C,WAAWqJ,GAAkBvL,IARV,oDAS1B6N,GAAmB7N,GATO,yBAWtBT,GAAG2C,WAAWqL,GAAevN,IAXP,oDAY1B4N,GAAkB5N,GAZQ,yBActBT,GAAG2C,WAAWkJ,GAAoBpL,IAdZ,oDAe1B2N,GAAmB3N,GAfO,yBAiB5BgO,EAAiBhN,iCAAiCwM,GAAexN,GAAQA,GAjB7C,4CAAH,sDC/B3BsG,GAAQ,I,sCAlBZtI,M,uCAAQ,WAAOgN,EAAQiD,GAAf,6BAAAnQ,EAAA,6DAAyBoQ,EAAzB,+BAAkC,QACpCpL,EAAS,CACXsB,KAAM6J,EACNzJ,MAAOwG,EACPtH,OAAQwK,GAJJ,kBAOC9G,GAAatB,IAAIhD,GAAQK,MAC9B,SAACK,GACC,OAAOA,KAET,SAACS,GACC,MAAMA,MAZJ,2C,8ECQJ1E,I,QAAK,IAAI4O,IAAgBpQ,MCThBqQ,GDWgB,WAC3B,IACI1C,EADE2C,EAAQC,qBAEVzT,EAAQ,GACR0T,EAAYC,IAAMC,YAClBC,EAAmBF,IAAMC,YAGzBE,EAAY,GACZC,EAAmB,GAgBjBC,EAAa,uCAAG,WAAOC,GAAP,mCAAAhR,EAAA,yDAElBgR,EAAEC,iBAGEV,EALc,gBAMdzN,GAAa,2BAA2B,cAN1B,0BAQE,KAAd+N,EARY,gBASlB5H,GAAe,4CAA6C,QAT1C,0BAWJ,MAAT2E,EAXa,iBAYlB3E,GAAe,6BAA6B,QAZ1B,+BAelBE,GAAY,mBACNwC,EAAOiC,EAAM,GACbsD,EAAU7D,EAAcI,kBAAkB8C,GAC1CY,EAAY9D,EAAcoC,eAAec,GAEzC/Q,EAAO4R,KAAKC,MACZpU,EAAMiU,EAAU1R,EAAO,OArBX,UAyBV8R,EAAUpD,GAAc7E,MAAMsC,GAzBpB,UA0BI2F,EAAQjM,MAAK,SAACrG,GAC5B,OAAOA,KA3BG,SA0BVA,EA1BU,QA8BRpC,KAAOiU,EACb7R,EAAMlC,YAAcgU,EA/BN,UAmCDzR,EAAI,EAnCH,aAmCMA,EAAItC,EAAMmC,QAnChB,wBAoCFqS,EAAU,IAAIxU,EAAMsC,GAAGzC,KAAKuH,MAAM,KAAKsI,OAAO,GAAG,GApC/C,UAqCAhL,GAAG+P,QAAQL,EAAY3R,EAAO,IAAMH,EAAGkS,EAAYxU,EAAMsC,GAAItC,EAAMsC,GAAGwF,MArCtE,QAsCF9H,EAAMsC,GAAGzC,KAAKoF,SAAS,QACvBhD,EAAMjC,MAAM2H,KAAK,IAAIvG,EAAWgT,EAAY3R,EAAO,IAAMH,EAAGkS,EAAWhB,EAAMkB,UAAU,EAAGlB,EAAMrR,OAAS,IAAK,IAAIkS,OAElHpS,EAAMjC,MAAM2H,KAAK,IAAIvH,EAAWgU,EAAY3R,EAAO,IAAMH,EAAGkS,EAAWhB,EAAMkB,UAAU,EAAGlB,EAAMrR,OAAS,IAAK,IAAIkS,OAzChH,QAmCwB/R,IAnCxB,iFA8CJ,IAAImL,MAAM,oCA9CN,WAgDVkH,EAAW,KAhDD,UAkDNC,EAAc,IAAI5S,EAAWC,GAGlB,OAFf0S,EAAWC,EAAYtI,SAnDb,uBAsDA,IAAImB,MAtDJ,iEAyDJ,IAAIA,MAAM,qCAzDN,mCA8DJ/I,GAAG0N,WAAWlS,EAAKyU,EAAU,cAAe,IA9DxC,iEAgEJ,IAAIlH,MAAM,yBAhEN,QAkEdtB,GAAe,8BAlED,mDAqEdpG,GAAa,KAAIkB,YArEH,mFAAH,sDA6EnB,OAEI,kBAAC4N,EAAA,EAAD,KAEI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,YAClB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,IAAKxB,EAAWyB,SAAU,WAzFhDrB,EAAYJ,EAAU0B,QAAQ9Q,OAyF4C+Q,cAAY,WAChEvN,KAAK,OAAOwN,YAAY,iCAG1C,kBAACT,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBAClB,kBAACF,EAAA,EAAKG,MAAN,qBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,IAAKrB,EAAkBsB,SAAU,WA5FvDpB,EAAmBF,EAAiBuB,QAAQ9Q,OA4F4C+Q,cAAY,kBAC9EE,GAAG,WAAWD,YAAY,uCACxC,kBAACT,EAAA,EAAKW,KAAN,CAAW7U,UAAU,cAArB,eAIJ,oGAAyE,uBAAGuF,KAAM,sBAAT,gBAAzE,yCAGA,2BAAO4B,KAAK,OAAOqN,SA/GA,SAAClB,GACxBpD,EAAQoD,EAAEnS,OAAO+O,OA8GoCwE,cAAY,UAE7D,kBAAC,KAAD,CACII,UAAU,EACVC,aAAa,EACbC,WAAW,2BACXR,SAlHgB,SAAClB,GACzBjU,EAAQiU,GAkHA2B,aAAc,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC/CC,YAAa,UAGjB,kBAAC,GAAD,CAAcC,QAAS9B,EAAe+B,KAAK,aEjJxCC,GCUI,WAMlB,IAAMC,EAAM,uCAAG,sBAAAhT,EAAA,sEACRC,IAAKgT,SADG,OAEdC,aAAaC,WAAW,qBACxBD,aAAaC,WAAW,YACxBC,OAAOC,SAAWC,cAJJ,2CAAH,qDAOZ,OACC,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MAEzB,kBAACF,EAAA,EAAOG,MAAR,CAAczQ,KAAMqQ,cAAyBK,EAAOC,KAAK3Q,MACxD,kBAAC4Q,EAAA,EAAD,CAAOlW,IAAK2V,cAAyBK,EAAOC,KAAKjW,IAAKE,IAAK8V,EAAOC,KAAK/V,OAGxE,kBAAC,GAAD,CAAaiV,KAAK,iBAAiBgB,IAAI,0BACtCC,UAAW,kBAAC,GAAD,QAEZ,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,qBAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,oBAEnB,kBAACC,EAAA,EAAD,CAAK1W,UAAU,YACf,kBAAC0W,EAAA,EAAD,KAEC,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAIX,EAAOY,cAActR,MACvC,kBAAC,GAAD,CACC6Q,IAAKH,EAAOY,cAAc5W,OAGZgW,EAAOa,MAAM3K,KAAI,SAACf,GAAD,OACd,kBAAC,IAAD,CAASuL,OAAK,EAACC,GAAIxL,EAAK7F,KAAMvF,UAAU,OAAOoI,IAAKgD,EAAK7F,MACrD,6BACI,kBAAC4Q,EAAA,EAAD,CACIlW,IAAK2V,cAAyBxK,EAAKnL,IACnCE,IAAKiL,EAAKjL,IACV4W,MAAO,CAACC,OAAQ,WAEvB5L,EAAKgK,SAG7B,kBAAC,GAAD,CAAcgB,IAAKH,EAAOV,OAAOtV,IAAKkV,QAASG,EAAQ2B,OAAQ,kBCjD/CC,G,oHAKjB,MAAO,CACL,CACET,GAAI,SACJnR,MAAO,SACPzF,MAAO,6BACP8D,MAAO,0BACPwT,aAAc,8BACd/X,YAAa,8CAEf,CACEqX,GAAI,kBACJnR,MAAO,kBACPzF,MAAO,4BACP8D,MAAO,0BACPwT,aAAc,mCACd/X,YAAa,8C,cC1BNgY,I,QCSQ,WACrB,OACE,6BACE,kBAACC,GAAA,EAAD,CAAMrX,UAAU,cAAc+W,MAAO,CAAEO,MAAO,UAE1C,kBAACD,GAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAMvX,IAAK2V,6BAC7B,kBAACyB,GAAA,EAAKI,KAAN,KACI,kBAACJ,GAAA,EAAKK,MAAN,4BACA,kBAACL,GAAA,EAAKxC,KAAN,KAEI,kBAAC,gBAAD,CACI8C,kBAAkB,4BAClBC,eAAe,+DACfC,eAAe,QACfC,YAAY,mBACZC,eAAe,sBACf/X,UAAU,2BACVgY,YAAW,UAAKtC,OAAOC,SAASsC,SAArB,aAAkCvC,OAAOC,SAASuC,KAAlD,kBACXC,WAAY,CACRC,QAAS,gCACTC,cAAe,yBACfC,cAAe,iBACfC,WAAY,sBAEhBC,UAAWtB,GAASuB,+B,kBCjC3BC,GCQM,SAAC,GAAD,IAAG9P,EAAH,EAAGA,KAAM+P,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,UAAWnC,EAA9B,EAA8BA,GAAIoC,EAAlC,EAAkCA,QAAlC,OACnB,6BACE,2BACE1R,KAAK,QACLjI,KAAM0Z,EACNnC,GAAIA,EACJjC,SAAUmE,EACVhV,MAAOiF,EAAKuO,aACZ0B,QAASA,IAEX,yBAAK7Y,UAAU,aACb,yBAAKC,IAAK2I,EAAK/I,MAAOM,IAAKyI,EAAKtD,QAChC,0BAAMtF,UAAU,SAAS4I,EAAKtD,UCmGrBwT,I,4DAlGd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IASPC,KAAO,WAAO,IAAD,EAIR,EAAKC,MAFRC,EAFW,EAEXA,YACYC,EAHD,EAGXC,SAAYD,SAHD,EAKezD,OAAOC,SAA1BsC,EALI,EAKJA,SAAUC,EALN,EAKMA,KACdgB,IAEHxD,OAAOC,SAAP,UAAqBwD,EAArB,wBAA6ClB,EAA7C,aAA0DC,EAA1D,kBAlBiB,EAsBnBmB,eAAiB,SAAC/F,GAAO,IAChB8F,EAAa,EAAKH,MAAlBG,SACR,EAAKE,SAAS,CACbF,SAAS,gBAAMA,EAAP,CAAiBD,SAAU7F,EAAEnS,OAAOwC,QAC5CuV,aAAa,KA1BI,EA8BnBK,SAAW,SAACjG,GACXA,EAAEC,iBADe,MAKb,EAAK0F,MAFRC,EAHgB,EAGhBA,YACYC,EAJI,EAIhBC,SAAYD,SAJI,EAMUzD,OAAOC,SAA1BsC,EANS,EAMTA,SAAUC,EAND,EAMCA,KACdgB,IAEHxD,OAAOC,SAAP,UAAqBwD,EAArB,wBAA6ClB,EAA7C,aAA0DC,EAA1D,kBArCD,EAAKe,MAAQ,CACZC,aAAa,EACbE,SAAU,CACTD,SAAU,KALM,E,qDA2CT,IAAD,SAIJ3Z,KAAKyZ,MAFRC,EAFO,EAEPA,YACYC,EAHL,EAGPC,SAAYD,SAELX,EAAahZ,KAAKuZ,MAAlBP,UAER,OACC,kBAACnB,GAAA,EAAD,CAAMrX,UAAU,cAAc+W,MAAO,CAAEO,MAAO,UAC7C,kBAACD,GAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAMvX,IAAK2V,6BAC7B,kBAACyB,GAAA,EAAKI,KAAN,KACC,kBAACJ,GAAA,EAAKK,MAAN,6BACA,kBAACL,GAAA,EAAKI,KAAN,KACC,kBAACvD,EAAA,EAAD,CAAMqF,SAAU/Z,KAAK+Z,UACpB,6BACC,+CACA,yBAAKvZ,UAAU,iBACf,kBAAC,WAAD,KACC,uBACCuF,KAAK,wCACLpE,OAAO,SACPqY,IAAI,uBAHL,uBAKA,4BACEhB,EAAUrM,KAAI,SAACsN,GAAD,OACd,yBAAKzZ,UAAU,SAASoI,IAAG,cAASqR,EAAahD,KAChD,kBAAC,GAAD,CACC7N,KAAM6Q,EACNrR,IAAKqR,EAAahD,GAClBkC,SAAU,EAAKU,eACfT,UAAU,gBACV5Y,UAAU,gBACVyW,GAAE,gBAAWgD,EAAahD,IAC1BoC,QAASY,EAAatC,eAAiBgC,WAO7C,kBAAC,GAAD,CACCnZ,UAAU,YACVmV,QAAS3V,KAAKwZ,KACd7R,KAAK,SACLuS,UAAWR,EACX9D,KAAK,iB,GAzFmBuE,cCpBjBC,G,oDCYb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IACDE,MAAQ,CAAET,UAAW,IAFT,E,gMAMOtB,GAASuB,uB,OAA3BD,E,OACNhZ,KAAK8Z,SAAS,CAAEd,c,qIAGR,IACAA,EAAchZ,KAAKyZ,MAAnBT,UACR,OAAO,kBAAC,GAAD,eAAmBA,UAAWA,GAAehZ,KAAKuZ,Y,GAb7BY,aCXjBE,GCUA,WAEd,OACC,kBAAChE,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MAEzB,kBAACF,EAAA,EAAOG,MAAR,CAAczQ,KAAMqQ,cAAyBK,EAAOC,KAAK3Q,MACxD,kBAAC4Q,EAAA,EAAD,CAAOlW,IAAK2V,cAAyBK,EAAOC,KAAKjW,IAAKE,IAAK8V,EAAOC,KAAK/V,OAGxE,kBAAC0V,EAAA,EAAOS,OAAR,CAAeC,gBAAc,qBAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,oBACnB,kBAACC,EAAA,EAAD,CAAK1W,UAAU,YAEf,kBAAC0W,EAAA,EAAD,KAEC,kBAAC,GAAD,CAAaN,IAAI,yBAAyBhB,KAAK,QAC5CiB,UAAW,kBAACyD,GAAD,QAEd,kBAAC,GAAD,CAAa1D,IAAI,4BAA4BhB,KAAK,WAC/CiB,UAAW,kBAAC0D,GAAD,YCnBNC,I,OAAsB,SAACjB,GAEnC,OACC,yBAAK/Y,UAAW,yBAA0BmV,QAAS4D,EAAM5D,SAExD,yBAAKnV,UAAU,oCAEd,yBAAKA,UAAU,sCACd,4BACE+Y,EAAMkB,OACJ,uBAAG1U,KAAMwT,EAAMxH,QAASwH,EAAMxH,QAC9BwH,EAAMxH,UAKZ,yBAAKvR,UAAW,sCAEf,4BAAK+Y,EAAMxH,OAAO9K,MAAM,KAAK,GAAGsN,UAAU,EAAGgF,EAAMxH,OAAO9K,MAAM,KAAK,GAAGjF,a,SCf/D0Y,GAA4B,SAACnB,GAAU,MAGnBoB,mBAASpB,EAAM3X,MAHI,oBAG9CgZ,EAH8C,KAGlCC,EAHkC,KAQ/CC,EAAM,uCAAG,4BAAAhY,EAAA,+EAEFyW,EAAMwB,YAFJ,mDAGOxB,EAAMyB,SAHb,OAGNpZ,EAHM,OAIViZ,GAAqB,IAATjZ,GACZoK,GAAe,+BALL,wBAOVC,GAAYsN,EAAM1T,SAPR,0DAUXD,GAAa,KAAIC,QAAS,KAAInG,MAVnB,0DAAH,qDAcV,OACC,yBAAKc,UAAW,eAAiBoa,EAAa,mBAAqB,IAAK1F,cAAa,YAEpF,yBAAK1U,UAAU,mBACd,kBAACmW,EAAA,EAAD,CAAOlW,IAAK2V,yCAAwDzV,IAAK,eACxEH,UAAU,qBAEX,yBAAKA,UAAU,oBACd,4BAAK+Y,EAAM7Z,MACX,uBAAGc,UAAU,gBAAgB+Y,EAAM0B,MAElCL,EACE,yBAAKpa,UAAU,mBAAf,cACA,6BACD,kBAAC,GAAD,CAAcmV,QAASmF,EAAQZ,SAAUX,EAAMW,SAAUtE,KAAK,SAC3DpV,UAAU,oBAAoBiX,OAAQ,eAM7C,yBAAKjX,UAAW,4CACf,4BAAK+Y,EAAM7Z,MACX,uBAAGc,UAAU,gBAAgB+Y,EAAM0B,MAEjCL,EACC,yBAAKpa,UAAU,mBAAf,cACA,yBAAKA,UAAU,mBAAf,gB,oBChDM0a,GAAuB,SAAC3B,GAAW,IAExCvU,EAASuU,EAATvU,MAEP,OACC,yBAAKxE,UAAW,cAEf,yBAAKA,UAAU,qCACb+Y,EAAMlZ,MAEP,yBAAKG,UAAU,oBACd,4BACE+Y,EAAM7Z,KACP,uBAAGqG,KAAMwT,EAAMvU,OACd,kBAAC,KAAD,CAAiBmW,KAAMC,KAAmBC,cAAY,UAAUha,MAAM,aAIxE,yBAAKb,UAAU,SAEd,6BACC,kBAAC,IAAD,CAAM4W,GAAI,aACT,kBAAC,KAAD,CAAiB+D,KAAMG,OACvB,yBAAK9a,UAAU,SAAf,aACA,yBAAKA,UAAU,SAAS+Y,EAAMgC,UAAYhC,EAAMgC,UAAY,OAI9D,6BACC,kBAAC,IAAD,CAAMnE,GAAI,kBACT,kBAAC,KAAD,CAAiB+D,KAAMK,OACvB,yBAAKhb,UAAU,SAAf,iBACA,yBAAKA,UAAU,SAAS+Y,EAAMkC,eAAiBlC,EAAMkC,eAAiB,OAIxE,6BACC,uBAAG1V,KAAMf,GACR,kBAAC,KAAD,CAAiBmW,KAAMO,OACvB,yBAAKlb,UAAU,SAAf,eAOL,yBAAKA,UAAW,uCACf,4BAAK+Y,EAAM7Z,MACX,uBAAGc,UAAU,sBAAsB+Y,EAAM0B,SCpDhCU,GAAqB,SAACpC,GAClC,OACC,yBAAK/Y,UAAU,cAEd,yBAAKA,UAAU,mBACd,kBAACmW,EAAA,EAAD,CAAOlW,IAAK2V,kCAAiDzV,IAAK,QACjEH,UAAU,qBAEX,yBAAKA,UAAU,oBACd,4BAAK+Y,EAAM7Z,MACX,uBAAGc,UAAU,gBAAgB+Y,EAAMqC,MACnC,yBAAKpb,UAAU,mBAAf,UAMF,yBAAKA,UAAU,oBACd,4BAAK+Y,EAAM7Z,MACX,uBAAGc,UAAU,gBAAgB+Y,EAAMqC,SC7BxBC,G,oDCMb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IACDE,MAAQ,CAAEpJ,MAAO,KAAMyL,UAAW,MAFtB,E,8DAKDzL,EAAOyL,GAEvB9b,KAAK8Z,SAAS,CACZzJ,MAAOA,EACPyL,UAAWA,M,+BAMb,OAAI9b,KAAKyZ,MAAMqC,UAGX,6BACE,qDACA,6BAASvE,MAAO,CAAEwE,WAAY,aAC3B/b,KAAKyZ,MAAMpJ,OAASrQ,KAAKyZ,MAAMpJ,MAAMvJ,WACtC,6BACC9G,KAAKyZ,MAAMqC,UAAUE,iBAMvBhc,KAAKuZ,MAAM0C,a,GA9BMzI,IAAM2G,W,4CCJ9B+B,GAAW,GCDAC,G,oDDad,WAAY5C,GAAQ,IAAD,6BAClB,cAAMA,GACN2C,GAAW,GACX,EAAK3C,MAAMzX,MAAMnC,MAAMyc,SAAQ,SAACC,GAAD,OAAUH,GAAS1U,KAAK,CAAC6U,EAAKvb,SAASub,EAAKxb,eAHzD,E,wDAelB,MAAO,CAACyb,MAJIC,KAAKC,IAAIC,MAAM,KAAMP,GAASvP,KAAI,SAAC+P,GAAD,OAAOA,EAAE,OAIjCC,KAHXJ,KAAKC,IAAIC,MAAM,KAAMP,GAASvP,KAAI,SAAC+P,GAAD,OAAOA,EAAE,OAGpBE,MAFtBL,KAAKM,IAAIJ,MAAM,KAAMP,GAASvP,KAAI,SAAC+P,GAAD,OAAOA,EAAE,OAEPI,KADrCP,KAAKM,IAAIJ,MAAM,KAAMP,GAASvP,KAAI,SAAC+P,GAAD,OAAOA,EAAE,U,kCAStD,IAAIK,EAAS/c,KAAKgd,YAClB,MAAO,EAAED,EAAOT,MAAMS,EAAOH,OAAO,GAAIG,EAAOJ,KAAKI,EAAOD,MAAM,K,qCAQjE,IAAIG,EAAsB,IAAtBA,EAAkC,IAItC,SAASC,EAAO5O,GACf,IAAI6O,EAAMZ,KAAKY,IAAI7O,EAAMiO,KAAKa,GAAK,KAC/BC,EAAQd,KAAKtR,KAAK,EAAIkS,IAAQ,EAAIA,IAAQ,EAC9C,OAAOZ,KAAKC,IAAID,KAAKM,IAAIQ,EAAOd,KAAKa,KAAMb,KAAKa,IAAM,EAIvD,SAASE,EAAKC,EAAOC,EAASC,GAC7B,OAAOlB,KAAKmB,MAAMnB,KAAKtR,IAAIsS,EAAQC,EAAUC,GAAYlB,KAAKoB,KAG/D,IAAIZ,EAAS/c,KAAKgd,YACdY,EAAUb,EAAOJ,KAAOI,EAAOD,KAG/Be,GAAgBD,EAAU,EAAMA,EAAU,IAAOA,GAAW,IAE5DE,EAAUR,EAAK,IAAKL,GAHLC,EAAOH,EAAOT,OAASY,EAAOH,EAAOH,QAAUL,KAAKa,IAInEW,EAAUT,EAAK,IAAKL,EAAiBY,GAEzC,OAAOtB,KAAKM,IAAIiB,EAASC,EAvBV,M,+BA2Bf,OACC,kBAACC,GAAA,EAAD,CAAKC,OAAQje,KAAKke,YAAaZ,KAAMtd,KAAKme,gBAEzC,kBAACC,GAAA,EAAD,CACCC,YAAY,0EACZte,IAAI,uDAGL,kBAACue,GAAA,EAAD,CAAQC,SAAUrC,GAAS,KAC3B,kBAACsC,GAAA,EAAD,CAAUC,MAAM,OAAOC,UAAWxC,KAClC,kBAACoC,GAAA,EAAD,CAAQC,SAAUrC,GAASA,GAASla,OAAO,U,GA7ETmY,a,gCE2EvBwE,GAnEY,SAAC,GAAgD,IAA9C3Z,EAA6C,EAA7CA,MAAO+M,EAAsC,EAAtCA,OAAQ6M,EAA8B,EAA9BA,iBAAkB9c,EAAY,EAAZA,MAAY,EAE7C6Y,mBAAS,IAFoC,oBAElEkE,EAFkE,KAE1DC,EAF0D,KAQjEC,EAAU,uCAAG,gCAAAjc,EAAA,sEAEQ,kDACbsB,EAAQ+L,EAAcqC,eAAeT,GACrCqF,EAAKhT,EACLzC,EAASoQ,EALJ,SAML6M,EAAiB,CACfvd,MAAOS,EAAMpC,KACbgC,QAAS,gBACTH,MAAOyD,EACPxD,OAAQM,EAAM/B,IACd4B,UAEJyV,EACA4H,oBAAkBC,MAZH,mDAFR,OAiBXjT,GAAe,+BAjBJ,kDAmBbpG,GAAa,2CAnBA,0DAAH,qDA2BVsZ,EAAY,SAACvd,GACfmd,EAAU,GAAD,oBAAKD,GAAL,CAAald,KAGlBoQ,EADApQ,EAAOmD,SAAS,mBACPnD,EAEAA,EAAOwd,OAAO,mBAG3BJ,KAGJ,OACI,0BAAMve,UAAW,cAAe+W,MAAO,CAAEO,MAAO,UAC5C,0CACA,kBAACsH,GAAA,EAAD,KAEI,kBAACC,GAAA,EAAD,CAAM5e,IAAI,iBACL,SAACsR,GAAD,OACG8M,EAAO/Z,SAAP,UAAmBiN,IAAY,KAC3B,kBAAC,GAAD,CACInJ,IAAG,UAAOmJ,GACVA,OAAM,UAAOA,GACb0I,QAAU,EACV9E,QAAW,kBAAMuJ,EAAU,GAAD,OAAInN,aCzE/CuN,GC8CAC,qBAnCQ,SAAChG,GAAW,IAAD,EAChBoB,mBAAS,IAAnB5I,EAD0B,qBAE1B/M,EAAgBuU,EAAhBvU,MAAOlD,EAASyX,EAATzX,MACP0d,EAAsBC,0BAAgBza,GAAtCwa,mBAUDZ,EAAgB,uCAAG,WAAOjT,EAASyL,EAAIzP,EAAMrG,GAA1B,SAAAwB,EAAA,+EAEjBkQ,EAAiBrM,uBAAuBgF,EAAQpK,MAAMoK,EAAQhK,OAAOG,GAFpD,uBAGjB0d,EAAmB7T,EAASyL,EAAIzP,EAAMrG,GAHrB,uDAKvBsE,GAAa,mDALU,yDAAH,4DAStB,OACC,6BACC,kBAAC,GAAuB,CACvBZ,QACA+M,SACA6M,mBACA9c,cCvCW4d,G,oDCmBd,WAAYnG,GAAQ,IAAD,8BAClB,cAAMA,IAgBPoG,KAAO,WAAQ,EAAK7F,SAAS,CAAC8F,WAAW,KAjBtB,EAsBnBC,KAtBmB,sBAsBZ,wCAAA/c,EAAA,yDACN,EAAKgX,SAAS,CAAC8F,WAAW,IAC1B,EAAKlgB,KAAO,EAAK+Z,MAAMqG,WACvB,EAAKlgB,YAAc,EAAK6Z,MAAMsG,kBACzB,EAAKje,MAAMpC,OAAS,EAAKA,MAAQ,EAAKoC,MAAMlC,cAAgB,EAAKA,YAJhE,wBAKL,EAAKkC,MAAMpC,KAAO,EAAKA,KACvB,EAAKoC,MAAMlC,YAAc,EAAKA,YAE1B6U,EAAc,IAAI5S,EAAW,EAAKC,OAElC0S,EAAWC,EAAYtI,QAErB6H,EAAU7D,EAAcI,kBAAkB,EAAKvL,OAE/C5C,EAAM,EAAKN,MAAM/B,IAAIkH,MAAM,KAC3B+Y,EAAa5d,EAAIA,EAAIJ,OAAS,GAC9BjC,EAAMiU,EAAUgM,EAhBjB,UAmBEzb,EAAK,IAAI4O,IAAgBpQ,KAnB3B,UAoBEwB,EAAG0N,WAAWlS,EAAKyU,EAAU,cAAe,IApB9C,QAsBJxI,GAAe,+BAtBX,mDAyBJpG,GAAa,6BAzBT,2DAtBY,EAwDnBqa,WAAa,SAACC,GAAU,EAAKpG,SAAU,CAACgG,WAAYI,EAAIve,OAAOwC,SAxD5C,EAyDnBgc,kBAAoB,SAACD,GAAU,EAAKpG,SAAU,CAACiG,kBAAmBG,EAAIve,OAAOwC,SAzD1D,EA+DnBic,eAAiB,SAACtM,GACH,UAAVA,EAAElL,KAAmB,EAAK6Q,MAAMmG,WACnC,EAAKC,OAEQ,WAAV/L,EAAElL,KAAoB,EAAK6Q,MAAMmG,YACpC,EAAK9F,SAAU,CAACgG,WAAY,EAAKpgB,OACjC,EAAKoa,SAAU,CAACiG,kBAAmB,EAAKngB,cACxC,EAAKka,SAAS,CAAC8F,WAAW,MApE3B,EAAK9d,MAAQyX,EAAMzX,MACnB,EAAKpC,KAAO6Z,EAAMzX,MAAMpC,KACxB,EAAKE,YAAc2Z,EAAMzX,MAAMlC,YAC/B,EAAKygB,MAAQ9G,EAAM8G,MACnB,EAAKrb,MAAQuU,EAAMvU,MACnB,EAAKyU,MAAQ,CACZmG,WAAW,EACXE,WAAY,EAAKpgB,KACjBqgB,kBAAmB,EAAKngB,aAVP,E,qDA2ElB,OACC,yBAAKY,UAAU,uCACd,yBAAKA,UAAU,eAEZR,KAAKyZ,MAAMmG,UACT,yBAAKpf,UAAW,eACjB,2BAAOmH,KAAM,OAAQnH,UAAU,kBAAkB8f,UAAWtgB,KAAKogB,eAChEjc,MAAOnE,KAAKyZ,MAAMqG,WAAY9K,SAAUhV,KAAKigB,WAAY/K,cAAa,eAEtE,wBAAI1U,UAAU,cAAcR,KAAKN,MAEnCM,KAAKyZ,MAAMmG,UACT,yBAAKpf,UAAW,eACjB,2BAAOmH,KAAM,OAASnH,UAAU,OAAO8f,UAAWtgB,KAAKogB,eACtDjc,MAAOnE,KAAKyZ,MAAMsG,kBAAmB/K,SAAUhV,KAAKmgB,kBACpDjL,cAAa,cAHb,MAKA,uBAAG1U,UAAU,cAAcR,KAAKJ,cAGnCI,KAAKqgB,MACJ,6BACErgB,KAAKyZ,MAAMmG,UACV,kBAAC,GAAD,CAAcjK,QAAS3V,KAAK6f,KAAMjJ,IAAI,wBAAwBa,OAAQ,YACtE,kBAAC,GAAD,CAAc9B,QAAS3V,KAAK2f,KAAM/I,IAAI,wBAAwBa,OAAQ,YACzE,yBAAKjX,UAAU,eACd,kBAAC,GAAD,CAAaoV,KAAK,QAAQgB,IAAI,yBAC7BC,UAAW,kBAAC0J,GAAD,CAAgBze,MAAO9B,KAAK8B,MAAOkD,MAAOhF,KAAKgF,YAG3D,U,GAlHiBmV,a,WCVVqG,I,4DCad,WAAYjH,GAAQ,IAAD,8BAClB,cAAMA,IACDnQ,KAAOmQ,EAAM1Z,MAFA,E,qDAMlB,OACCG,KAAKoJ,KAAKpH,OAAS,EAClB,kBAACye,GAAA,EAAD,CAAUC,SAAU,KAClB1gB,KAAKoJ,KAAKuD,KAAI,SAAUnL,GACxB,OACC,kBAACif,GAAA,EAASE,KAAV,CAAe/X,IAAKpH,EAAOd,UACzBc,EAAOof,oBAIV,yBAAKpgB,UAAW,YAEjB,kBAACmW,EAAA,EAAD,CAAOlW,IAAK2V,wCACZ,+E,GA1BwB5C,IAAM2G,Y,UCNpB0G,I,QCUS,SAACtH,GAAW,IAAD,EAENoB,oBAAS,GAFH,oBAE3BmG,EAF2B,KAEnBC,EAFmB,KAMlC,OACC,6BAEC,kBAAC,GAAD,CAAcpL,QALD,kBAAMoL,GAAWD,IAKClL,KAAK,SAASpV,UAAU,0BACvD,kBAACwW,GAAA,EAAD,CAAUgK,GAAIF,GACb,6BAEEvH,EAAMzX,MAAMnC,MAAMgN,KAAI,SAAUnL,GAChC,OAAO,yBAAKoH,IAAKpH,EAAOV,SAAWU,EAAOX,UAAWL,UAAU,cAC7DgB,EAAOV,SADF,KACcU,EAAOX,mBCf5B0D,I,QAAK,IAAI4O,IAAgBpQ,MCVhBke,GDeW,SAAC1H,GAE1B,IAAI1Z,EAAQ,GAFwB,EAIR8a,oBAAS,GAJD,oBAI7BmG,EAJ6B,KAIrBC,EAJqB,KAM7Bjf,EAAgByX,EAAhBzX,MAAOkD,EAASuU,EAATvU,MAQR6O,EAAa,uCAAG,wCAAA/Q,EAAA,yDAEA,IAAjBjD,EAAMmC,OAFW,gBAGpB+J,GAAe,4BAA6B,QAHxB,uBAKpBE,GAAY,mBACNgI,EAAY9D,EAAcoC,eAAevN,GAEzC1C,EAAO4R,KAAKC,MACZpU,EAAM+B,EAAM/B,IATE,SAcVoC,EAAI,EAdM,aAcHA,EAAItC,EAAMmC,QAdP,wBAedqS,EAAY,IAAMxU,EAAMsC,GAAGzC,KAAKuH,MAAM,KAAKsI,OAAO,GAAG,GAfvC,UAgBZhL,GAAG+P,QAAQL,EAAY3R,EAAO,IAAMH,EAAIkS,EAAWxU,EAAMsC,GAAItC,EAAMsC,GAAGwF,MAhB1D,QAiBd9H,EAAMsC,GAAGzC,KAAKoF,SAAS,QAC1BhD,EAAMjC,MAAM2H,KAAK,IAAIvG,EAAWgT,EAAY3R,EAAO,IAAMH,EAAIkS,EAAWrP,EAAMuP,UAAU,EAAGvP,EAAMhD,OAAS,IAAK,IAAIkS,OAEnHpS,EAAMjC,MAAM2H,KAAK,IAAIvH,EAAWgU,EAAY3R,EAAO,IAAMH,EAAIkS,EAAWrP,EAAMuP,UAAU,EAAGvP,EAAMhD,OAAS,IAAK,IAAIkS,OApBlG,QAce/R,IAdf,gFAyBb,IAAImL,MAAM,oCAzBG,WA2BhBkH,EAAW,KA3BK,UA6BfC,EAAc,IAAI5S,EAAWC,GAGjB,OAFhB0S,EAAWC,EAAYtI,SA9BJ,uBAiCZ,IAAImB,MAjCQ,iEAoCb,IAAIA,MAAM,qCApCG,mCAyCb/I,GAAG0N,WAAWlS,EAAKyU,EAAU,cAAe,IAzC/B,iEA2Cb,IAAIlH,MAAM,yBA3CG,QA6CpBtB,GAAe,8BA7CK,0EAAH,qDAkDlB,OACC,6BACC,kBAAC,GAAD,CAAc2J,QA1DF,kBAAMoL,GAAWD,IA0DElL,KAAK,eAAepV,UAAU,wBAAwBiX,OAAQ,UAC7F,kBAACT,GAAA,EAAD,CAAUgK,GAAIF,GACb,6BACC,kBAAC,KAAD,CACCxL,UAAU,EACVC,aAAa,EACbC,WAAW,2BACXR,SA/DsB,SAAClB,GAC5BjU,EAAQiU,GA+DH2B,aAAc,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAC/CC,YAAa,UAEd,kBAAC,GAAD,CAAcC,QAAS9B,EAAe+B,KAAK,SAASpV,UAAU,aAAaiX,OAAQ,cE5F1EyJ,I,QCMA,WACd,OACC,yBAAK1gB,UAAU,UAAf,UCRa2gB,GCOC,SAAC5H,GAAkB,IACzBlY,EAAyBkY,EAAzBlY,MAAOsK,EAAkB4N,EAAlB5N,QAASC,EAAS2N,EAAT3N,KACxB,OACE,yBAAKpL,UAAU,WACb,8BAAOa,GACP,2BAAIsK,GACHC,GACC,uBAAG7F,KAAM6F,EAAK7F,KAAMpE,OAAO,SAASqY,IAAI,uBACrCpO,EAAK9F,SCfDsb,GCaG,SAAC7H,GAAW,IAAD,EACFoB,qBADE,oBACrB7Y,EADqB,KACduf,EADc,KAErBthB,EAAcwZ,EAAdxZ,IAAKsgB,EAAS9G,EAAT8G,MAoBZ,OAdU,uCAAG,4BAAAvd,EAAA,0DACRhB,EADQ,sEAKXuf,EALW,SAKIC,EAAY3Q,cAAc5Q,GAL9B,oFAOP6L,EAAO,CAAC7F,KAAMhG,EAAK+F,MAAO/F,GAC9B6F,GAAa,KAAMC,QAAS,KAAMnG,KAAMkM,GAR7B,0DAAH,oDAYV2V,GAGC,kBAAC,WAAD,KACEzf,EACA,kBAAC0f,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAEhB,kBAAC,IAAD,CACC9Y,IAAK9G,EAAMpC,KACXc,UAAU,SACV4W,GAAI,eAAiBiJ,EAAQ,MAAQ,WAAasB,mBAAmB7f,EAAM/B,MAE3E,kBAAC,GAAD,CAAWL,KAAMoC,EAAMpC,KAAMkc,KAAM9Z,EAAMlC,YAAaC,MAAOiC,EAAMjC,UAE5D,OC/CE+hB,GCaG,SAACrI,GAAW,IAAD,EAEMoB,qBAFN,oBAErBkH,EAFqB,KAEVC,EAFU,KAGrBC,EAA4BxI,EAA5BwI,WAAY/c,EAAgBuU,EAAhBvU,MAAOqb,EAAS9G,EAAT8G,MAoB1B,OAdgB,uCAAG,4BAAAvd,EAAA,0DACd+e,EADc,0EAKAE,IALA,OAKbC,EALa,OAMjBF,EAAaE,GANI,gDAQjBpc,GAAa,KAAMC,QAAS,KAAMnG,MARjB,yDAAH,oDAYhBuiB,GAGC,6BACEJ,EACE,kBAACK,EAAA,EAAD,CAAK1hB,UAAU,6BAChB,kBAACghB,EAAA,EAAD,CAAK5Y,IAAI,QAAQuZ,GAAI,GAAIC,GAAI,GAAIX,GAAI,GAAIC,GAAI,EAAGW,GAAI,IACpD,kBAACb,EAAA,EAAD,CAAK5Y,IAAI,QAAQuZ,GAAI,GAAIC,GAAI,GAAIX,GAAI,GAAIC,GAAI,GAAIW,GAAI,IACpD,kBAACH,EAAA,EAAD,KAEEL,EAAU7f,OAAS,EACnB6f,EAAUlV,KAAI,SAAC5M,EAAKuiB,GAAN,OACb,kBAAC,GAAD,CAAW1Z,IAAK0Z,EAAKviB,IAAKA,EAAKiF,MAAOA,EAAOqb,MAAOA,OAErD,wBAAI9I,MAAO,CAACgL,UAAW,SAAUC,OAAQ,aAAc1K,MAAO,SAA9D,sDAMH,kBAAC0J,EAAA,EAAD,CAAK5Y,IAAI,QAAQuZ,GAAI,GAAIC,GAAI,GAAIX,GAAI,GAAIC,GAAI,EAAGW,GAAI,KAEnD,6BACD,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAQI,KAAK,aC3DHC,I,QCcM,SAACnJ,GAErB,OACC,4BAAQ5D,QAAS4D,EAAM5D,QAASnV,UAAW,kBAAoB+Y,EAAM/Y,UAAY+Y,EAAM/Y,UAAY,IAClGmH,KAAO4R,EAAM5R,KAAO4R,EAAM5R,KAAO,SAAYuS,WAAWX,EAAMW,UAAWX,EAAMW,SAC/EhF,cAAcqE,EAAM9B,OAAS8B,EAAM9B,OAAS,oBAC3C8B,EAAM3C,IACN,kBAACD,EAAA,EAAD,CAAOlW,IAAK2V,cAAyBmD,EAAM3C,IAAKjW,IAAK4Y,EAAM3D,KAAMpV,UAAU,WACzE,KACF+Y,EAAM3D,Q,UCvBK+M,GCSK,SAACpJ,GAAU,MAGF/F,YAAe,GAHb,oBAGvBsN,EAHuB,KAGfC,EAHe,KAmB9B,OACC,2BACC,gBAAC,GAAD,CAAcpL,QAbE,WACjBoL,GAAU,IAYyBnK,IAAK2C,EAAM3C,IAAKhB,KAAM2D,EAAM3D,OAC9D,gBAACgN,GAAA,EAAD,CAAOC,KAAM/B,EAAQgC,OAPL,WACjB/B,GAAU,KAOR,gBAAC6B,GAAA,EAAM3K,KAAP,KACEsB,EAAM1C,c,UCjCGkM,GCSA,SAACxJ,GACf,OAAO,kBAAC2I,EAAA,EAAD,CAAK1hB,UAAU,iBACrB,kBAACghB,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,IACjB,kBAACD,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,QAChB,kBAAC,cAAD,CACCgB,KAAMlJ,EAAMkJ,KACZhE,MAAO,aAGT,kBAAC+C,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,MCJNuB,I,QAAgB,WAsB3B,OAjBoB,uCAAG,8BAAAlgB,EAAA,sEACDC,IAAK+M,iBADJ,YACjBmT,EADiB,4BAGfje,EAAQie,EAAQje,MACfgR,aAAakN,QAAQ,YAJP,iCAMjBlN,aAAamN,QAAQ,YAAY,GANhB,UAOThT,EAAc4C,qBAAqB/N,GAP1B,0DASfY,GAAa,wCATE,0DAAH,oDAepBwd,GAGE,kBAACC,EAAA,EAAD,KAEE,kBAACnB,EAAA,EAAD,CAAKtZ,IAAK,MACR,kBAAC4Y,EAAA,EAAD,CAAK5Y,IAAK,OAAQuZ,GAAI,GAAIV,GAAI,IAC9B,kBAACD,EAAA,EAAD,CAAK5Y,IAAK,OAAQuZ,GAAI,GAAIV,GAAI,EAAGjhB,UAAU,qBACzC,kBAACmW,EAAA,EAAD,CAAOlW,IAAK2V,cAAyBkN,EAAK5M,KAAM/V,IAAK2iB,EAAK5jB,QAE5D,kBAAC8hB,EAAA,EAAD,CAAK5Y,IAAK,OAAQuZ,GAAI,GAAIV,GAAI,KAGhC,kBAACS,EAAA,EAAD,CAAKtZ,IAAK,MACR,kBAAC4Y,EAAA,EAAD,CAAK5Y,IAAK,OAAQuZ,GAAI,GAAIV,GAAI,IAC9B,kBAACD,EAAA,EAAD,CAAK5Y,IAAK,OAAQuZ,GAAI,GAAIV,GAAI,EAAGjhB,UAAU,YACzC,2BACG8iB,EAAK1jB,YADR,IACqB,uBAAGmG,KAAMud,EAAK1X,MAAO0X,EAAKC,MAD/C,MAIF,kBAAC/B,EAAA,EAAD,CAAK5Y,IAAK,OAAQuZ,GAAI,GAAIV,GAAI,KAGhC,kBAACS,EAAA,EAAD,CAAKtZ,IAAK,MACR,kBAAC4Y,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,IAChB6B,EAAKE,OAAO7W,KAAI,SAACtM,GAAD,OACf,kBAACmhB,EAAA,EAAD,CAAKW,GAAI,EAAGV,GAAI,EAAGjhB,UAAU,WAAWoI,IAAKvI,EAAMuI,KACjD,kBAAC+N,EAAA,EAAD,CACElW,IAAK2V,cAAyB/V,EAAM8a,KACpCxa,IAAKN,EAAMM,IACXH,UAAU,eAEZ,2BAAIH,EAAMuV,UAGd,kBAAC4L,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,KAGlB,CAAC,KAAM,MAAM9U,KAAI,SAAC/D,GAAD,OAChB,kBAACsZ,EAAA,EAAD,CAAKtZ,IAAKA,GACR,kBAAC4Y,EAAA,EAAD,KACE,kBAAC,GAAD,WAKN,kBAACU,EAAA,EAAD,CAAKtZ,IAAK,MACR,kBAAC4Y,EAAA,EAAD,CAAK5Y,IAAK,OAAQuZ,GAAI,GAAIV,GAAI,IAC7B6B,EAAKG,OAAO9W,KAAI,SAACtM,GAAD,OACf,kBAACmhB,EAAA,EAAD,CAAKW,GAAI,EAAGV,GAAI,EAAGjhB,UAAU,oBAAoBoI,IAAKvI,EAAMuI,KAC1D,kBAAC+N,EAAA,EAAD,CACElW,IAAK2V,cAAyB/V,EAAM8a,KACpCxa,IAAKN,EAAMM,IACXH,UAAU,eAEZ,2BAAIH,EAAMuV,UAGd,kBAAC4L,EAAA,EAAD,CAAK5Y,IAAK,OAAQuZ,GAAI,GAAIV,GAAI,QC5FvBuB,M,iECEE5Z,GAASsa,EAAQ,KAA1BC,QAOFC,GAAY,uCAAG,WAAOC,GAAP,iBAAA/gB,EAAA,6DACdyB,EAAK,IAAIuf,IAAW/gB,KADN,SAEAA,IAAK+M,iBAFL,iDAGY/M,IAAKghB,QAHjB,qCAKfC,EALe,+BAAAlhB,EAAA,MAKV,WAAOmhB,GAAP,SAAAnhB,EAAA,sEAAwBmhB,EAAO/c,WAAW2c,GAA1C,mFALU,gEAMNG,EAAGzf,GANG,4FAQHxB,IAAK+M,iBARF,yEAAH,sDAkBZoU,GAAQ,uCAAG,WAAOL,EAAa5I,GAApB,yBAAAnY,EAAA,wFACWmY,EAAKkJ,SADhB,4HAE2C,IAAtDC,OAFW,GAEIC,cAAcD,OAAOP,IAFzB,2CAEsD,GAFtD,2UAGT,GAHS,4EAAH,wDC3BCS,GDuCO,uCAAG,WAAOT,EAAaU,GAApB,eAAAzhB,EAAA,yDAEL,MAAf+gB,GAAoC,MAAbU,GAAqC,KAAhBV,GAAoC,KAAdU,EAF9C,iEAILnb,GAAKmb,GAJA,OAIlBtJ,EAJkB,OAMxB2I,GAAaC,GAAa1b,MAAK,SAACwH,GAC1BA,EAGJuU,GAASL,EAAa5I,GAAM9S,MAAK,SAACwH,GAC7BA,EAAO/J,GAAa,yCAGvBqV,EAAKuJ,MAAMC,IAAIrb,GAAKya,IAAc1b,MAAK,SAACwH,GACnCA,EACH3D,GAAe,iFACPpG,GAAa,mDAVdA,GAAa,uCAPF,2CAAH,wDE3BhB8e,I,4DACJ,WAAYnL,GAAQ,IAAD,8BACjB,cAAMA,IAcRoL,eAfmB,sBAeF,sBAAA7hB,EAAA,+EAEAwe,EAAYzR,sBAAsB1H,MAAK,SAACwH,GACnD,EAAK4L,UAAY5L,EAAI3N,OACrB,EAAK8X,SAAS,CAAE8K,iBAAiB,OAJtB,wEAObhf,GAAa,KAAMC,SAPN,wDAfE,EA8BnBgf,mBA9BmB,sBA8BE,sBAAA/hB,EAAA,+EAEJwe,EAAY5R,gCAAgCvH,MAAK,SAACwH,GAC7D,EAAK8L,eAAiB9L,EAAMA,EAAI3N,OAAS,EACzC,EAAK8X,SAAS,CAAEgL,sBAAsB,OAJvB,wEAOjBlf,GAAa,KAAMC,SAPF,wDA9BF,EA6CnBkf,kBAAoB,SAAC7E,GAAU,EAAKpG,SAAU,CAACkL,aAAc9E,EAAIve,OAAOwC,SA3CtE,EAAKsV,MAAQ,CACXmL,iBAAiB,EACjBE,sBAAsB,EACtBE,aAAc,IAEhB,EAAKzJ,UAAY,EAAKoJ,iBACtB,EAAKlJ,eAAiB,EAAKoJ,qBARV,E,qDA+CT,IAAD,OACP,OACE,kBAACxB,EAAA,EAAD,KACE,kBAACjE,GAAA,EAAD,KAEE,kBAAC,GAAD,CACEpa,MAAOhF,KAAKuZ,MAAMvU,MAClB3E,MAEE,kBAAC,KAAD,CACEI,IAAI,aACJwkB,WAAY7O,oCACZ5V,UAAU,2BACVG,IAAK,kBAGTjB,KAAM,kBAACwlB,GAAA,EAAD,CAAOzkB,IAAI,cACjBwa,KAAM,kBAACiK,GAAA,EAAD,CAAOzkB,IAAI,SACjB8a,UAAWvb,KAAKyZ,MAAMmL,gBAAkB5kB,KAAKub,UAAY,KACzDE,eACEzb,KAAKyZ,MAAMqL,qBAAuB9kB,KAAKyb,eAAiB,OAG5D,wBAAIlE,MAAO,CAAEgL,UAAW,WAAxB,WACA,yBAAK/hB,UAAW,eAEd,kBAAC2kB,GAAA,EAAD,CAAY3kB,UAAU,QAEpB,kBAAC4kB,GAAA,EAAD,CACIpQ,SAAUhV,KAAK+kB,kBACf5P,YAAY,iBACZkQ,aAAW,iBACXC,mBAAiB,iBAGrB,kBAACH,GAAA,EAAWI,OAAZ,KACE,kBAACC,GAAA,EAAD,CAAQxN,QAAQ,kBACRrC,QAAS,kBAAM2O,GAAU,EAAK7K,MAAMuL,aAAc,EAAKzL,MAAMvU,MAAO,EAAKygB,oBAC/E,kBAAC,KAAD,CAAiBtK,KAAMuK,KAAQrK,cAAY,UAAUha,MAAM,WAF7D,gBAQH,kBAACge,GAAA,EAAD,CAAM5e,IAAI,iBACR,SAACsR,GAAD,OAAY,kBAAC,GAAD,CAAYnJ,IAAG,UAAKmJ,GAAUA,OAAM,UAAKA,GAAU0I,QAAQ,c,GA7FvDjH,IAAM2G,YAqGtBoF,gBAAUmF,IChHVnF,gBAAUmF,ICDViB,GCMW,WACzB,OACC,yBAAKnlB,UAAU,cACd,kBAAC,IAAD,CAAS4W,GAAG,KACX,yBAAK3W,IAAK2V,+BAA8CzV,IAAI,QAAQ6W,OAAO,MAAMM,MAAM,SAExF,uBAAGP,MAAO,CAACgL,UAAW,WACrB,kBAAC,IAAD,CAAMnL,GAAG,KAAT,oBCbWwO,GCSW,SAACrM,GAAW,IAC7BvU,EAAOuU,EAAPvU,MACP,OACC,kBAAC,GAAD,CAAWA,MAAOA,EAAO+c,WAAYT,EAAY1R,0BAA2ByQ,OAAO,KCZvEwF,I,QCgBf,oDAQC,WAAYtM,GAAQ,IAAD,8BAClB,cAAMA,IACDuM,SAAWC,mBAAmBxM,EAAMpO,MAAM6a,OAAOzc,KACtD,EAAKkQ,MAAQ,CAACwM,mBAAmB,GACjC,EAAKnkB,MAAQ,EAAK0K,WAClB,EAAKxH,MAAQuU,EAAMvU,MALD,EARpB,qLAoBMoP,EAAUtD,GAAW3E,MAAMnM,KAAK8lB,UApBtC,SAqBe1R,EAAQjM,MAAK,SAACwH,GAC1B,EAAK7N,MAAQ6N,EACb,EAAKmK,SAAS,CAACmM,mBAAmB,OAvBrC,6KA4BE,OACEjmB,KAAKyZ,MAAMwM,kBACTjmB,KAAK8B,MAAO,oCACb,kBAACogB,EAAA,EAAD,KACC,kBAACV,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,IACjB,kBAACD,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,EAAGjhB,UAAU,mBAE7B,kBAAC,GAAD,CAAYsB,MAAO9B,KAAK8B,MAAOue,MAAyC,OAAlCrgB,KAAKuZ,MAAMpO,MAAM6a,OAAO3F,MAC3D6F,SAAUlmB,KAAK8lB,SAAU9gB,MAAOhF,KAAKgF,QACxC,kBAAC,GAAD,CAAUlD,MAAO9B,KAAK8B,QAJvB,UAMA,kBAAC0f,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,KAElB,kBAACS,EAAA,EAAD,KACC,kBAACV,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,IACjB,kBAACD,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,GAEhB,yBAAKjhB,UAAU,eAAc,kBAAC,GAAD,CAAgBX,MAAOG,KAAK8B,MAAMjC,UAEhE,kBAAC2hB,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,GACmB,OAAlCzhB,KAAKuZ,MAAMpO,MAAM6a,OAAO3F,MACtB,kBAAC,GAAD,CAAmBve,MAAO9B,KAAK8B,MAAOkD,MAAOhF,KAAKgF,QAClD,KACH,kBAAC,GAAD,CAAiBlD,MAAO9B,KAAK8B,QAJ9B,KAMA,kBAAC0f,EAAA,EAAD,CAAKW,GAAI,GAAIV,GAAI,MAEZ,kBAAC,IAAD,CAAUrK,GAAG,SACjB,6BACF,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQqL,KAAK,eA1DlB,GAA+BtI,cChBhBgM,GCUgB,SAAC5M,GAAW,IACnCvU,EAAOuU,EAAPvU,MACN,OACC,kBAAC,GAAD,CAAWA,MAAOA,EAAO+c,WAAYT,EAAY7R,oCAAqC4Q,OAAO,KCbjF+F,G,oDCIb,WAAY7M,GAAQ,IAAD,uBACjB,cAAMA,IASRgI,KAVmB,sBAUZ,8BAAAze,EAAA,0DACD,EAAK2W,MAAMxK,aADV,0EAKwBoX,EAAmBlV,kBAAkB,EAAKpR,KALlE,OAKGkP,EALH,OAMH,EAAK6K,SAAS,CAAE7K,aAAcA,IAN3B,gDAQCrD,EAAO,CAAE7F,KAAM,EAAKhG,IAAK+F,MAAO,EAAK/F,KACzC6F,GAAa,KAAIC,QAAS,KAAInG,KAAMkM,GATjC,yDAVY,EAuBnB0a,gBAvBmB,uCAuBD,WAAOrX,GAAP,eAAAnM,EAAA,yDACXmM,EADW,oDAIXA,EAAarN,KAJF,iCAMZ,EAAK2kB,YAAW,GANJ,SAONF,EAAmBvU,qBACvB7C,EAAazN,OACbyN,EAAa1N,OATH,uBAWS8kB,EAAmBnU,WACtCjD,GAZU,cAWNuX,EAXM,OAcZ,EAAKD,YAAW,GAdJ,kBAeLC,GAfK,uGAvBC,0DAETzmB,EAAsCwZ,EAAtCxZ,IAAKiF,EAAiCuU,EAAjCvU,MAAOuhB,EAA0BhN,EAA1BgN,WAAYE,EAAclN,EAAdkN,UAFf,OAGjB,EAAK1mB,IAAMA,EACX,EAAKiF,MAAQA,EACb,EAAKuhB,WAAaA,EAClB,EAAKE,UAAYA,EACjB,EAAKhN,MAAQ,GAPI,E,qDA6CT,IAAD,OAEP,OADAzZ,KAAKuhB,OAEH,kBAAC,WAAD,KACGvhB,KAAKyZ,MAAMxK,aACV,kBAAC,GAAD,CACEvP,KAAMM,KAAKyZ,MAAMxK,aAAa5N,MAC9B4Z,KAAMjb,KAAKyZ,MAAMxK,aAAa1N,MAC3BuF,WACA4f,OAAO,EAAG1mB,KAAKyZ,MAAMxK,aAAa1N,MAAMuF,WAAW9E,OAAS,IAC/DJ,KAAM5B,KAAKyZ,MAAMxK,aAAarN,KAC9BoZ,OAAQ,kBAAM,EAAKsL,gBAAgB,EAAK7M,MAAMxK,eAC9C8L,UAAW,kBAAMsL,EAAmBjU,mBAAmB,EAAKqH,MAAMxK,aAAazN,OAAO,EAAKwD,QAC3Fa,QAAQ,8CACRqU,SAAUla,KAAKymB,YAEf,U,GA9DmBjT,IAAM2G,WCJtBwM,GCOW,SAACpN,GAAW,IAAD,EACMoB,qBADN,oBAC7BtD,EAD6B,KACduP,EADc,OAEJjM,oBAAS,GAFL,oBAE7B8L,EAF6B,KAElBF,EAFkB,KAG7BvhB,EAAOuU,EAAPvU,MAeP,OAduB,uCAAG,8BAAAlC,EAAA,0DACrBuU,EADqB,iEAKpBjT,EAAM+L,EAAcqC,eAAexN,GALf,SAMPqhB,EAAmBpV,uBAAuB7M,GANnC,OAMpB4d,EANoB,OAOxB4E,EAAiB5E,GAPO,kDASxBpc,GAAa,KAAMC,QAAS,KAAMnG,MATV,0DAAH,oDAYvBmnB,GAGC,6BACExP,EACE,kBAAC6K,EAAA,EAAD,CAAK1hB,UAAU,6BAChB,kBAACghB,EAAA,EAAD,CAAK5Y,IAAI,QAAQuZ,GAAI,GAAIC,GAAI,GAAIX,GAAI,GAAIC,GAAI,EAAGW,GAAI,IACpD,kBAACb,EAAA,EAAD,CAAK5Y,IAAI,QAAQuZ,GAAI,GAAIC,GAAI,GAAIX,GAAI,GAAIC,GAAI,GAAIW,GAAI,IACpD,kBAACH,EAAA,EAAD,KACE7K,EAAcrV,OAAS,EACrBqV,EAAc1K,KAAI,SAAC5M,EAAKoN,GAAN,OACnB,kBAACqU,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAG9Y,IAAKuE,GACxB,kBAAC,GAAD,eACCvE,IAAKuE,EACLsZ,UAAWA,EACXF,WAAYA,EACZxmB,IAAKA,GACDwZ,QAGL,wBAAIhC,MAAO,CAACgL,UAAW,SAAUC,OAAQ,aAAc1K,MAAO,SAA9D,6DAKL,kBAAC0J,EAAA,EAAD,CAAK5Y,IAAI,QAAQuZ,GAAI,GAAIC,GAAI,GAAIX,GAAI,GAAIC,GAAI,EAAGW,GAAI,KAEnD,6BACD,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQI,KAAK,aCpDHqE,GCQO,SAACvN,GAErB,OACE,6BACE,kBAAC,GAAsBA,K,UCXbwN,GCSK,SAACxN,GAAW,IACZY,EAAuBZ,EAAlC1C,UAAyBmQ,EADH,aACYzN,EADZ,eAExBvU,EAAMsO,qBACZ,OACE,kBAAC,IAAD,iBACM0T,EADN,CAEEnQ,UAAW,gBAAGoQ,EAAH,EAAGA,QAAS9Q,EAAZ,EAAYA,SAAUhL,EAAtB,EAAsBA,MAAtB,OACT,6BACGnG,EACC,kBAAC,GAAe,CAAEiiB,UAAS9Q,WAAUhL,QAAOnG,UAE5C,kBAAC,GACK,CAAEiiB,UAAS9Q,WAAUhL,UAG7B,kBAACgP,EAAc,CAAE8M,UAAS9Q,WAAUhL,gBCtB/B+b,ICOsBxnB,GAAMynB,GDP5BD,ICOsBxnB,GDPD,cCOOynB,GDPQ,SAAChN,GAAD,OACjD,SAACZ,GAAD,OAAW,kBAACY,EAAD,iBAAeZ,EAAf,CAAsB0N,QAASG,mBCOnC,SAACjN,GACN,IAAMkN,EAAUF,GAAchN,GAE9B,OADAkN,EAAQC,YAAR,UAAyB5nB,GAAzB,YAVG,SAAwBya,GAC7B,OAAOA,EAAUmN,aAAenN,EAAUza,MAAQ,YASf6nB,CAAepN,GAAhD,KACOkN,ICbIG,GCEkB,SAACrN,EAAW4I,GAAZ,OAC/B0E,GAAYlI,aAAS,yKAEP,IAAD,EACmBvf,KAAKuZ,MAAvBvU,EADD,EACCA,MAAOiiB,EADR,EACQA,QACf,OAAQjiB,GACN,UAAKkF,EACH,OAAO6Y,GAAU,KACnB,KAAK,KAEH,OADAkE,EAAQzf,KAAK,KACN,KACT,QACE,OAAO,kBAAC2S,EAAcna,KAAKuZ,YAXhB,GACa/F,IAAM2G,aCsC3BuN,EA3BM,SAAC,GAAwD,IAA7CvN,EAA4C,EAAtDtD,UAA2CmQ,GAAW,EAAjC7Q,SAAiC,EAAvB8Q,QAAuB,oDACrEjiB,EAAMsO,qBACNqU,EAAgB,CACpB9hB,QAAS,oGACTxE,MAAO,QACPyE,MAAO,aACPC,KAAM,sEAQR,OANA6hB,qBAAU,WACJ5iB,GACFgO,EAAiB9N,iBAAiBF,EAAO2iB,KAE1C,CAAC3iB,EAAO2iB,IAGT,kBAAC,IAAD,iBACMX,EADN,CAEEnQ,UAAW,gBAAGoQ,EAAH,EAAGA,QAAS9Q,EAAZ,EAAYA,SAAUhL,EAAtB,EAAsBA,MAAtB,OACT,6BACE,kBAAC,GAAe,CAAE8b,UAAS9Q,WAAUhL,QAAOnG,UAC5C,kBAACmV,EAAc,CAAE8M,UAAS9Q,WAAUhL,QAAMnG,kBCarC6iB,GA5BA,WACd,OACC,kBAAC,IAAD,KACC,kBAAC,WAAD,KAEC,kBAAC,IAAD,KAQC,kBAAC,GAAD,CAAchR,UAAWiR,GAAM9gB,KAAK,IAAImQ,OAAK,IAR9C,IASC,kBAAC,GAAD,CAAeN,UAAWkR,GAAe/gB,KAAK,iBAAiBmQ,OAAK,IATrE,IAUC,kBAAC,GAAD,CAAeN,UAAWmR,GAAShhB,KAAK,WAAWmQ,OAAK,IAVzD,IAWC,kBAAC,GAAD,CAAeN,UAAWoR,GAAUjhB,KAAK,YAAYmQ,OAAK,IAX3D,IAYC,kBAAC,GAAD,CAAeN,UAAWgP,GAAW7e,KAAK,2BAZ3C,IAaC,kBAAC,GAAD,CAAe6P,UAAW0J,GAAOvZ,KAAK,SAASmQ,OAAK,IAbrD,IAcC,kBAAC,GAAD,CAAeN,UAAWiQ,GAAe9f,KAAK,iBAAiBmQ,OAAK,IAdrE,IAeC,kBAAC,GAAD,CAAcN,UAAWqR,GAAUlhB,KAAK,MAfzC,Q,wBCDWmhB,OAnBf,WACC,OACC,kBAAC,WAAD,KACC,kBAAC,GAAD,MACA,kBAAC,KAAD,CACC5J,SAAS,aACTzS,UAAW,IACXsc,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,yBAAuB,EACvBC,WAAS,EACTC,cAAY,MCdhBC,IAASC,OACR,kBAAC,GAAD,KACC,kBAAC,GAAD,OAED9kB,SAAS+kB,eAAe,U","file":"static/js/main.fd0c26bb.chunk.js","sourcesContent":["class RouteViade{\n\n    constructor(name,items,description=\"\", media=[], comments = [],url=\"\"){\n        this.name=name;\n        this.items=items;\n        this.description=description;\n        this.media = media;\n        this.comments = comments;\n        this.url=url;\n    }\n}\n\nexport default RouteViade;","import React from \"react\";\n\nclass ImageViade{\n\n    constructor(iri,author,publicationTime,image=null){\n        this.iri=iri;\n        this.author=author;\n        this.publicationTime=publicationTime;\n        this.image=image;\n    }\n\n    getUrl(){\n        if(!this.image) {\n            return;\n        }\n\n        return URL.createObjectURL(this.image);\n    }\n\n    getComponent() {\n        return <img className=\"d-block route-img\" src={this.getUrl()} alt={this.author} />;\n    }\n\n}\n\nexport default ImageViade;","class ItemViade{\n\n    constructor(longitude,latitude,order,elevation=null){\n        this.longitude=longitude;\n        this.latitude=latitude;\n        this.elevation=elevation;\n        this.order=order;\n    }\n}\n\nexport default ItemViade;\n\n","import React from \"react\";\n\nclass VideoViade {\n\n\tconstructor(iri, author, publicationTime, video = null) {\n\t\tthis.iri = iri;\n\t\tthis.author = author;\n\t\tthis.publicationTime = publicationTime;\n\t\tthis.video = video;\n\t}\n\n\tgetUrl() {\n\t\tif (!this.video) {\n\t\t\treturn;\n\t\t}\n\t\treturn URL.createObjectURL(this.video);\n\t}\n\n\tgetComponent() {\n\t\treturn <video controls className=\"d-block route-img\" src={this.getUrl()}/>;\n\t}\n}\n\nexport default VideoViade;","class NotificationViade{\n    constructor(title,license,actor,object,published,summary,target,read,url){\n        this.title=title;\n        this.license=license;\n        this.actor=actor;\n        this.object=object;\n        this.published=published;\n        this.summary=summary;\n        this.target=target;\n        this.read=read;\n        this.url=url;\n    }\n}\n\nexport default NotificationViade;","class RouteToRDF {\n\n    constructor(route) {\n\n        this.route = route;\n        this.str = \"\";\n        \n    }\n\n    parse() {\n\n        // Establecemos los \"prefix\" que vamos a utilizar.\n        this.str +=('@prefix : <#> .\\n');\n        this.str +=('@prefix viade: <http://arquisoft.github.io/viadeSpec/> .\\n');\n        this.str +=('@prefix schema: <http://schema.org/> .\\n');\n        this.str +=('@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\\n');\n        this.str +=('@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n');\n        this.str +=('\\n');\n\n        // Definimos la ruta como un objeto de tipo Route de viade haciendo uso de myRoute.\n        /* Estas dos líneas se sustituirán por la tercera en caso de que se quiera poner el\n        nombre de la ruta en cuestión en lugar de myRoute.\n        this.str += (':');\n        this.str += (this.route.name.replace(/ /g, \"\"));\n        */\n        this.str +=(':myRoute');\n        this.str +=(' a viade:Route ;\\n');\n\n        // Añadimos el nombre al \"schema\".\n        this.str +=('\\tschema:name \"');\n        this.str +=(this.route.name);\n\n        // Añadimos la descripción en caso de que el objeto Route que se nos pasa la tenga.\n        if (this.route.description != null && this.route.name !== \"\") {\n            this.str +=('\" ;\\n');\n            this.str +=('\\tschema:description \"');\n            this.str +=(this.route.description);\n        }\n\n        /*\n        En caso de que no haya ni puntos ni contenidos multimedia en la ruta, entonces finalizamos\n        la declaración de la ruta con un punto.\n        En caso contrario, le agregamos un punto y coma para continuar con el resto de definiciones\n        de la ruta.\n        */\n       if (!this.route.items.length > 0 && !this.route.media.length > 0) {\n        this.str +=('\" .\\n');\n        } else {\n            this.str +=('\" ;\\n');\n        }\n\n        this.str +=('\\n');\n\n        // Añadimos los items parseados.\n        this.parseitems();\n\n        // Añadimos los archivos multimedia parseados\n        this.parseMedia();\n\n        /*\n        Devolvemos la cadena de texto que hemos creado, que tendrá el formato definido en viadeSpec,\n        concretamente basado en Turtle.\n        */\n        return this.str;\n\n    }\n\n    parseitems() {\n\n        // Para cada item de la ruta que estamos parseando se hace lo siguiente:\n        for (let i = 0; i < this.route.items.length ; i++) {\n\n            // Declaramos un \"point\" de viade, dentro del cual tendremos los atributos de este punto.\n            this.str +=('\\tviade:point [\\n');\n\n            // Agregamos la latitud y la longitud.\n            this.str +=('\\t\\tschema:latitude ');\n            this.str +=(this.route.items[i].latitude);\n            this.str +=(' ;\\n');\n            this.str +=('\\t\\tschema:longitude ');\n            this.str +=(this.route.items[i].longitude);\n            this.str +=(' ;\\n');\n\n            // Agregamos el orden que ocupa este punto entre el conjunto de puntos de la ruta.\n            this.str +=('\\t\\tviade:order ');\n            this.str +=(this.route.items[i].order);\n\n            // Agregamos opcionalmente la altitud del punto en cuestión.\n            if (this.route.items[i].elevation != null) {\n                this.str +=(' ;\\n');\n                this.str +=('\\t\\tschema:elevation ');\n                this.str +=(this.route.items[i].elevation);\n            }\n\n            this.str +=('\\n\\t');\n\n            /*\n            Si este es el último punto de la ruta y esta no tiene contenido multimedia, entonces se pone un punto\n            que representará el final de la declaración de la ruta.\n            En caso contrario, se pone un punto y coma para poder incluir en dicha declaración el contenido multi-\n            media justo debajo de los puntos.\n            */\n            if (i === this.route.items.length - 1 && !this.route.media.length > 0) {\n                this.str +=('].');\n            } else {\n                this.str +=('];\\n');\n            }\n        }\n\n    }\n\n    parseMedia() {\n\n        var aux = \"\";\n        this.str +=('\\n');\n        \n\n        // Para cada archivo multimedia de la ruta que estamos parseando se hace lo siguiente:\n        for (let i = 0; i < this.route.media.length; i++) {\n            \n            // Agregamos un nuevo hasMediaAttached, es decir, un nuevo enlace a un contenido multimedia.\n            this.str +=('\\tviade:hasMediaAttached ');\n            this.str += (':media');\n            this.str += (i+1);\n\n            /*\n            En caso de ser el último contenido multimedia, se añade el punto que representa el fin del\n            fichero.\n            En caso contrario, se añade punto y coma para seguir añadiendo contenidos multimedia.\n            */\n            if (i === this.route.media.length - 1) {\n                this.str +=(' .\\n');\n            } else {\n                this.str +=(' ;\\n');\n            }\n\n            /*\n            Usando una variable auxiliar, vamos almacenando las definiciones como tal de los contenidos\n            multimedia, que posteriormente se añadirán al final del fichero, una vez la ruta esté completamente\n            definida.\n            */\n\n            /*\n            Añadimos el nombre del contenido multimedia, que en este caso será \"media\" + la posición que ocupa\n            en la lista de contenidos multimedia. Ej.: media1, media2...\n            */\n            aux +=('\\n:media');\n            aux += (i+1);\n            aux +=('\\n');\n\n            // Agregamos la IRI del archivo.\n            aux +=('\\tschema:contentUrl <');\n            aux +=(this.route.media[i].iri);\n            aux +=('> ;\\n');\n\n            // Añadimos la fecha de publicación del archivo.\n            aux +=('\\tschema:publishedDate ');\n            aux +=(this.getDate(this.route.media[i].publicationTime));\n            aux +=('^^xsd:dateTime');\n            aux +=(' ;\\n');\n\n            // Añadimos el autor del archivo.\n            aux +=('\\tschema:author <');\n            aux +=(this.route.media[i].author);\n            aux +=('> .\\n');\n\n        }\n\n        this.str +=('\\n');\n\n        /*\n        Añadimos a la variable global str (la que tiene todo el contenido del parser) el contenido\n        de la variable auxiliar utilizada para crear la representación de los archivos multimedia\n        en el fichero.\n        */\n        this.str +=(aux);\n\n    }\n\n    getDate(date) {\n        /*\n        Creamos una variable auxiliar en la que se irá almacenando la cadena de texto que representa\n        la fecha y la devolvemos.\n        */\n        var aux = \"\";\n        if (typeof date == \"string\") {\n            aux = \"\";\n\n            aux += ('\"');\n            aux += (date);\n            aux += ('\"');\n            return aux;\n        }\n        else {\n            aux = \"\";\n\n            aux += ('\"');\n            aux += (date.getFullYear());\n            aux += ('-');\n            aux += (date.getMonth());\n            aux += ('-');\n            aux += (date.getDate());\n            aux += ('T');\n            aux += (date.getHours());\n            aux += (':');\n            aux += (date.getMinutes());\n            aux += (':');\n            aux += (date.getSeconds());\n            aux += ('\"');\n\n            return aux;\n        }\n\n    }\n\n}\n\nexport default RouteToRDF;","import auth from \"solid-auth-client\";\nimport ldflex from \"@solid/query-ldflex\";\n\nexport const documentExists = async (documentUri) =>\n  auth.fetch(documentUri, {\n    headers: {\n      \"Content-Type\": \"text/turtle\"\n    }\n  });\n\nexport const createDoc = async (documentUri, options) => {\n  try {\n    return await auth.fetch(documentUri, options);\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const deleteFile = async (url) => {\n  try {\n    return await auth.fetch(url, { method: \"DELETE\" });\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const createDocument = async (documentUri, body = \"\") => {\n  try {\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"text/turtle\"\n      },\n      body\n    };\n    return await createDoc(documentUri, options);\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const createDocumentWithTurtle = async (documentUri, body = \"\") => {\n  try {\n    return createDoc(documentUri, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"text/turtle\"\n      },\n      body\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const createNonExistentDocument = async (documentUri, body = \"\") => {\n  try {\n    const result = await documentExists(documentUri);\n\n    return result.status === 404 ? createDocument(documentUri, body) : null;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const fetchLdflexDocument = async (documentUri) => {\n  try {\n    const result = await documentExists(documentUri);\n    if (result.status === 404) {return null;}\n    const document = await ldflex[documentUri];\n    return document;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const resourceExists = async (resourcePath) => {\n  try {\n\n    const result = await auth.fetch(resourcePath);\n   return result.status === 403 || result.status === 200;\n  } catch (e) {\n    throw e;\n\n  }\n};\n\nexport const discoverInbox = async (document) => {\n  try {\n    const documentExists = await resourceExists(document);\n    if (!documentExists) {return false;}\n\n    const inboxDocument = await ldflex[document][\"ldp:inbox\"];\n    const inbox = inboxDocument ? await inboxDocument.value : false;\n    return inbox;\n  } catch (error) {\n    throw error;\n  }\n};\n\n/**\n * Given a resource link, find an inbox linked from it, if any exist\n * @param resourcePath\n * @returns {Promise<string|*>}\n */\nexport const getLinkedInbox = async (resourcePath) => {\n  try {\n    const inboxLinkedPath = await ldflex[resourcePath].inbox;\n    if (inboxLinkedPath) {\n      return inboxLinkedPath.value;\n    }\n    return \"\";\n  } catch (error) {\n    throw error;\n  }\n};\n","import {\n  AccessControlList,\n  AppPermission,\n} from \"@inrupt/solid-react-components\";\nimport { errorToaster } from \"./index\";\nimport auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nconst fc = new FC(auth);\n// Check that all permissions we need are set. If any are missing, this returns false\nconst checkAppPermissions = (userAppPermissions, appPermissions) =>\n  appPermissions.every((permission) => userAppPermissions.includes(permission));\n\n// Function to check for a specific permission included in the app\nexport const checkSpecificAppPermission = async (webId, permission) => {\n  const userAppPermissions = await AppPermission.checkPermissions(webId);\n  return userAppPermissions.permissions.includes(permission);\n};\n/**\n * SDK app will need all the permissions by the user pod so we check these permissions to work without any issues.\n * Error Message object is to hold the title, message, etc strings, as we can't use i18n libraries in this non-React file\n */\nexport const checkPermissions = async (webId, errorMessage) => {\n  /**\n   * Get permissions from trustedApp.\n   */\n  const userApp = await AppPermission.checkPermissions(webId);\n\n  /**\n   * Get modes permissions from solid-react-components\n   */\n  const permissions = AccessControlList.MODES;\n  const { APPEND, READ, WRITE, CONTROL } = permissions;\n\n  // If we are missing permissions that the app requires, display an error message with a Learn More link\n  if (\n    userApp === null ||\n    userApp.permissions === null ||\n    !checkAppPermissions(userApp.permissions, [APPEND, READ, WRITE, CONTROL])\n  ) {\n    errorToaster(errorMessage.message, errorMessage.title, {\n      label: errorMessage.label,\n      href: errorMessage.href,\n    });\n  }\n};\n\n/**\n * Helper function to fetch permissions for the game inbox, and if permissions are not set\n * correctly, then add them. This repairs a broken inbox.\n * @param inboxPath\n * @returns {Promise<void>}\n */\nexport const checkOrSetInboxAppendPermissions = async (inboxPath, webId) => {\n  // Fetch app permissions for the inbox and see if Append is there\n  const inboxAcls = new AccessControlList(webId, inboxPath);\n  const permissions = await inboxAcls.getPermissions();\n  const inboxPublicPermissions = permissions.filter(\n    (perm) => perm.agents === null\n  );\n\n  const appendPermission = inboxPublicPermissions.filter((perm) =>\n    perm.modes.includes(AccessControlList.MODES.APPEND)\n  );\n\n  if (appendPermission.length <= 0) {\n    // What do we do when the permission is missing? Add it!\n    try {\n      // Permission object to add. A null agent means Everyone\n      const permissions = [\n        {\n          agents: null,\n          modes: [AccessControlList.MODES.APPEND],\n        },\n      ];\n      const ACLFile = new AccessControlList(webId, inboxPath);\n      await ACLFile.createACL(permissions);\n    } catch (error) {\n      // TODO: Better error handling here\n      throw error;\n    }\n  }\n\n  return true;\n};\n\nexport const setReadPermissionRoute=async(webId,agent,route)=> {\n  setReadPermission(webId,agent,route.url.toString());\n  for(let i=0;i<route.media.length;i++){\n    setReadPermission(webId,agent,route.media[i].iri.toString())\n  }\n};\n\n\nexport const setReadPermission = async (webId,agent, documentUrl) => {\n  let path=documentUrl.split(\"#\")[0];\n  const ACLFile = new AccessControlList(webId, path);\n  if(!(await fc.itemExists(ACLFile.aclUri))){\n    const agentsPermissions = [\n      {\n        agents: agent,\n        modes: [AccessControlList.MODES.READ],\n      },\n    ];\n    await ACLFile.createACL(agentsPermissions);\n    return;\n  }\n  const permissions = await ACLFile.getPermissions();\n  const modeRead = [AccessControlList.MODES.READ];\n  const listPermissions = permissions.filter((perm) => perm.modes.toString() === modeRead.toString())\n  if(listPermissions.length===0){//No se ha compartido con nadie\n    const agentsPermissions = [\n      {\n        agents: agent,\n        modes: [AccessControlList.MODES.READ],\n      },\n    ];\n    await ACLFile.createACL(agentsPermissions);\n  }else{//Ya tiene gente compartida\n    let newAgents=listPermissions[0].agents;\n    newAgents.push(agent);\n    const agentsPermissions = [\n      {\n        agents: newAgents,\n        modes: [AccessControlList.MODES.READ],\n      },\n    ];\n    await ACLFile.createACL(agentsPermissions);\n  }\n};\n  \n\n","import * as rdf from \"rdflib\";\nclass SparqlFiddle{\n\n    setRdfType = (type) => { this.rdfType = type; };\n\n    do = (fiddle) => {\n      return new Promise((resolve, reject) => {\n        this.parseRdf(fiddle).then( (response) => {\n            this.prepare(fiddle).then( (preparedQuery) => {              \n                this.execute(fiddle,preparedQuery).then( (results) => {\n                    this.store = fiddle.store;\n                    if(fiddle.wanted===\"Array\"){\n                        resolve(results)\n                    }\n                    else if(fiddle.wanted===\"Hash\") {\n                        resolve( this.ary2hash(fiddle,results) );\n                    }\n                    else if(results.length < 1) {\n                        resolve( \"No results!\"  );\n                    }\n                    else if(fiddle.wanted===\"Value\") {\n                        let key = ( Object.keys(results[0])[0]  );\n                        resolve( results[0][key] );\n                    }\n                    else { \n                        let formatted = this.displayHandler(fiddle,results);\n                        resolve(formatted);\n                    }  \n                },err => reject(err))\n            },err => reject(err))\n        },err => reject(err))\n      })\n    };\n\n    ary2hash =(fiddle,ary) => {\n        let hash = {};\n        let a;\n        for(a in ary){\n            a = ary[a];\n            hash[a[fiddle.key]] = a;\n        }\n        return hash;\n    };\n    parseRdf = (fiddle) => { return new Promise((resolve, reject) => {\n        if(!fiddle.data){\n              return resolve();\n        }\n        let type = fiddle.dataType;\n        if(typeof(document)!==\"undefined\") {type = this.rdfType;}\n        if(!type)  {type = \"text/turtle\";}\n        let endpointUrl = \"http://example.org/inMemory\";\n        try {\n            rdf.parse(\n                fiddle.data, fiddle.store, rdf.sym(endpointUrl).uri, type\n            );\n            resolve();\n        }\n        catch(err) { reject(err); }\n    });};\n    prepare = (fiddle) => {\n        return new Promise((resolve, reject)=>{\n            try {            \n              let query = rdf.SPARQLToQuery(fiddle.query,false,fiddle.store);\n              resolve(query);\n            }\n            catch(err) { reject(err); }\n        })\n    };\n    execute =  (fiddle,preparedQuery) => {\n        let rowHandler = fiddle.rowHandler || this.rowHandler;\n        return new Promise((resolve, reject)=>{\n            let wanted = preparedQuery.vars;\n            let resultAry = [];\n            fiddle.store.query(preparedQuery, (results) =>  {\n                if(typeof(results)===\"undefined\") { reject(\"No results.\"); }\n                else { \n                    let row = rowHandler(fiddle,wanted,results) ;\n                    if(row) {resultAry.push(row);}\n                }\n            }, {} , function(){resolve(resultAry);} )\n        })\n    };\n    rowHandler =(fiddle,wanted,results) => {\n        let row = {};\n        let r;\n        for(r in results){\n            let found = false;\n            let got = r.replace(/^\\?/,\"\");\n            if(wanted.length){\n                let w;\n                for(w in wanted){\n                    if(got===wanted[w].label){ found=true; continue; }\n                }\n                if(!found) {continue;}\n            } \n            row[got]=results[r].value;\n        }\n        if(fiddle.rowHandler){\n            row = fiddle.rowHandler(row);\n        }\n        return(row);\n    };\n/*\n  DATA DISPLAY\n*/\n    displayHandler = (fiddle,results) => {\n        let type = (fiddle.wanted)\n                 ? fiddle.wanted\n                 : (typeof(document)===undefined)\n                   ? \"Text\"\n                   : \"HTML\";\n        if(type===\"Text\") {return this.showText(results);}\n        if(type===\"HTML\") {return this.showHtml(results);}\n    };\n    showText = (results) => {\n        let columnHeads = Object.keys(results[0]).reverse();\n        let str = \"\\n\";\n        let r;\n        for(r in results){\n            //let row = \"\";\n            let k;\n            for(k in columnHeads){\n                str += `${columnHeads[k]} : ${results[r][columnHeads[k]]}\\n`;\n            }\n            str += \"\\n\";\n        }\n        return(str);\n    };\n    /* TBD : refactor to build a DOM object rather than a string\n    */\n    showHtml = (results) => {\n        let columnHeads = Object.keys(results[0]).reverse();\n        let table = \"<table>\";\n        let topRow = \"\";\n        let c;\n        for(c in columnHeads){\n            topRow += `<th>${columnHeads[c]}</th>`;\n        }\n        table += `<tr>${topRow}</tr>`;\n        let r;\n        for(r in results){\n            let row = \"\";\n            let k;\n            for(k in columnHeads){\n                row += `<td>${results[r][columnHeads[k]]}</td>`;\n            }\n            table += `<tr>${row}</tr>`;\n        }\n        table += \"</table>\";\n        return(table);\n    };\n/* \n  USER FUNCTIONS\n*/\n/*\n    PREFIX : <http://example.org/inMemory#>\n    SELECT ?name ?format ?data ?query WHERE { \n        ?x :name ?name; :dataFormat ?format; :data ?data; :query ?query . \n    }\n*/\n    runFromLibrary = ( fiddleLibrary, fiddleName, options) => {\n        return new Promise((resolve, reject) => {\n            let fiddle = {\n              wanted : \"Array\",\n                data : fiddleLibrary,\n                query :`\n    PREFIX : <http://example.org/inMemory#>\n    SELECT ?type ?data ?query WHERE { \n        ?x :name \"${fiddleName}\"; :dataFormat ?type; :data ?data; :query ?query . \n    }\n`,\n            };\n            this.run( fiddle ).then( (fiddle) => {\n                let newFiddle = {\n                    wanted : options.wanted,\n                      data : fiddle[0].data,\n                     query : fiddle[0].query,\n                  dataType : fiddle[0].type\n                };\n                this.run( newFiddle ).then( (results) => {\n                    resolve(results)\n                }, err => reject(err) )\n            }, err => reject(err) )\n        }, err => console.log(err) )\n    };\n    loadLibrary = ( fiddleLibrary) => {\n        return new Promise((resolve, reject)=>{\n            let fiddle = {\n              wanted : \"Hash\",\n                 key : \"name\",\n                data : fiddleLibrary,\n                query :`\n    PREFIX : <http://example.org/inMemory#>\n    SELECT ?name ?type ?data ?query WHERE { \n        ?x :name ?name :dataFormat ?type; :data ?data; :query ?query . \n    }\n`,\n            };\n            this.run( fiddle ).then( (results) => {\n                resolve(results)\n            }, err => reject(err) )\n        }, (err) => console.log(\"CH: \"+err) );\n    };\n    run = (fiddle) => { \n      return new Promise((resolve, reject)=>{\n        fiddle.store = (fiddle.data.length>0)\n                     ? rdf.graph()\n                     : this.store;\n        if( fiddle.data.match(/^http/ ) ){\n            this.loadFromUrl(fiddle,\"data\").then( (fiddle) => {\n                this.loadSparqlAndDo( fiddle ).then( (results) => {\n                    resolve(results)\n                }, (err) => reject(err) )\n            }, (err) => reject(err) )\n        }\n        else {\n            this.loadSparqlAndDo( fiddle ).then( (results) => {\n                resolve(results)\n            }, (err) => reject(err) )\n        }\n      })\n    };\n/* \n  DATA LOADING\n*/\n    loadSparqlAndDo = ( fiddle ) => {\n      return new Promise((resolve, reject) =>{\n        if( fiddle.query.match( /^http/ ) ){\n            this.loadFromUrl(fiddle,\"query\").then( (fiddle) => {\n                this.do(fiddle).then( (results) => {\n                    resolve(results)\n                }, (err) => reject(err) )\n            }, (err) =>  reject(err) )\n        }\n        else {\n            this.do(fiddle).then( (results) => {\n                resolve(results)\n            }, (err) => reject(err) );\n        }\n      })\n    };\n    loadFromUrl = (fiddle,type) => {\n      let url = fiddle[type];\n      return new Promise((resolve, reject)=>{\n        let fetcher = new rdf.fetcher( rdf.graph() );\n        try {\n            fetcher.load(url).then( (response) => {\n                // replace the url with it's content\n                fiddle[type] = response.responseText;\n                resolve( fiddle )\n            }).catch((err)=>reject(err));\n        } catch(err) { reject(err) }\n      })\n    };\n    loadFromUrlPlain = (url) => {\n      return new Promise((resolve, reject) => {\n        let fetcher = new rdf.fetcher( rdf.graph() );\n        try {\n            fetcher.load(url).then( response => {\n                resolve( response.responseText );\n            })\n        } catch(err) { reject(err); }\n      });\n    }\n}\n\nconst sparq=new SparqlFiddle();\nexport default sparq;","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Toaster } from \"../components\";\n\nexport const errorToaster = (content: String, title: String = null, link: Object) =>\n  toast(<Toaster {...{ content, title, type: \"error\", link }} />, {\n    autoClose: false,\n    className: \"toaster-error\",\n    type: \"error\"\n  });\n\nexport const warningToaster = (content: String, title: String = null, link: Object) =>\n    toast(<Toaster {...{ content, title, type: \"warning\", link }} />, {\n        className: \"toaster-warning\",\n        type: \"warning\"\n    });\n\nexport const successToaster = (content: String, title: String = null, link: Object) =>\n  toast(<Toaster {...{ content, title, type: \"success\", link }}/>, {\n    className: \"toaster-success\",\n    type: \"success\"\n  });\n\n  export const infoToaster = (content: String, title: String = null, link: Object) =>\n  toast(<Toaster {...{ content, title, type: \"info\", link }} />, {\n    className: \"toaster-info\",\n    type: \"info\"\n  });","import { RouteViade, ItemViade, ImageViade, VideoViade } from \"../../Model\";\nimport { sparqlFiddle } from \"../../../utils\";\n\nimport auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\n\nconst fc = new FC(auth);\nclass RDFToRoute {\n  parse = async (url) => {\n    const sparql = `PREFIX schema: <http://schema.org/>\n      PREFIX viade:<http://arquisoft.github.io/viadeSpec/>\n      PREFIX rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      \n      SELECT ?lat ?long ?order ?name ?description ?name ?elevation WHERE {\n       ?route a viade:Route.\n       ?route viade:point ?point .\n       ?point schema:latitude ?lat ;\n              schema:longitude ?long ;\n              viade:order ?order.\n      OPTIONAL {?route schema:description ?description.}\n      OPTIONAL {?route schema:name ?name.}\n      OPTIONAL {?point schema:elevation ?elevation.}\n      }`;\n    let fiddle = {\n      data: url,\n      query: sparql,\n      wanted: \"Array\",\n    };\n\n    const result = await sparqlFiddle.run(fiddle).then(\n      (results) => {\n        return results;\n      },\n      (err) => console.log(err)\n    );\n\n    let sparqlMedia = `\n        PREFIX schema: <http://schema.org/>\n        PREFIX viade:<http://arquisoft.github.io/viadeSpec/>\n      \n      SELECT ?iri ?publishedDate ?author WHERE {\n       ?route a viade:Route.\n       ?route viade:hasMediaAttached ?media .\n       ?media schema:contentUrl ?iri ;\n              schema:publishedDate ?publishedDate ;\n              schema:author ?author.\n      }\n        `;\n\n    let fiddleMedia = {\n      data: url,\n      query: sparqlMedia,\n      wanted: \"Array\",\n    };\n    const resultMedia = await sparqlFiddle.run(fiddleMedia).then(\n      (results) => {\n        return results;\n      },\n      (err) => console.log(err)\n    );\n    let media = await this.getMedia(resultMedia);\n    return this.getRoute(result, media, url);\n  };\n\n  getMedia = async (results) => {\n    if(!results){return [];}\n    let media = [];\n    let i;\n    for (i=0;i<results.length;i++) {\n      let blob = await fc.readFile(results[i][\"iri\"]);\n      switch (blob.type.split(\"/\")[0]) {\n        case \"image\":\n          media.push(\n            new ImageViade(\n              results[i][\"iri\"],\n              results[i][\"author\"],\n              results[i][\"publishedDate\"],\n              blob\n            )\n          );\n          break;\n          case \"video\":\n            media.push(\n              new VideoViade(\n                results[i][\"iri\"],\n                results[i][\"author\"],\n                results[i][\"publishedDate\"],\n                blob\n              )\n            );\n            break;\n        default:\n          break;\n      }       \n    }\n    return media;\n  };\n\n  getRoute = (results, media, url) => {\n    if (!results || !results.length) {\n      return;\n    }\n    let items = results.map(\n      (i) =>\n        new ItemViade(\n          this.parseToFloat(i[\"long\"]),\n          this.parseToFloat(i[\"lat\"]),\n          this.parseToFloat(i[\"order\"]),\n          this.parseToFloat(i[\"elevation\"])\n        )\n    );\n    return new RouteViade(\n      results[0][\"name\"],\n      items,\n      results[0][\"description\"],\n      media,\n      [],\n      url\n    );\n  };\n\n  parseToFloat = (value) => {\n    if (!value) {\n      return;\n    }\n    return parseFloat(value);\n  };\n}\n\nconst parser = new RDFToRoute();\n\nexport default parser;\n","import { RouteViade} from \"../../Model\";\nimport {sparqlFiddle} from \"../../../utils\";\nclass SmallRDFToRoute {\n\n  \n  parse=async (url) => {\n    const sparql =\n      `PREFIX schema: <http://schema.org/>\n      PREFIX viade:<http://arquisoft.github.io/viadeSpec/>\n      PREFIX rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      \n      SELECT ?name ?description WHERE {\n       ?route a viade:Route.\n       ?route schema:name ?name.\n      OPTIONAL {?route schema:description ?description.}\n      }`;\n      let fiddle = {\n        data: url,\n        query: sparql,\n        wanted: \"Array\"\n      };\n  \n      try{\n      const result = await sparqlFiddle.run(fiddle).then(\n          (results) => {\n          return results;\n        },\n          (err) => {throw err;}\n      );\n      return this.getRoute(result,url);    \n      }catch(err){\n        throw err;\n      }\n  };\n\n  getRoute=(results,url) => {\n    if(!results||!results.length) {return;}\n    return new RouteViade(results[0][\"name\"],null,results[0][\"description\"],[],[],url);\n  };\n\n}\n\nconst parser = new SmallRDFToRoute();\n\nexport default parser;\n","import {ItemViade,RouteViade} from \"../../../../../Model\";\n\nclass LineString{\n  execute = (geoJSON) => {\n    const items = this.getItems(geoJSON.coordinates);\n    const route = new RouteViade(\"Unknown\", items);\n    return route;\n  };\n\n  getItems = (coordinates) => {\n    return coordinates.map((coor, index) => {\n      return new ItemViade(coor[0], coor[1], index);\n    });\n  };\n}\n\nexport default LineString;","import LineString from \"./line-string\";\n\nclass Feature {\n  selectType = (type) => {\n    switch (type) {\n      case \"LineString\":\n        return new LineString();\n      default:\n        throw new Error(\"Feature of route GeoJSON not supported\");\n    }\n  };\n\n  execute(geoJSON) {\n    const geometry = geoJSON.geometry;\n    this.parser = this.selectType(geometry.type);\n    return this.parser.execute(geometry);\n  }\n}\n\nexport default Feature;\n","import Feature from \"./feature\";\n\nclass FeatureCollection{\n    \n    execute=(geoJSON) => {\n        const features=geoJSON.features;\n        if(features.length>1){throw new Error(\"FeatureCollection of route GeoJSON not supported\");}\n        this.parser=new Feature();\n        return this.parser.execute(features[0]);\n    }\n\n}\n\nexport default FeatureCollection;\n","import GeoJSONToRoute from \"./geoJSON-to-route\";\n\nexport default GeoJSONToRoute;","import {LineString,Feature,FeatureCollection} from \"./Types\";\n\nclass GeoJSONToRoute {\n  selectType=(type) => {\n    switch (type) {\n      case \"FeatureCollection\":\n        return new FeatureCollection();\n      case \"Feature\":\n        return new Feature();\n      case \"LineString\":\n        return new LineString();\n      default:\n        throw new Error(\"Type of route GeoJSON not supported\");\n    }\n  }\n\n  execute = (content) => {\n    const geoJSON = JSON.parse(content);\n    this.parser = this.selectType(geoJSON.type);\n    return this.parser.execute(geoJSON);\n  };\n}\n\nexport default GeoJSONToRoute;\n","import { ItemViade, RouteViade } from \"../../../Model\";\nimport gpxParser from \"gpxparser/src/GPXParser\";\n\nclass GpxToRoute {\n\n    execute = (content) => {\n        return this.parse(content);\n    }\n\n    parse = (content) => {\n\n        // Creamos una instancia de gpxparser\n        var gpxParse = new gpxParser();\n\n        // Ejecutamos el parser de gpxparser.\n        gpxParse.parse(content);\n\n        // Llamamos al método \"getItems\" para obtener un array de los items del fichero.\n        const items = this.getItems(gpxParse);\n\n        // Creamos una nueva ruta de nombre \"Unknown\" y la lista de items obtenida anteriormente.\n        const route = new RouteViade(\"Unknown\", items);\n\n        // Devolvemos la ruta que hemos creado.\n        return route;\n\n    }\n\n    getItems = (gpxParse) => {\n\n        // Obtenemos el número de Tracks que tiene la ruta.\n        const numTracks = gpxParse.tracks.length;\n\n        // Creamos un array sin tamaño fijo para una mayor flexibilidad, ya que no sabemos cuántos puntos tenemos en total.\n        var items = [];\n\n        // Para cada track de la ruta, extraemos sus puntos, creamos items con ellos y los añadimos al array.\n        var i = 0;\n        var j = 0;\n        var numTotalPoints = 0;\n\n        for (i = 0; i < numTracks; i++) {\n\n            // Obtenemos el número de puntos que tiene el track.\n            var numPoints = gpxParse.tracks[i].points.length;\n\n            // Para cada punto de la ruta, extraemos su info, creamos un item con esta y lo añadimos al array.\n            for (j = 0; j < numPoints; j++) {\n\n                const longitude = gpxParse.tracks[i].points[j].lon;\n                const latitude = gpxParse.tracks[i].points[j].lat;\n                const elevation = gpxParse.tracks[i].points[j].ele;\n                items[numTotalPoints] = new ItemViade(longitude, latitude, numTotalPoints+1, elevation);\n\n                numTotalPoints++;\n\n            }\n\n        }\n\n        // Devolvemos el array de items.\n        return items;\n\n    }\n\n}\n\nexport default GpxToRoute;","\nimport { GeoJSONToRoute } from \"./ParsersTypes\";\nimport { GpxToRoute } from \"./ParsersTypes\";\n\nclass ParserToRoute {\n  selectParser = (file) => {\n    const type = file.name.split(\".\")[1];\n    switch (type) {\n      case \"json\":\n      case \"geojson\":\n      case \"GeoJSON\":\n        return new GeoJSONToRoute(file);\n      case \"gpx\":\n        return new GpxToRoute(file);\n      default:\n        throw new Error(\"Unsupported format\");\n    }\n  };\n\n  parse =  (file) => {\n    const f = file;\n    const parser = this.selectParser(f);\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n      reader.onload = () => {\n        try{\n          resolve(parser.execute(reader.result));\n        }catch(err){\n          reject(new Error(\"A problem has occurred uploading the route\"));\n        }\n      };\n      reader.onerror=reject;\n      reader.readAsText(f);\n    });\n  };\n}\n\nconst parser = new ParserToRoute();\n\nexport default parser;\n","import { NotificationViade } from \"../../Model\";\nimport { sparqlFiddle } from \"../../../utils\";\n\nclass RDFToNotification {\n  async parse(url) {\n    const sparql = `PREFIX terms: <http://purl.org/dc/terms#>\n      PREFIX n0: <https://www.w3.org/ns/activitystreams#>\n      PREFIX schem: <http://schema.org/>\n      PREFIX n1: <https://creativecommons.org/licenses/by-sa/4.0/>\n      PREFIX c: <https://christianpelaez98.solid.community/profile/card#>\n      PREFIX XML: <http://www.w3.org/2001/XMLSchema#>\n      PREFIX ter: <https://www.w3.org/ns/solid/terms#>\n      \n      SELECT ?title ?license ?actor ?object ?published ?summary ?target ?read\n      WHERE {\n      ?notification terms:title ?title;\n      schem:license ?license;\n      n0:actor ?actor;\n      n0:object ?object;\n      n0:published ?published;\n      n0:summary ?summary;\n      n0:target ?target;\n      ter:read ?read.\n      }`;\n\n    let fiddle = {\n      data: url,\n      query: sparql,\n      wanted: \"Array\"\n    };\n\n\n    const result = await sparqlFiddle.run(fiddle).then(\n      (results) => {\n        return results;\n      },\n      (err) => {throw err;}\n    );\n    return this.arrayToNotification(result,url);\n    \n  }\n\n  arrayToNotification = (result,url) => {\n    return new NotificationViade(\n      result[0][\"title\"],\n      result[0][\"license\"],\n      result[0][\"actor\"],\n      result[0][\"object\"],\n      result[0][\"published\"],\n      result[0][\"summary\"],\n      result[0][\"target\"],\n      result[0][\"read\"]===\"true\",\n      url\n    );\n  };\n}\n\nconst parser = new RDFToNotification();\n\nexport default parser;\n","class NotificationToRDF{\n\n    parse= (notification) => {\n        return `@prefix terms: <http://purl.org/dc/terms#>.\n        @prefix as: <https://www.w3.org/ns/activitystreams#>.\n        @prefix schema: <http://schema.org/>.\n        @prefix solid: <https://www.w3.org/ns/solid/terms#>.\n        @prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\n        @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\n        \n        <> a as:Offer;\n            schema:license <`+this.clearQuotes(notification.license)+`>;\n            terms:title \"`+notification.title+`\";\n            as:summary \"`+notification.description+`\";\n            as:actor <`+this.clearQuotes(notification.actor)+`>;\n            as:target <`+this.clearQuotes(notification.target)+`>;\n            as:object <`+this.clearQuotes(notification.object)+`>;\n            solid:read \"`+notification.read+`\"^^xsd:boolean;\n            as:published \"`+notification.published+`\"^^xsd:dateTime.`;\n    }\n\n    clearQuotes= (string) => {\n        if(!string){\n            return;\n        }\n        return string.replace(/['\"]+/g, '');\n    }\n}\n\nconst parser=new NotificationToRDF();\nexport default parser;","import { SmallRDFToRoute, ParserToRoute, RDFToRoute } from \"../Parsers\";\nimport { storageHelper, Fetcher } from \"../util\";\nimport auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nimport sparql from \"../sparql-queries.json\";\nimport { infoToaster } from \"../../utils\";\nconst fc = new FC(auth);\n\nconst supportRoutes = (array) => {\n  let supported = array.filter((url) => url.split(\".\").slice(-1)[0] === \"ttl\");\n  if (array.length !== supported.length) {\n    let notSupported=array.length-supported.length;\n    infoToaster(\n      \"Unfortunately we don't support \"+notSupported+\" route(s),but I'll show you the ones we do support.\"\n    );\n  }\n  return supported;\n};\n\nexport const fetchSupportedUrlSharedWithMeRoutes = async () => {\n    return fetchAllUrlSharedWithMeRoutes().then((res) => supportRoutes(res));\n};\n\nexport const fetchSupportedUrlMyRoutes = async () => {\n  return fetchAllUrlMyRoutes().then((res) => supportRoutes(res));\n};\n\n\nexport const fetchAllUrlSharedWithMeRoutes = async () => {\n  try {\n    let webId = (await auth.currentSession()).webId;\n    let result = await Fetcher.fetch(\n      sparql.shared_with_me.route_uris,\n      storageHelper.getSharedWithMeFile(webId)\n    );\n    return result.map((route) => route[\"route\"]);\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"An error has occurred loading the routes shared with you\");\n  }\n};\n\nexport const fetchAllUrlMyRoutes = async () => {\n  try {\n    let webId = (await auth.currentSession()).webId;\n    let folder = storageHelper.getMyRoutesFolder(webId);\n    if (!(await fc.itemExists(folder))) {\n      return [];\n    }\n    let routes = await fc.readFolder(folder);\n    return routes.files.map((file) => file.url);\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"An error has occurred loading your routes\");\n  }\n};\n\nexport const getBasicRoute = async (url) => {\n  try {\n    return await SmallRDFToRoute.parse(url);\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"An error occurred while loading the route\");\n  }\n};\n\nexport const getFullRoute = async (url) => {\n  try {\n    return await RDFToRoute.parse(url);\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"An error occurred while loading the route\");\n  }\n};\n\nexport const parseRoutefromFile = (file) => {\n  return ParserToRoute.parse(file).then(\n    (route) => route,\n    (err) => {\n      throw err;\n    }\n  );\n};\n","import { ldflexHelper } from \"../../utils/index\";\nimport auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nimport { RDFToNotification, NotificationToRDF } from \"../Parsers\";\nimport { storageHelper, Fetcher } from \".\";\n\nconst fc = new FC(auth);\n\nexport const fetchNotificationsURLS = async (inboxURL) => {\n  if (!inboxURL) {\n    return;\n  }\n  try {\n    const folder = await fc.readFolder(inboxURL, []);\n    return folder.files.map((file) => file.url);\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"An error has occurred trying to load your notifications\");\n  }\n};\n\nexport const fetchNotification = async (url) => {\n  try {\n    return await RDFToNotification.parse(url);\n  } catch (error) {\n    console.error(error);\n    throw new Error(\"An error has occurred parsing the notification from RDF\");\n  }\n};\n\nexport const findUserInboxes = async (paths) => {\n  try {\n    let inboxes = [];\n    for await (const path of paths) {\n      const { path: currentPath } = path;\n      const inbox = await ldflexHelper.discoverInbox(currentPath);\n\n      if (inbox) {\n        inboxes = [...inboxes, { ...path, path: inbox }];\n      }\n    }\n\n    return inboxes;\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\nexport const getDefaultInbox = (inboxes, inbox1, inbox2) =>\n  inboxes.find((inbox) => inbox.name === inbox1) ||\n  inboxes.find((inbox) => inbox.name === inbox2);\n\nexport const addRouteSharedWithMe = async (route, friend) => {\n  try {\n    let webId = (await auth.currentSession()).webId;\n    const path = storageHelper.getSharedWithMeFile(webId);\n    let docu = await fc.readFile(path);\n    const insert =\n      `\n          []\n              a schema:ShareAction ;\n              schema:agent \"` +\n      friend +\n      `\" ;\n              schema:object \"` +\n      route +\n      `\";\n              schema:recipient \"` +\n      webId +\n      `\".\n          `;\n    docu += insert;\n    await fc.createFile(path, docu, \"text/turtle\", {});\n  } catch (err) {\n    console.error(err);\n    throw new Error(\n      \"An error has occurred adding the route they have shared with you\"\n    );\n  }\n};\n\nexport const markAsRead = async (notification) => {\n  try {\n    notification.read = true;\n    let docu = NotificationToRDF.parse(notification);\n    await fc.createFile(notification.url, docu, \"text/turtle\", {});\n    return true;\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"The notification could not be marked as read\");\n  }\n};\n\nexport const hasNotBeenAccepted=async (route,webId) => {\n    const urlSharedWithMe=storageHelper.getSharedWithMeFile(webId);\n    const sparql=`PREFIX schema: <http://schema.org/>\n    SELECT ?blank WHERE {\n    ?blank schema:object \"`+route+`\".\n    }`;\n    const result=await Fetcher.fetch(sparql,urlSharedWithMe);\n    return result.length===0;\n};\n","import { permissionHelper } from \"../../utils\";\nimport auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nconst fc = new FC(auth);\n\nexport const getViadeFolder = (webId) => {\n  return webId.split(\"profile\")[0] + \"viade/\";\n};\n\nexport const getMyRoutesFolder = (webId) => {\n  return getViadeFolder(webId) + \"routes/\";\n};\n\nexport const getMediaFolder = (webId) => {\n  return getViadeFolder(webId) + \"media/\";\n};\n\nexport const getSharedWithMeFile = (webId) => {\n  return getViadeFolder(webId) + \"shared_with_me.ttl\";\n};\n\nexport const getInboxFolder = (webId) => {\n  return getViadeFolder(webId) + \"inbox/\";\n};\n\nconst createInbox = (webId) => {\n  const path = getInboxFolder(webId);\n  fc.createFolder(path);\n};\n\nconst createSharedMeFile = (webId) => {\n  const path = getSharedWithMeFile(webId);\n  fc.createFile(path, \"@prefix schema: <http://schema.org/> .\", \"text/turtle\", {});\n};\n\nconst createMediaFolder = (webId) => {\n  const path = getMediaFolder(webId);\n  fc.createFolder(path);\n};\n\nconst createRoutesFolder = (webId) => {\n  const path = getMyRoutesFolder(webId);\n  fc.createFolder(path);\n};\n\nexport const initFolderStructure = async (webId) => {\n  await createRoutesFolder(webId);\n  await createMediaFolder(webId);\n  await createSharedMeFile(webId);\n  await createInbox(webId);\n};\n\nexport const checkFolderStructure = async (webId) => {\n  if (!(await fc.itemExists(getViadeFolder(webId)))) {\n    initFolderStructure(webId);\n    return;\n  }\n  if (!(await fc.itemExists(getInboxFolder(webId)))) {\n    await createInbox(webId);\n  }\n  if (!(await fc.itemExists(getMyRoutesFolder(webId)))) {\n    await createRoutesFolder(webId);\n  }\n  if (!(await fc.itemExists(getMediaFolder(webId)))) {\n    await createMediaFolder(webId);\n  }\n  if (!(await fc.itemExists(getSharedWithMeFile(webId)))) {\n    await createSharedMeFile(webId);\n  }\n  await permissionHelper.checkOrSetInboxAppendPermissions(getInboxFolder(webId), webId);\n};\n","import {sparqlFiddle} from \"../../utils\";\n\nclass Fetcher {\n  fetch = async (sparql, endPoint, output = \"Array\") => {\n    let fiddle = {\n      data: endPoint,\n      query: sparql,\n      wanted: output,\n    };\n\n    return sparqlFiddle.run(fiddle).then(\n      (results) => {\n        return results;\n      },\n      (err) => {\n        throw err;\n      }\n    );\n  };\n}\n\nconst fetcher=new Fetcher();\nexport {fetcher};","import React from \"react\";\nimport SolidFileClient from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport Form from \"react-bootstrap/Form\";\nimport {ParserToRoute, RouteToRDF,VideoViade, ImageViade,storageHelper} from \"../../../viade\";\nimport ImageUploader from \"react-images-upload\";\nimport {useWebId} from \"@inrupt/solid-react-components\";\nimport {CustomButton} from \"../../\";\nimport \"./upload.component.css\";\nimport {errorToaster,warningToaster,successToaster, infoToaster} from \"../../../utils/toaster\";\n\nconst fc = new SolidFileClient(auth);\n\nexport const UploadComponent = () => {\n    const webid = useWebId();\n    let files;\n    let media = [];\n    let nameInput = React.createRef();//Campo nombre\n    let descriptionInput = React.createRef();//campo descripcion\n\n\n    let valueName = \"\";\n    let valueDescription = \"\";\n\n\n    const fileSelectedHadler = (e) => {\n        files = e.target.files;\n    };\n    const mediaSelectedHadler = (e) => {\n        media = e;\n    };\n    const handleNameChange = () => {\n        valueName = nameInput.current.value;\n    };\n    const handleDescriptionChange = () => {\n        valueDescription = descriptionInput.current.value;\n    };\n\n    const summitHandler = async (e) => {\n\n        e.preventDefault();\n        //setUploadStatus(true)//empezamos a subir\n\n        if(!webid) {\n            errorToaster(\"You need to be logged in\",\"FatalError\");//alert(\"You need to be logged in\");\n\n    }else if( valueName === \"\"){\n        warningToaster(\"You need to introduce a name for te route\", \"Warn\");\n    }\n    else if (files == null) {\n        warningToaster(\"You need to upload a route\",\"Warn\");\n    }\n    else {\n        infoToaster(\"Uploading route\");\n        const file = files[0];\n        const rutaPod = storageHelper.getMyRoutesFolder(webid);\n        const rutaMedia = storageHelper.getMediaFolder(webid);\n        //webid -> https://usernamme.solid.community/profile/card#me\n        const date = Date.now();\n        const url = rutaPod + date + \".ttl\";\n\n        //Empezamos a parsear el archivo\n        try {\n            let promise = ParserToRoute.parse(file);\n            let route = await promise.then((route) => {\n                return route;\n            });\n\n            route.name = valueName;//Valor del campo del nombre\n            route.description = valueDescription;//Valor del campo de descripcion\n\n            // Subida de archivos\n            try {\n                for (let i = 0; i < media.length; i++) {\n                    let extension=\".\"+media[i].name.split(\".\").slice(-1)[0];\n                    await fc.putFile(rutaMedia + date + \"_\" + i +extension , media[i], media[i].type);\n                    if (media[i].name.includes(\".mp4\")) {\n                        route.media.push(new VideoViade(rutaMedia + date + \"_\" + i +extension, webid.substring(0, webid.length - 16), new Date()));\n                    } else {\n                        route.media.push(new ImageViade(rutaMedia + date + \"_\" + i +extension, webid.substring(0, webid.length - 16), new Date()));\n                    }\n\n                }\n            } catch (err) {\n                throw new Error(\"Error in the upload of the media\");\n            }\n            let strRoute = null;\n            try {\n                let parserToRDF = new RouteToRDF(route);\n                strRoute = parserToRDF.parse();\n                //Ya tenemos un String para meter en SolidFileClient\n                if(strRoute == null) {\n                    throw new Error();\n                }\n            } catch(err) {\n                throw new Error(\"Error in the content of the route\");\n            }\n\n            try {\n                //const res = await fc.putFile(url, file, file.type);\n                await fc.createFile(url, strRoute, \"text/turtle\", {});\n            } catch (err) {\n                throw new Error(\"Error uploading files\");//console.error(err); // Da warning aquí por usar la consola\n            }\n            successToaster(\"Route uploaded succesfully\");//feedback al usuario\n        }\n        catch (err) {//Damos feedback al usuario\n            errorToaster(err.toString());\n        }\n\n    }\n    //setUploadStatus(false)//terminamos de subir\n};\n\n\n    return (\n\n        <Form>\n            {/* Name field */}\n            <Form.Group controlId=\"formName\">\n                <Form.Label>Name:</Form.Label>\n                <Form.Control ref={nameInput} onChange={() => handleNameChange()} data-testid=\"formName\"\n                              type=\"text\" placeholder=\"Enter the name of the route\"/>\n            </Form.Group>\n            {/* Description field */}\n            <Form.Group controlId=\"formDescription\">\n                <Form.Label>Description:</Form.Label>\n                <Form.Control ref={descriptionInput} onChange={() => handleDescriptionChange()} data-testid=\"formDescription\"\n                              as=\"textarea\" placeholder=\"Enter the description of the route\"/>\n                <Form.Text className=\"text-muted\">\n                    (Optional)\n                </Form.Text>\n            </Form.Group>\n            <p>We don't support manual creation of routes as of yet, but you can use <a href={\"http://geojson.io/\"}>\n                this webpage</a> to make one if you don't have a GPS.</p>\n            {/** File selector **/}\n            <input type=\"file\" onChange={fileSelectedHadler} data-testid=\"input\"/>\n            {/* Media handler */}\n            <ImageUploader\n                withIcon={true}\n                withPreview={true}\n                buttonText=\"Choose images and videos\"\n                onChange={mediaSelectedHadler}\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\", \".mp4\"]}\n                maxFileSize={5242880}\n            />\n            {/** Upload button **/}\n            <CustomButton onClick={summitHandler} text=\"Upload\"/>\n        </Form>\n\n    );\n};","import {UploadComponent} from \"./upload.component\";\n\nexport default UploadComponent;","import AuthNavBar from \"./auth-nav-bar.component\";\n\nexport default AuthNavBar;","import React from \"react\";\nimport {Image, Navbar} from \"react-bootstrap\";\nimport Nav from \"react-bootstrap/Nav\";\nimport auth from \"solid-auth-client\";\nimport {NavLink} from \"react-router-dom\";\nimport {CustomButton, CustomModal} from \"../\";\nimport {navbar} from \"../../contexts\";\nimport UploadComponent from \"./UploadButton\";\n\n/**\n * Navigation bar which contains de actions of a user logged in\n */\nconst AuthNavBar = () => {\n\n\t/**\n\t * Logs out the current authenticated user\n\t * @returns {Promise<void>}\t\tAsync promise\n\t */\n\tconst logOut = async () => {\n\t\tawait auth.logout();\n\t\tlocalStorage.removeItem(\"solid-auth-client\");\n\t\tlocalStorage.removeItem(\"isLogged\");\n\t\twindow.location = process.env.PUBLIC_URL;\n\t};\n\n\treturn (\n\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t{/* Application logo, leading to the home */}\n\t\t\t<Navbar.Brand href={process.env.PUBLIC_URL + navbar.logo.href}>\n\t\t\t\t<Image src={process.env.PUBLIC_URL + navbar.logo.src} alt={navbar.logo.alt}/>\n\t\t\t</Navbar.Brand>\n\t\t\t{/* Button that opens the upload pop-up */}\n\t\t\t<CustomModal text=\"Upload a route\" img=\"/img/buttons/upload.png\"\n\t\t\t\tcomponent={<UploadComponent/>}/>\n\t\t\t{/* Hamburger menu for mobile and lesser screens */}\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t{/* Nav spacer */}\n\t\t\t\t<Nav className=\"mr-auto\"/>\n\t\t\t\t<Nav>\n\t\t\t\t\t{/* Notifications button */}\n\t\t\t\t\t<NavLink exact to={navbar.notifications.href}>\n\t\t\t\t\t\t<CustomButton\n\t\t\t\t\t\t\timg={navbar.notifications.src}/>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t{/* Rest of links of the navbar, loaded from the JSON config file */}\n                    {navbar.links.map((link) =>\n                        <NavLink exact to={link.href} className=\"link\" key={link.href}>\n                            <div>\n                                <Image\n                                    src={process.env.PUBLIC_URL + link.src}\n                                    alt={link.alt}\n                                    style={{height: \"25px\"}}/>\n                            </div>\n                            {link.text}\n                        </NavLink>)}\n\t\t\t\t\t{/* Log out button */}\n\t\t\t\t\t<CustomButton img={navbar.logout.src} onClick={logOut} testid={\"logoutbtn\"}/>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n};\n\nexport default AuthNavBar;\n","type ProviderEntity = {\n  label: String,\n  image: String,\n  value: String,\n  registerLink: String,\n  description: String\n};\n\nexport default class Provider {\n  /*\n   *  Function to get providers. This is to mimic the future provider registry\n   */\n  static getIdentityProviders(): Array<ProviderEntity> {\n    return [\n      {\n        id: \"inrupt\",\n        label: \"Inrupt\",\n        image: \"/viade_es4c/img/inrupt.svg\",\n        value: \"https://inrupt.net/auth\",\n        registerLink: \"https://inrupt.net/register\",\n        description: \"Lorem ipsum dolor sit amet non ipsom dolor\"\n      },\n      {\n        id: \"solid-community\",\n        label: \"Solid Community\",\n        image: \"/viade_es4c/img/Solid.svg\",\n        value: \"https://solid.community\",\n        registerLink: \"https://solid.community/register\",\n        description: \"Lorem ipsum dolor sit non consectetur\"\n      }\n    ];\n  }\n}\n","import LoginComponent from \"./login.component\";\n\nexport default LoginComponent;","import React from \"react\";\nimport {ProviderLogin} from \"@inrupt/solid-react-components\";\nimport {Provider} from \"../../../services\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./login.css\";\n\n/**\n * Login Component which handles all the login logic\n * @returns {*}\n * @constructor\n */\nconst LoginComponent = () => {\n  return (\n    <div>\n      <Card className=\"text-center\" style={{ width: \"25rem\" }}>\n          {/* Viade logo */}\n          <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/img/logo.svg\"} />\n          <Card.Body>\n              <Card.Title>Login of Viade es4c</Card.Title>\n              <Card.Text>\n                  {/* Library component holding the login */}\n                  <ProviderLogin\n                      selectPlaceholder=\"Pick an identity provider\"\n                      inputPlaholder=\"Please enter your WebID or the URL of your identity provider\"\n                      formButtonText=\"Login\"\n                      btnTxtWebId=\"Login with WebId\"\n                      btnTxtProvider=\"Login with Provider\"\n                      className=\"provider-login-component\"\n                      callbackUri={`${window.location.protocol}//${window.location.host}/viade_es4c/#/`}\n                      errorsText={{\n                          unknown: \"An unknown error has occurred\",\n                          webIdNotValid: \"The WebId is not valid\",\n                          emptyProvider: \"Empty Provider\",\n                          emptyWebId: \"The WebId is empty\"\n                      }}\n                      providers={Provider.getIdentityProviders()}\n                  />\n              </Card.Text>\n          </Card.Body>\n      </Card>\n    </div>\n\n  );\n};\n\nexport default LoginComponent;\n","import ProviderItem from \"./provider.item.component\";\n\nexport default ProviderItem;","import React from \"react\";\n\ntype Props = {\n  data: any,\n  onSelect: Function,\n  radioName: String,\n  id: String,\n  checked: Boolean\n};\n\nconst ProviderItem = ({ data, onSelect, radioName, id, checked }: Props) => (\n  <div>\n    <input\n      type=\"radio\"\n      name={radioName}\n      id={id}\n      onChange={onSelect}\n      value={data.registerLink}\n      checked={checked}\n    />\n    <div className=\"img-group\">\n      <img src={data.image} alt={data.label} />\n      <span className=\"label\">{data.label}</span>\n    </div>\n  </div>\n);\n\nexport default ProviderItem;\n","import React, {Component, Fragment} from \"react\";\nimport ProviderItem from \"./ProviderItem\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./register.component.css\";\nimport {CustomButton} from \"../../index\";\n\ntype Provider = {};\n\ntype Register = {\n\tprovider: String\n};\n\ntype Props = {\n\tproviders: Array<Provider>\n};\n\ntype State = {\n\tregister: Register,\n\tcanContinue: false\n};\n\nclass RegisterComponent extends Component<Props, State> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcanContinue: false,\n\t\t\tregister: {\n\t\t\t\tprovider: \"\"\n\t\t\t}\n\t\t};\n\t}\n\n\tnext = () => {\n\t\tconst {\n\t\t\tcanContinue,\n\t\t\tregister: { provider }\n\t\t} = this.state;\n\t\tconst { protocol, host } = window.location;\n\t\tif (canContinue) {\n\t\t\t//window.location = `${provider}?returnToUrl=${protocol}//${host}/register/success`;\n\t\t\twindow.location = `${provider}?returnToUrl=${protocol}//${host}/viade_es4c/`;\n\t\t}\n\t};\n\n\tselectProvider = (e) => {\n\t\tconst { register } = this.state;\n\t\tthis.setState({\n\t\t\tregister: { ...register, provider: e.target.value },\n\t\t\tcanContinue: true\n\t\t});\n\t};\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst {\n\t\t\tcanContinue,\n\t\t\tregister: { provider }\n\t\t} = this.state;\n\t\tconst { protocol, host } = window.location;\n\t\tif (canContinue) {\n\t\t\t//window.location = `${provider}?returnToUrl=${protocol}//${host}/register/success`;\n\t\t\twindow.location = `${provider}?returnToUrl=${protocol}//${host}/viade_es4c/`;\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tcanContinue,\n\t\t\tregister: { provider }\n\t\t} = this.state;\n\t\tconst { providers} = this.props;\n\n\t\treturn (\n\t\t\t<Card className=\"text-center\" style={{ width: \"25rem\" }}>\n\t\t\t\t<Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/img/logo.svg\"} />\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>Make a SOLID account</Card.Title>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h1>Select Provider</h1>\n\t\t\t\t\t\t\t\t<div className=\"progress-bar\" />\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref=\"https://solid.inrupt.com/how-it-works\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t>What is a provider?</a>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{providers.map((providerData) => (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"p-item\" key={`div-${providerData.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ProviderItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={providerData}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={providerData.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.selectProvider}\n\t\t\t\t\t\t\t\t\t\t\t\t\tradioName=\"providerRadio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"registerRadio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={`radio-${providerData.id}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={providerData.registerLink === provider}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<CustomButton\n\t\t\t\t\t\t\t\tclassName=\"btn-solid\"\n\t\t\t\t\t\t\t\tonClick={this.next}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={!canContinue}\n\t\t\t\t\t\t\t\ttext=\"Next\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default RegisterComponent;","import RegisterContainer from \"./register.container\";\n\nexport default RegisterContainer;","import React, {Component} from \"react\";\nimport RegisterComponent from \"./register.component\";\nimport {Provider} from \"../../../services\";\n\ntype Props = {};\n\ntype State = {\n  providers: Array<Object>\n};\n\n/**\n * Component holding the registration logic\n */\nclass RegisterContainer extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { providers: [] };\n  }\n\n  async componentDidMount() {\n    const providers = await Provider.getIdentityProviders();\n    this.setState({ providers });\n  }\n\n  render() {\n    const { providers } = this.state;\n    return <RegisterComponent providers={providers} {...this.props} />;\n  }\n}\n\nexport default RegisterContainer;","import NavBar from \"./nav-bar.component\";\n\nexport default NavBar;","import React from \"react\";\nimport {Image, Navbar} from \"react-bootstrap\";\nimport Nav from \"react-bootstrap/Nav\";\nimport LoginComponent from \"./Login\";\nimport RegisterContainer from \"./Register\";\nimport {navbar} from \"../../contexts\";\nimport {CustomModal} from \"../index\";\n\n/**\n * Navigation bar which contains de actions of a user not logged in\n *  @returns {*}\n */\nconst NavBar = () => {\n\n\treturn (\n\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t{/* Application logo, leading to the home */}\n\t\t\t<Navbar.Brand href={process.env.PUBLIC_URL + navbar.logo.href}>\n\t\t\t\t<Image src={process.env.PUBLIC_URL + navbar.logo.src} alt={navbar.logo.alt}/>\n\t\t\t</Navbar.Brand>\n\t\t\t{/* Hamburger menu for mobile and lesser screens */}\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t</Nav>\n\t\t\t\t<Nav>\n\t\t\t\t\t{/* Button that opens the login modal */}\n\t\t\t\t\t<CustomModal img=\"/img/buttons/login.png\" text=\"Login\"\n\t\t\t\t\t\t\t\tcomponent={<LoginComponent/>}/>\n\t\t\t\t\t{/* Button that opens the register modal */}\n\t\t\t\t\t<CustomModal img=\"/img/buttons/register.png\" text=\"Register\"\n\t\t\t\t\t\t\t\tcomponent={<RegisterContainer/>}/>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./cards.css\";\n\n/**\n * Cards with the friends names and their WebIds\n * @param props\n * \t\t\tonClick, action to do when clicking the card\n * \t\t\tenable, sets or not the link to the friend profile\n * \t\t\tfriend, friend webId\n * @returns {*}\n * @constructor\n */\nexport const FriendCardComponent = (props) => {\n\n\treturn (\n\t\t<div className={\"route-card friend-card\"} onClick={props.onClick}>\n\t\t\t{/* Left side of the card, contains the image and hidden fields */}\n\t\t\t<div className=\"route-card-left friend-card-left\">\n\t\t\t\t{/* Hidden fields, the whole webId */}\n\t\t\t\t<div className=\"route-card-extra friend-card-extra\">\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t{props.enable\n\t\t\t\t\t\t\t? <a href={props.friend}>{props.friend}</a>\n\t\t\t\t\t\t\t: props.friend}\n\t\t\t\t\t</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* Right side of the card, with the visible info, in this case, the cut username */}\n\t\t\t<div className={\"route-card-right friend-card-right\"}>\n\t\t\t\t{/* Extracts the username from the webId */}\n\t\t\t\t<h3>{props.friend.split(\".\")[0].substring(8, props.friend.split(\".\")[0].length)}</h3>\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import React, {useState} from \"react\";\nimport {Image} from \"react-bootstrap\";\nimport {CustomButton} from \"../index\";\nimport {errorToaster, successToaster, infoToaster} from \"../../utils\";\nimport \"./cards.css\";\n\n/**\n * Cards with the notification info to display on the lists of routes\n * @param props\n * \t\t\taction, holding the action to do (accept the notification)\n * \t\t\tread, if the notifications is already accepted or not\n * \t\t\tdisabled, state of the accept button\n * @returns {*}\n * @constructor\n */\nexport const NotificationCardComponent = (props) => {\n\n\t// Status to reload or set the card if the it's accepted\n\tlet [isAccepted, setAccepted] = useState(props.read);\n\n\t/**\n\t * Async call to the accept action and set the status change, if successful or not throws a toaster\n\t */\n\tlet accept = async () => {\n\t\ttry {\n\t\t\tif(await props.condition()){\n\t\t\t\tlet read = await props.action();\n\t\t\t\tsetAccepted(read === true);\n\t\t\t\tsuccessToaster(\"The route has been accepted\");\n\t\t\t}else{\n\t\t\t\tinfoToaster(props.message);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\terrorToaster(err.message, err.name);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={\"route-card \" + (isAccepted ? \"already-accepted\" : \"\")} data-testid={\"noticard\"}>\n\t\t\t{/* Left side of the card, contains the image and hidden fields */}\n\t\t\t<div className=\"route-card-left\">\n\t\t\t\t<Image src={process.env.PUBLIC_URL + \"/img/cards/notification.png\"} alt={\"Notification\"}\n\t\t\t\t\tclassName=\"route-card-image\"/>\n\t\t\t\t{/* Hidden fields, same as the visible with the accept button in case it is pending */}\n\t\t\t\t<div className=\"route-card-extra\">\n\t\t\t\t\t<h4>{props.name}</h4>\n\t\t\t\t\t<p className=\"route-card-p\">{props.user}</p>\n\t\t\t\t\t{/* Accepted label or button to accept based on the status of notification */}\n\t\t\t\t\t{isAccepted\n\t\t\t\t\t\t? <div className=\"route-card-link\"> Accepted </div>\n\t\t\t\t\t\t: <div>\n\t\t\t\t\t\t\t<CustomButton onClick={accept} disabled={props.disabled} text=\"Accept\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"route-card-button\" testid={\"notibtn\"}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* Right side of the card, with the visible info */}\n\t\t\t<div className={\"route-card-right notification-card-right\"}>\n\t\t\t\t<h4>{props.name}</h4>\n\t\t\t\t<p className=\"route-card-p\">{props.user}</p>\n\t\t\t\t{/* Status of the notification */}\n\t\t\t\t{(isAccepted)\n\t\t\t\t\t? <div className=\"route-card-link\"> Accepted </div>\n\t\t\t\t\t: <div className=\"route-card-link\"> Pending </div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faExternalLinkAlt, faFolderOpen, faRoute, faUserFriends} from \"@fortawesome/free-solid-svg-icons\";\nimport {Link} from \"react-router-dom\";\nimport \"./cards.css\";\n\n/**\n * Cards with the profile info\n * @param props\n * \t\t\twebId, webId of the user\n * \t\t\timage, image to display\n * \t\t\tnMyRoutes, number of own routes\n * \t\t\tnFriendsRoutes, number of friend routes\n * @returns {*}\n * @constructor\n */\nexport const ProfileCardComponent = (props) => {\n\n\tconst {webId} = props;\n\n\treturn (\n\t\t<div className={\"route-card\"}>\n\t\t\t{/* Left side of the card, contains the image and hidden fields */}\n\t\t\t<div className=\"route-card-left profile-card-left\">\n\t\t\t\t{props.image}\n\t\t\t\t{/* Hidden fields, showing the info of the user */}\n\t\t\t\t<div className=\"route-card-extra\">\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t{props.name}\n\t\t\t\t\t\t<a href={props.webId}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faExternalLinkAlt} data-toggle=\"tooltip\" title=\"My POD\"/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</h1>\n\t\t\t\t\t{/* Info stats to display */}\n\t\t\t\t\t<div className=\"stats\">\n\t\t\t\t\t\t{/* Number of own routes and navigation points to them */}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to={\"/myRoutes\"}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faRoute}/>\n\t\t\t\t\t\t\t\t<div className=\"title\">My Routes</div>\n\t\t\t\t\t\t\t\t<div className=\"value\">{props.nMyRoutes ? props.nMyRoutes : \"0\"}</div>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* Number of friend routes and navigation point to them */}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to={\"/friendsRoutes\"}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserFriends}/>\n\t\t\t\t\t\t\t\t<div className=\"title\">Friend Routes</div>\n\t\t\t\t\t\t\t\t<div className=\"value\">{props.nFriendsRoutes ? props.nFriendsRoutes : \"0\"}</div>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* Navigation point to the pod */}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href={webId}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faFolderOpen}/>\n\t\t\t\t\t\t\t\t<div className=\"title\">My POD</div>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* Right side of the card, with the visible info */}\n\t\t\t<div className={\"route-card-right profile-card-right\"}>\n\t\t\t\t<h1>{props.name}</h1>\n\t\t\t\t<p className=\"profile-card-webid\">{props.user}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import React from \"react\";\nimport {Image} from \"react-bootstrap\";\nimport \"./cards.css\";\n\n/**\n * Cards with the Route info to display on the lists of routes\n * @param props\n * \t\t\tname, name of the route\n * \t\t\tdesc, description of the route\n * @returns {*}\n * @constructor\n */\nexport const RouteCardComponent = (props) => {\n\treturn (\n\t\t<div className=\"route-card\">\n\t\t\t{/* Left side of the card, contains the image and hidden fields */}\n\t\t\t<div className=\"route-card-left\">\n\t\t\t\t<Image src={process.env.PUBLIC_URL + \"/img/cards/route.png\"} alt={\"Route\"}\n\t\t\t\t\tclassName=\"route-card-image\"/>\n\t\t\t\t{/* Hidden fields, same as visible with a Show indicator */}\n\t\t\t\t<div className=\"route-card-extra\">\n\t\t\t\t\t<h4>{props.name}</h4>\n\t\t\t\t\t<p className=\"route-card-p\">{props.desc}</p>\n\t\t\t\t\t<div className=\"route-card-link\">\n\t\t\t\t\t\tShow\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* Right side of the card, with the visible info */}\n\t\t\t<div className=\"route-card-right\">\n\t\t\t\t<h4>{props.name}</h4>\n\t\t\t\t<p className=\"route-card-p\">{props.desc}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n};","import ErrorBoundary from \"./error-boundary.component\";\n\nexport default ErrorBoundary;\n","import React from \"react\";\n\n//https://codepen.io/gaearon/pen/wqvxGa?editors=0010\n/**\n* Component that shows the Javascript error without react crash\nMore info:https://reactjs.org/docs/error-boundaries.html\n*/\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n  \n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n    // You can also log error messages to an error reporting service here\n  }\n  \n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }  \n}\n\nexport default ErrorBoundary;","import React, {Component} from \"react\";\nimport {Map, Polyline, TileLayer, Marker} from \"react-leaflet\";\n\nlet polyline = [];\n\n/**\n * Map displaying the route\n */\nexport default class RouteMap extends Component<> {\n\n\t/**\n\t * Constructor, loads the route points in the polyline to print\n\t * @param props\n\t * \t\t\troute, route to display\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tpolyline = [];\n\t\tthis.props.route.items.forEach((item) => polyline.push([item.latitude,item.longitude]));\n\t}\n\n\t/**\n\t * Gets the max point of each coordinate with the route points to know the bounds of it\n\t * @returns {{east: number, south: number, north: number, west: number}}\tBounds of the route\n\t */\n\tgetBounds() {\n\t\tlet north = Math.max.apply(null, polyline.map((x) => x[0]));\n\t\tlet east = Math.max.apply(null, polyline.map((x) => x[1]));\n\t\tlet south = Math.min.apply(null, polyline.map((x) => x[0]));\n\t\tlet west = Math.min.apply(null, polyline.map((x) => x[1]));\n\t\treturn {north: north, east: east, south: south, west: west};\n\t}\n\n\t/**\n\t * Calculates the center of the route based on its bounds\n\t * @returns {number[]}\tCenter coordinates of the route\n\t */\n\tgetCenter() {\n\t\tlet bounds = this.getBounds();\n\t\treturn [(bounds.north+bounds.south)/2, (bounds.east+bounds.west)/2];\n\t}\n\n\t/**\n\t * Calculates the zoom level to display the whole route as good as possible\n\t * @returns {number}\n\t */\n\tgetZoomLevel() {\n\t\tlet WORLD_DIM = { height: 256, width: 256 };\n\t\tlet ZOOM_MAX = 20;\n\n\t\t// Calculates the latitude\n\t\tfunction latRad(lat) {\n\t\t\tlet sin = Math.sin(lat * Math.PI / 180);\n\t\t\tlet radX2 = Math.log((1 + sin) / (1 - sin)) / 2;\n\t\t\treturn Math.max(Math.min(radX2, Math.PI), -Math.PI) / 2;\n\t\t}\n\n\t\t// Calculates the zoom\n\t\tfunction zoom(mapPx, worldPx, fraction) {\n\t\t\treturn Math.floor(Math.log(mapPx / worldPx / fraction) / Math.LN2);\n\t\t}\n\n\t\tlet bounds = this.getBounds();\n\t\tlet lngDiff = bounds.east - bounds.west;\n\n\t\tlet latFraction = (latRad(bounds.north) - latRad(bounds.south)) / Math.PI;\n\t\tlet lngFraction = ((lngDiff < 0) ? (lngDiff + 360) : lngDiff) / 360;\n\n\t\tlet latZoom = zoom(500, WORLD_DIM.height, latFraction);\n\t\tlet lngZoom = zoom(500, WORLD_DIM.width, lngFraction);\n\n\t\treturn Math.min(latZoom, lngZoom, ZOOM_MAX);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Map center={this.getCenter()} zoom={this.getZoomLevel()}>\n\t\t\t\t{/* Map loaded from OSM */}\n\t\t\t\t<TileLayer\n\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t/>\n\t\t\t\t{/* Initial and last point of the route, and drawing of it */}\n\t\t\t\t<Marker position={polyline[0]}/>\n\t\t\t\t<Polyline color=\"blue\" positions={polyline} />\n\t\t\t\t<Marker position={polyline[polyline.length-1]}/>\n\t\t\t</Map>\n\t\t);\n\t}\n}","import RouteMap from \"./route-map.component\";\n\nexport default RouteMap;","import React, { useState } from \"react\";\nimport { NotificationTypes } from \"@inrupt/solid-react-components\";\nimport { storageHelper } from \"../../../viade\";\nimport { List, LoggedIn } from \"@solid/react\";\nimport { FriendCard } from \"../../index\";\nimport { errorToaster, successToaster } from \"../../../utils\";\n\n/**\n * Component loaded on the modal with sharing functionality\n * @param webId                 webId of the current user\n * @param friend                webId of the friend\n * @param sendNotification      action to send the notification\n * @param route                 route to share\n * @returns {*}\n * @constructor\n */\nconst ShareFormComponent = ({ webId, friend, sendNotification, route }) => {\n\n    let [sentTo, setSentTo] = useState([]);\n\n    /**\n     * Shares the specified route\n     * @returns {Promise<void>}\n     */\n    const shareRoute = async () => {\n        try {\n            const licenseUrl = \"https://creativecommons.org/licenses/by-sa/4.0/\";\n            const inbox = storageHelper.getInboxFolder(friend);\n            const to = inbox;\n            const target = friend;\n            await sendNotification({\n                    title: route.name,\n                    summary: \"route sharing\",\n                    actor: webId,\n                    object: route.url,\n                    target,\n                },\n                to,\n                NotificationTypes.OFFER,\n                licenseUrl\n            );\n            successToaster(\"The route has been shared!!\");\n        } catch (error) {\n          errorToaster(\"An error has occurred sharing the route\");\n        }\n      };\n\n    /**\n     * Sets the user to share the route\n     * @param target        Friend to share\n     */\n    const shareWith = (target) => {\n        setSentTo([...sentTo, target]);\n\n        if (target.includes(\"profile/card#me\")) {\n            friend = target;\n        } else {\n            friend = target.concat(\"profile/card#me\");\n        }\n\n        shareRoute();\n      };\n\n    return (\n        <form className={\"list-holder\"} style={{ width: \"750px\" }}>\n            <h1>Share with</h1>\n            <LoggedIn>\n                {/* List fo friends */}\n                <List src=\"user.friends\">\n                    {(friend) =>\n                        sentTo.includes(`${friend}`) ? null : (\n                            <FriendCard\n                                key = {`${friend}`}\n                                friend = {`${friend}`}\n                                enable = {false}\n                                onClick = {() => shareWith(`${friend}`)}\n                            />)}\n                </List>\n            </LoggedIn>\n        </form>\n    );\n};\n\nexport default ShareFormComponent;\n","import ShareComponent from \"./share.container\";\n\nexport default ShareComponent;","import React, {useState} from \"react\";\nimport {ShareFormComponent} from \"./children\";\nimport {useNotification,withWebId} from \"@inrupt/solid-react-components\";\nimport { permissionHelper,errorToaster } from \"../../utils\";\n\n/**\n * Share component to open when loaded the modal\n * @param props\n * \t\t\twebId, webId of the current user\n * \t\t\troute, route to share\n * @returns {*}\n * @constructor\n */\nconst ShareComponent = (props) => {\n\tconst [friend] = useState(\"\");\n\tconst {webId, route} = props;\n\tconst {createNotification} = useNotification(webId);\n\n\t/**\n\t * Sends the notification to the specified user\n\t * @param content\t\t\t\tContent to share\n\t * @param to\t\t\t\t\tObjective of the notification\n\t * @param type\t\t\t\t\tType of the sharing\n\t * @param license\t\t\t\tLicense of sharing\n\t * @returns {Promise<void>}\n\t */\n\tconst sendNotification = async (content, to, type, license) => {\n\t\ttry {\n\t\t\tawait permissionHelper.setReadPermissionRoute(content.actor,content.target,route);\n\t\t\tawait createNotification(content, to, type, license);\n\t\t} catch(error) {\n\t\t\terrorToaster(\"An error has occurred creating the notification\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<ShareFormComponent {...{\n\t\t\t\twebId,\n\t\t\t\tfriend,\n\t\t\t\tsendNotification,\n\t\t\t\troute\n\t\t\t}} />\n\t\t</div>\n\t);\n\n};\n\nexport default withWebId(ShareComponent);\n","import RouteTitle from \"./routes-title.component\";\n\nexport default RouteTitle;","import React, {Component} from \"react\";\nimport SolidFileClient from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport \"./routes-title.css\";\nimport {CustomButton, CustomModal} from \"../../\";\nimport ShareComponent from \"../../Share\";\nimport {RouteToRDF,storageHelper} from \"../../../viade\";\nimport {errorToaster,successToaster} from \"../../../utils/toaster\";\n\n/**\n * Component featuring the route information\n */\nclass RouteTitle extends Component {\n\n\t/**\n\t * The page receives the route and will show its name and description\n\t * @param props\n\t * \t\t\troute, with the info to show, edit or share\n\t * \t\t\tshare, indicates if the routes is sharable and editable\n\t * \t\t\twebId, webId of the user\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.route = props.route;\n\t\tthis.name = props.route.name;\n\t\tthis.description = props.route.description;\n\t\tthis.share = props.share;\n\t\tthis.webId = props.webId;\n\t\tthis.state = {\n\t\t\tisEditing: false,\n\t\t\teditedName: this.name,\n\t\t\teditedDescription: this.description\n\t\t};\n\t}\n\n\t/**\n\t * Changes the name and description to be modifiable\n\t */\n\tedit = () => { this.setState({isEditing: true}); };\n\n\t/**\n\t * Saves the route with the modified fields\n\t */\n\tsave = async () => {\n\t\tthis.setState({isEditing: false});\n\t\tthis.name = this.state.editedName;\n\t\tthis.description = this.state.editedDescription;\n\t\tif ( this.route.name !== this.name || this.route.description !== this.description) {\n\t\t\tthis.route.name = this.name;\n\t\t\tthis.route.description = this.description;\n\n\t\t\tlet parserToRDF = new RouteToRDF(this.route);\n\t\t\t//Parsear la ruta a RDF\n\t\t\tlet strRoute = parserToRDF.parse();\n\t\t\t//this.route.url -> https://viadees4c.solid.community/viade/routes/1587668614753.ttl\n\t\t\tconst rutaPod = storageHelper.getMyRoutesFolder(this.webId); //\n\t\t\t//this.webId -> https://viadees4c.solid.community/profile/card#me\n\t\t\tconst aux = this.route.url.split(\"/\");\n\t\t\tconst nombreRuta = aux[aux.length - 1];\n\t\t\tconst url = rutaPod + nombreRuta;//no tiene sentido quitar el .ttl para luego volver a ponerlo :)\n\t\t\t//Subir La ruta al pod\n\t\t\ttry {\n\t\t\t\tconst fc = new SolidFileClient(auth);\n\t\t\t\tawait fc.createFile(url, strRoute, \"text/turtle\", {});\n\n\t\t\t\tsuccessToaster(\"Route modified successfully\");\n\n\t\t\t} catch (e) {\n\t\t\t\terrorToaster(\"Error in the modification\");\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Updates the name/description of the item\n\t * @param evt\t\tEvent triggering the update\n\t */\n\tupdateName = (evt) => { this.setState( {editedName: evt.target.value}); };\n\tupdateDescription = (evt) => { this.setState( {editedDescription: evt.target.value}); };\n\n\t/**\n\t * Function to hold the Enter (save) and Escape (abort) actions\n\t * @param e\n\t */\n\thandleKeyEnter = (e) => {\n\t\tif (e.key === \"Enter\" && this.state.isEditing) {\n\t\t\tthis.save();\n\t\t}\n\t\tif (e.key === \"Escape\" && this.state.isEditing) {\n\t\t\tthis.setState( {editedName: this.name});\n\t\t\tthis.setState( {editedDescription: this.description});\n\t\t\tthis.setState({isEditing: false});\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"d-inline-flex w-100 overflow-hidden\">\n\t\t\t\t<div className=\"flex-grow-1\">\n\t\t\t\t\t{/* Name of the route, it's an input if editing */}\n\t\t\t\t\t{(this.state.isEditing)\n\t\t\t\t\t\t? \t<div className={\"flex-grow-1\"}>\n\t\t\t\t\t\t\t\t<input type={\"text\"} className=\"edit edit-title\" onKeyDown={this.handleKeyEnter}\n\t\t\t\t\t\t\t\t\tvalue={this.state.editedName} onChange={this.updateName} data-testid={\"inputName\"}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: \t<h1 className=\"title-text\">{this.name}</h1>}\n\t\t\t\t\t{/* Description of the route, it's an input if editing */}\n\t\t\t\t\t{(this.state.isEditing)\n\t\t\t\t\t\t? \t<div className={\"flex-grow-1\"}>\n\t\t\t\t\t\t\t\t<input type={\"text\"}  className=\"edit\" onKeyDown={this.handleKeyEnter}\n\t\t\t\t\t\t\t\t\tvalue={this.state.editedDescription} onChange={this.updateDescription}\n\t\t\t\t\t\t\t\t\tdata-testid={\"inputDesc\"}/>/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: \t<p className=\"title-text\">{this.description}</p>}\n\t\t\t\t</div>\n\t\t\t\t{/* Share and edit buttons, only visible when the route is owned */}\n\t\t\t\t{ this.share\n\t\t\t\t\t?\t<div>\n\t\t\t\t\t\t\t{(this.state.isEditing)\n\t\t\t\t\t\t\t\t? <CustomButton onClick={this.save} img=\"/img/buttons/save.png\" testid={\"savebtn\"}/>\n\t\t\t\t\t\t\t\t: <CustomButton onClick={this.edit} img=\"/img/buttons/edit.png\" testid={\"editbtn\"}/> }\n\t\t\t\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t\t\t\t<CustomModal text=\"Share\" img=\"/img/buttons/share.png\"\n\t\t\t\t\t\t\t\t\tcomponent={<ShareComponent route={this.route} webId={this.webId}/>}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: \tnull\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RouteTitle;","import RoutesCarousel from \"./routes-carousel.component\";\n\nexport default RoutesCarousel;","import React from \"react\";\nimport {Image, Carousel} from \"react-bootstrap\";\nimport \"./routes-carousel.component.css\";\n\n\n/**\n * Slide with the images of the route\n */\nclass RoutesCarousel extends React.Component {\n\n\t/**\n\t * Loads the data to display from the props\n\t * @param props\n\t * \t\t\tmedia, images and videos to show\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.data = props.media;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\tthis.data.length > 0 ?\n\t\t\t\t<Carousel interval={5000}>\n\t\t\t\t\t{this.data.map(function (object) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Carousel.Item key={object.getUrl()}>\n\t\t\t\t\t\t\t\t{object.getComponent()}\n\t\t\t\t\t\t\t</Carousel.Item>);\n\t\t\t\t\t})}\n\t\t\t\t</Carousel>\n\t\t\t: \t<div className={\"no-media\"}>\n\t\t\t\t\t{/* If the route has no media, it advises it */}\n\t\t\t\t\t<Image src={process.env.PUBLIC_URL + \"/img/advises/nomedia.png\"}/>\n\t\t\t\t\t<h3>This route doesn't have any attached media</h3>\n\t\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default RoutesCarousel;\n\n","import RoutesItinerary from \"./routes-itinerary.component\";\n\nexport default RoutesItinerary;","import React, {useState} from \"react\";\nimport {Collapse} from \"react-bootstrap\";\nimport \"./routes-itinerary.css\";\nimport {CustomButton} from \"../../\";\n\n/**\n * Element listing all the points of the app, it is a collapsible\n * @param props\n * \t\t\troute, holding the points to display\n * @returns {*}\n * @constructor\n */\nconst RoutesItinerary = (props) => {\n\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tconst toggle = () => setIsOpen(!isOpen);\n\n\treturn (\n\t\t<div>\n\t\t\t{/* Button to open and close the collapsible */}\n\t\t\t<CustomButton onClick={toggle} text=\"Points\" className=\"dropdown-toggle w-100\"/>\n\t\t\t<Collapse in={isOpen}>\n\t\t\t\t<div>\n\t\t\t\t\t{/* List of points (latitude and longitude) */}\n\t\t\t\t\t{props.route.items.map(function (object) {\n\t\t\t\t\t\treturn <div key={object.latitude + object.longitude} className=\"coordinate\">\n\t\t\t\t\t\t\t{object.latitude}, {object.longitude}\n\t\t\t\t\t\t</div>;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</Collapse>\n\t\t</div>\n\t);\n\n};\n\nexport default RoutesItinerary;","import React, {useState} from \"react\";\nimport {Collapse} from \"react-bootstrap\";\nimport \"./routes-media-upload.css\";\nimport {CustomButton} from \"../../\";\nimport ImageUploader from \"react-images-upload\";\nimport {infoToaster, successToaster, warningToaster} from \"../../../utils\";\nimport {storageHelper} from \"../../../viade/util\";\nimport {ImageViade, VideoViade} from \"../../../viade/Model\";\nimport {RouteToRDF} from \"../../../viade/Parsers/ParserToRDF\";\nimport SolidFileClient from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\n\nconst fc = new SolidFileClient(auth);\n\n/**\n * Collapsible containing the component to upload new media to a route\n */\nconst RoutesMediaUpload = (props) => {\n\n\tlet media = [];\n\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tconst {route, webId} = props;\n\n\tconst toggle = () => setIsOpen(!isOpen);\n\n\tconst mediaSelectedHadler = (e) => {\n\t\tmedia = e;\n\t};\n\n\tconst summitHandler = async () => {\n\n\t\tif (media.length === 0) {\n\t\t\twarningToaster(\"You need to upload a file\", \"Warn\");\n\t\t} else {\n\t\t\tinfoToaster(\"Uploading files\");\n\t\t\tconst rutaMedia = storageHelper.getMediaFolder(webId);\n\t\t\t//webid -> https://usernamme.solid.community/profile/card#me\n\t\t\tconst date = Date.now();\n\t\t\tconst url = route.url;\n\n\n\t\t\t// Subida de archivos\n\t\t\ttry {\n\t\t\t\tfor (let i = 0; i < media.length; i++) {\n\t\t\t\t\tlet extension = \".\" + media[i].name.split(\".\").slice(-1)[0];\n\t\t\t\t\tawait fc.putFile(rutaMedia + date + \"_\" + i + extension, media[i], media[i].type);\n\t\t\t\t\tif (media[i].name.includes(\".mp4\")) {\n\t\t\t\t\t\troute.media.push(new VideoViade(rutaMedia + date + \"_\" + i + extension, webId.substring(0, webId.length - 16), new Date()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\troute.media.push(new ImageViade(rutaMedia + date + \"_\" + i + extension, webId.substring(0, webId.length - 16), new Date()));\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(\"Error in the upload of the media\");\n\t\t\t}\n\t\t\tlet strRoute = null;\n\t\t\ttry {\n\t\t\t\tlet parserToRDF = new RouteToRDF(route);\n\t\t\t\tstrRoute = parserToRDF.parse();\n\t\t\t\t//Ya tenemos un String para meter en SolidFileClient\n\t\t\t\tif (strRoute == null) {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(\"Error in the content of the route\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t//const res = await fc.putFile(url, file, file.type);\n\t\t\t\tawait fc.createFile(url, strRoute, \"text/turtle\", {});\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(\"Error uploading files\");//console.error(err); // Da warning aquí por usar la consola\n\t\t\t}\n\t\t\tsuccessToaster(\"Route uploaded succesfully\");\n\t\t}\n\n\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<CustomButton onClick={toggle} text=\"Upload media\" className=\"dropdown-toggle w-100\" testid={\"drbtn\"}/>\n\t\t\t\t<Collapse in={isOpen}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ImageUploader\n\t\t\t\t\t\t\twithIcon={true}\n\t\t\t\t\t\t\twithPreview={true}\n\t\t\t\t\t\t\tbuttonText='Choose images and videos'\n\t\t\t\t\t\t\tonChange={mediaSelectedHadler}\n\t\t\t\t\t\t\timgExtension={[\".jpg\", \".gif\", \".png\", \".gif\", \".mp4\"]}\n\t\t\t\t\t\t\tmaxFileSize={5242880}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CustomButton onClick={summitHandler} text=\"Upload\" className=\"w-100 mb-4\" testid={\"upbtn\"}/>\n\t\t\t\t\t</div>\n\n\t\t\t\t</Collapse>\n\t\t\t</div>\n\t\t);\n\n\t};\n\nexport default RoutesMediaUpload;","import RoutesMediaUpload from \"./routes-media-upload.component\";\n\nexport default RoutesMediaUpload;","import Spacer from \"./spacer.component\";\n\nexport default Spacer;","import React from \"react\";\nimport \"./spacer.component.css\";\n\n/**\n * Component to create empty spaces\n * @returns {*}\n * @constructor\n */\nconst Spacer = () => {\n\treturn (\n\t\t<div className=\"spacer\">\n\t\t\t&nbsp;\n\t\t</div>\n\t);\n};\n\nexport default Spacer;","import Toaster from \"./toaster.component\";\n\nexport default Toaster;\n","import React from \"react\";\n\ntype Props = {\n  title: String,\n  content: String,\n  link: { href: string, label: string }\n};\n\n\nconst Toaster = (props: Props) => {\n  const { title, content, link } = props;\n  return (\n    <div className=\"toaster\">\n      <span>{title}</span>\n      <p>{content}</p>\n      {link && (\n        <a href={link.href} target=\"_blank\" rel=\"noopener noreferrer\">\n          {link.label}\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default Toaster;\n","import RouteItem from \"./route-item.component\";\n\nexport default RouteItem;","import React, {Fragment, useState} from \"react\";\nimport {routeHelper} from \"../../../viade\";\nimport {RouteCard} from \"../../../components\";\nimport {errorToaster} from \"../../../utils\";\nimport {Col} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\n/**\n * Item with all the info and functionality of the routes on the list\n * @param props\n * \t\t\turl, url of the route\n * \t\t\tshare, if the route is owned or shared\n * @returns {*}\n * @constructor\n */\nconst RouteItem = (props) => {\n\tconst [route, setRoute] = useState();\n\tconst {url, share} = props;\n\n\t/**\n\t * Loads the info of the route\n\t * @returns {Promise<void>}\n\t */\n\tconst init = async () => {\n\t\tif (route) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tsetRoute(await routeHelper.getBasicRoute(url));\n\t\t} catch (error) {\n\t\t\tlet link = {href: url, label: url};\n\t\t\terrorToaster(error.message, error.name, link);\n\t\t}\n\t};\n\n\tinit();\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{route ?\n\t\t\t\t<Col md={12} lg={4}>\n\t\t\t\t\t{/* Route card to display with the link to its page */}\n\t\t\t\t\t<Link\n\t\t\t\t\t\tkey={route.name}\n\t\t\t\t\t\tclassName=\"card-a\"\n\t\t\t\t\t\tto={\"/showRoute/\" + (share ? \"my/\" : \"friend/\") + encodeURIComponent(route.url)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<RouteCard name={route.name} desc={route.description} media={route.media}/>\n\t\t\t\t\t</Link>\n\t\t\t\t</Col> : null}\n\t\t</Fragment>\n\n\t);\n};\n\nexport default RouteItem;\n","import RouteList from \"./route-list.component\";\n\nexport default RouteList;","import React, {useState} from \"react\";\nimport RouteItem from \"./RouteItem\";\nimport {Col, Row} from \"react-bootstrap\";\nimport {errorToaster} from \"../../utils\";\nimport {Loader, Spacer} from \"../index\";\n\n/**\n * List to display all the passed routes\n * @param props\n * \t\t\treadRoutes, function to load the routes\n * \t\t\twebId, webId of the user\n * \t\t\tshare, specifies if the routes are own by the user or are shared\n * @returns {*}\n * @constructor\n */\nconst RouteList = (props) => {\n\n\tconst [urlRoutes, setUrlRoutes] = useState();\n\tconst {readRoutes, webId, share} = props;\n\n\t/**\n\t * Calls to retrieve the routes to load\n\t * @returns {Promise<void>}\n\t */\n\tconst initRoutes = async () => {\n\t\tif (urlRoutes) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tlet urls = await readRoutes();\n\t\t\tsetUrlRoutes(urls);\n\t\t} catch (error) {\n\t\t\terrorToaster(error.message, error.name);\n\t\t}\n\t};\n\n\tinitRoutes();\n\n\treturn (\n\t\t<div>\n\t\t\t{urlRoutes\n\t\t\t\t? <Row className=\"justify-content-md-center\">\n\t\t\t\t\t<Col key=\"col-1\" xs={12} sm={12} md={12} lg={1} xl={1}/>\n\t\t\t\t\t<Col key=\"col-2\" xs={12} sm={12} md={12} lg={10} xl={10}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{/* Routes to show */}\n\t\t\t\t\t\t\t{urlRoutes.length > 0 ?\n\t\t\t\t\t\t\t\turlRoutes.map((url, pos) =>\n\t\t\t\t\t\t\t\t\t<RouteItem key={pos} url={url} webId={webId} share={share}/>\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t<h4 style={{textAlign: \"center\", margin: \"15px 0 0 0\", width: \"100%\"}}>\n\t\t\t\t\t\t\t\t\tSadly, you don't have routes to show here yet :(\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col key=\"col-3\" xs={12} sm={12} md={12} lg={1} xl={1}/>\n\t\t\t\t</Row>\n\t\t\t\t: <div>\n\t\t\t\t\t<Spacer/>\n\t\t\t\t\t{/* Loader to show when initRoutes didn't load any route yet */}\n\t\t\t\t\t<Loader size=\"150px\"/>\n\t\t\t\t</div>}\n\t\t</div>);\n};\n\nexport default RouteList;\n\n","import CustomButton from \"./custom-button.component\";\n\nexport default CustomButton;","import React from \"react\";\nimport {Image} from \"react-bootstrap\";\nimport \"./custom-button.css\";\n\n/**\n * Customized and generic button to use through the application\n * @param props\n * \t\t\tonClick, action to perform by the button\n * \t\t\tclassName, extra classes of the button\n * \t\t\ttype, type of the button in case it's different to button\n * \t\t\tdisabled, property to set the button as disabled or not\n * \t\t\timg, image of the button if it will have any\n * \t\t\ttext, text of the button (also the alt of the image in case it has\n * @returns {*}\n * @constructor\n */\nconst CustomButton = (props) => {\n\n\treturn (\n\t\t<button onClick={props.onClick} className={\"custom-button \" + (props.className ? props.className : \"\")}\n\t\t\ttype={(props.type ? props.type : \"button\") } disabled={(props.disabled ? props.disabled : false)}\n\t\t\tdata-testid={(props.testid ? props.testid : \"predefinedtestid\")}>\n\t\t\t{props.img ?\n\t\t\t\t<Image src={process.env.PUBLIC_URL + props.img} alt={props.text} className=\"cb-img\"/>\n\t\t\t\t: null}\n\t\t\t{props.text}\n\t\t</button>\n\t);\n\n};\n\nexport default CustomButton;","import CustomModal from \"./custom-modal.component\";\n\nexport default CustomModal;","import * as React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {CustomButton} from \"../../Customs\";\n\n/**\n * Button triggering a modal pop-up with the component specified\n * @param props\n * \t\timg, image of the button\n * \t\ttext, text of the button\n * \t\tcomponent, component to open with the modal\n */\nconst CustomModal = (props) => {\n\n\t// Status of the button to reload when it changes\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\n\t/*\n\t * Opens the modal\n\t */\n\tconst showModal = () => {\n\t\tsetIsOpen(true);\n\t};\n\n\t/*\n\t * Closes the modal\n\t */\n\tconst hideModal = () => {\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<CustomButton onClick={showModal} img={props.img} text={props.text}/>\n\t\t\t<Modal show={isOpen} onHide={hideModal}>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t{props.component}\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nexport default CustomModal;","import Loader from \"./loader-component\";\n\nexport default Loader;","import React from \"react\";\nimport {RingLoader} from \"react-spinners\";\nimport {Col, Row} from \"react-bootstrap\";\n\n/**\n * Spinner to show when a page is loading\n * @param props\n * \t\t\tsize, size of the spinner\n * @returns {*}\n * @constructor\n */\nconst Loader = (props) => {\n\treturn <Row className=\"sweet-loading\">\n\t\t<Col xs={12} md={5}/>\n\t\t<Col xs={12} md={\"auto\"}>\n\t\t\t<RingLoader\n\t\t\t\tsize={props.size}\n\t\t\t\tcolor={\"#bcdad3\"}\n\t\t\t/>\n\t\t</Col>\n\t\t<Col xs={12} md={5}/>\n\t</Row>;\n};\n\nexport default Loader;","import React from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Spacer } from \"../../components\";\nimport { home } from \"../../contexts\";\nimport { storageHelper } from \"../../viade\";\nimport \"./home.container.css\";\n\nimport auth from \"solid-auth-client\";\nimport {errorToaster } from \"../../utils\";\n\n/**\n * Home component that returns the homepage\n */\nexport const HomeComponent = () => {\n\n  /**\n   * Checks if the user has the correct folder structure, if not, it creates it\n   */\n  const checkStructure = async () => {\n    let session = await auth.currentSession();\n    if (session) {\n      let webId = session.webId;\n      if (!localStorage.getItem(\"isLogged\")) {\n        try {\n        localStorage.setItem(\"isLogged\", true);\n          await storageHelper.checkFolderStructure(webId);\n        } catch (error) {\n          errorToaster(\"An error has occurred with your POD \");\n        }\n      }\n    }\n  };\n\n  checkStructure();\n\n  return (\n    <Container>\n      {/* Logo row */}\n      <Row key={\"r1\"}>\n        <Col key={\"r1c1\"} xs={12} md={2} />\n        <Col key={\"r1c2\"} xs={12} md={8} className=\"logo-div home-div\">\n          <Image src={process.env.PUBLIC_URL + home.logo} alt={home.name} />\n        </Col>\n        <Col key={\"r1c3\"} xs={12} md={8} />\n      </Row>\n      {/* Description row */}\n      <Row key={\"r2\"}>\n        <Col key={\"r2c1\"} xs={12} md={2} />\n        <Col key={\"r2c2\"} xs={12} md={8} className=\"home-div\">\n          <p>\n            {home.description} <a href={home.link}>{home.team}</a>.\n          </p>\n        </Col>\n        <Col key={\"r2c3\"} xs={12} md={2} />\n      </Row>\n      {/* What you can do row */}\n      <Row key={\"r3\"}>\n        <Col xs={12} md={2} />\n        {home.images.map((image) => (\n          <Col xs={6} md={2} className=\"home-div\" key={image.key}>\n            <Image\n              src={process.env.PUBLIC_URL + image.icon}\n              alt={image.alt}\n              className=\"fill-image\"\n            />\n            <p>{image.text}</p>\n          </Col>\n        ))}\n        <Col xs={12} md={2} />\n      </Row>\n      {/* Empty rows */}\n      {[\"r4\", \"r5\"].map((key) => (\n        <Row key={key}>\n          <Col>\n            <Spacer />\n          </Col>\n        </Row>\n      ))}\n      {/* Solid/UniOvi/Inrupt row */}\n      <Row key={\"r6\"}>\n        <Col key={\"r6c1\"} xs={12} md={3} />\n        {home.footer.map((image) => (\n          <Col xs={4} md={2} className=\"home-div logo-div\" key={image.key}>\n            <Image\n              src={process.env.PUBLIC_URL + image.icon}\n              alt={image.alt}\n              className=\"fill-image\"\n            />\n            <p>{image.text}</p>\n          </Col>\n        ))}\n        <Col key={\"r6c2\"} xs={12} md={3} />\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomeComponent;\n","import {HomeComponent} from \"./home.container\";\n\nexport default HomeComponent;\n","import FileClient from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport {errorToaster, successToaster} from \"../../../utils\";\n\nconst { default: data } = require(\"@solid/query-ldflex\");\n\n/**\n * Checks if the entered webId corresponds to a valid user\n * @param friendWebId\t\tWebId to check\n * @returns {Promise<*>}\tPromise to make the async call\n */\nconst isWebIdValid = async (friendWebId) => {\n\tconst fc = new FileClient(auth);\n\tlet session = await auth.currentSession();\n\tif (!session) { session = await auth.login(); }\n\ttry {\n\t\tlet op = async (client) => await client.itemExists(friendWebId);\n\t\treturn await op(fc);\n\t} catch (e) {\n\t\tsession = await auth.currentSession();\n\t}\n};\n\n/**\n * Checks if the specified webId corresponds to an already friend user\n * @param friendWebId\t\t\t\tWebId to check\n * @param user\t\t\t\t\t\tCurrent user\n * @returns {Promise<boolean>}\t\tPromise to make the async call\n */\nconst isFriend = async (friendWebId, user) => {\n\tfor await (const friend of user.friends)\n\t\tif (String(friend).localeCompare(String(friendWebId)) === 0) {return true;}\n\treturn false;\n};\n\n/**\n * Adds the friend if it is valid and not a friend already, if not throws an error message\n * @param friendWebId\t\t\tWebId of the friend to add\n * @param userWebId\t\t\t\tcurrent user WebId\n * @returns {Promise<void>}\t\tpromise to make the async call\n */\nexport const addFriend = async (friendWebId, userWebId) => {\n\t// Checks the input is valid\n\tif (friendWebId == null || userWebId == null || friendWebId === \"\" || userWebId === \"\"){ return; }\n\t// Loads the current user\n\tconst user = await data[userWebId];\n\t// Checks the friend exists\n\tisWebIdValid(friendWebId).then((res) => {\n\t\tif (!res) { errorToaster(\"The entered user does not exists\"); }\n\t\telse {\n\t\t\t// Checks the friend is not already a friend\n\t\t\tisFriend(friendWebId, user).then((res) => {\n\t\t\t\tif (res) { errorToaster(\"You and this user are already friends\"); }\n\t\t\t\telse {\n\t\t\t\t\t// Adds the friend\n\t\t\t\t\tuser.knows.add(data[friendWebId]).then((res) => {\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\tsuccessToaster(\"Congratulations, this user is already your friend.\\nReload to see the changes\");\n\t\t\t\t\t\t} else { errorToaster(\"Sorry, some unexpected error has occurred\"); }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n};","import {addFriend} from \"./friends.service\";\n\nexport default addFriend;","import React from \"react\";\nimport { Image, List, LoggedIn, Value, withWebId } from \"@solid/react\";\nimport { Button, FormControl, InputGroup, Container} from \"react-bootstrap\";\nimport { FriendCard, ProfileCard } from \"../../components\";\nimport { routeHelper } from \"../../viade\";\nimport { errorToaster } from \"../../utils\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport addFriend from \"./services/\";\nimport \"./profile.container.css\";\n\n/**\n * Page containing all the profile implementation (needs some refactoring to make it modular)\n */\nclass ProfileComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedNMyRoutes: false,\n      loadedNFriendsRoutes: false,\n      enteredWebId: \"\",\n    };\n    this.nMyRoutes = this.getNumMyRoutes();\n    this.nFriendsRoutes = this.getNumSharedWithMe();\n  }\n\n  /**\n   * Loads the number of routes the user has in this app\n   * @returns {Promise<[]|undefined>} Promise that when finished loads the number of routes in the app\n   */\n  getNumMyRoutes = async () => {\n    try {\n      return await routeHelper.fetchAllUrlMyRoutes().then((res) => {\n        this.nMyRoutes = res.length;\n        this.setState({ loadedNMyRoutes: true });   // Sets the number of own routes\n      });\n    } catch (error) {\n      errorToaster(error.message);\n    }\n  };\n\n  /**\n   * Loads the number of routes your friend shared with you in this app\n   * @returns {Promise<undefined>} Promise that when finished loads the number of friend routes\n   */\n  getNumSharedWithMe = async () => {\n    try {\n      return await routeHelper.fetchAllUrlSharedWithMeRoutes().then((res) => {\n        this.nFriendsRoutes = res ? res.length : 0;\n        this.setState({ loadedNFriendsRoutes: true });  // Sets the number of friend routes\n      });\n    } catch (error) {\n      errorToaster(error.message);\n    }\n  };\n\n  /**\n   * Updates the entered web id in the new friend input\n   * @param evt Event triggering the update\n   */\n  updateFriendWebId = (evt) => { this.setState( {enteredWebId: evt.target.value}); };\n\n  render() {\n    return (\n      <Container>\n        <LoggedIn>\n          {/* Profile card of the user */}\n          <ProfileCard\n            webId={this.props.webId}\n            image={\n              /* Image doesn't load a lot of the times */\n              <Image\n                src=\"user.image\"\n                defaultSrc={process.env.PUBLIC_URL + \"/img/cards/profile.png\"}\n                className=\"profile route-card-image\"\n                alt={\"Profile image\"}\n              />\n            }\n            name={<Value src=\"user.name\" />}\n            user={<Value src=\"user\" />}\n            nMyRoutes={this.state.loadedNMyRoutes ? this.nMyRoutes : null}\n            nFriendsRoutes={\n              this.state.loadedNFriendsRoutes ? this.nFriendsRoutes : null\n            }\n          />\n          <h2 style={{ textAlign: \"center\" }}>Friends</h2>\n          <div className={\"list-holder\"}>\n            {/* Input group where to add the friend */}\n            <InputGroup className=\"mb-3\">\n              {/* input */}\n              <FormControl\n                  onChange={this.updateFriendWebId}\n                  placeholder=\"Username WebId\"\n                  aria-label=\"Username WebId\"\n                  aria-describedby=\"basic-addon2\"\n              />\n              {/* solid community indicator and submit button */}\n              <InputGroup.Append>\n                <Button variant=\"outline-primary\"\n                        onClick={() => addFriend(this.state.enteredWebId, this.props.webId, this.updateLastFriend)}>\n                  <FontAwesomeIcon icon={faPlus} data-toggle=\"tooltip\" title=\"My POD\"/>\n                   Add Friend\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n            {/* List of friends */}\n            {<List src=\"user.friends\">\n              {(friend) => <FriendCard key={`${friend}`} friend={`${friend}`} enable={true}/>}\n            </List>}\n          </div>\n        </LoggedIn>\n      </Container>\n    );\n  }\n}\nexport default withWebId(ProfileComponent);\n","import ProfileComponent from \"./profile.container\";\nimport {withWebId} from \"@solid/react\";\n\nexport default withWebId(ProfileComponent);","import NotFoundComponent from \"./notfound.component\";\n\nexport default NotFoundComponent;\n","import React from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\n\n/**\n * 404 Page\n * @returns {*}\n * @constructor\n */\nconst NotFoundComponent = () => {\n\treturn (\n\t\t<div className=\"ErrorImage\">\n\t\t\t<NavLink to=\"/\">\n\t\t\t\t<img src={process.env.PUBLIC_URL + \"/img/error404.jpg\"} alt=\"error\" height=\"50%\" width=\"50%\"/>\n\t\t\t</NavLink>\n\t\t\t<p style={{textAlign: \"center\"}}>\n\t\t\t\t<Link to=\"/\">Go back Home </Link>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default NotFoundComponent;\n","import MyRoutesComponent from \"./myRoutes.container\";\n\nexport default MyRoutesComponent;\n\n","import React from \"react\";\nimport {routeHelper} from \"../../viade\";\nimport {RouteList} from \"../../components/\";\n\n/**\n * Page displaying the user routes\n * @param props\n * \t\t\twebId, webId of the current user\n * @returns {*}\n * @constructor\n */\nconst MyRoutesComponent = (props) => {\n\t\tconst {webId}=props;\n\t\treturn (\n\t\t\t<RouteList webId={webId} readRoutes={routeHelper.fetchSupportedUrlMyRoutes} share={true}/>\n\t\t);\n};\n\nexport default MyRoutesComponent;\n","import {ShowRoute} from \"./show-route.container\";\n\nexport default ShowRoute;","import React, {Component} from \"react\";\nimport {\n\tLoader,\n\tRouteMap,\n\tRoutesCarousel,\n\tRoutesItinerary,\n\tRoutesMediaUpload,\n\tRouteTitle,\n\tSpacer,\n} from \"../../components\";\nimport {Col, Row} from \"react-bootstrap\";\nimport \"./show-route.css\";\nimport {RDFToRoute} from \"../../viade\";\nimport { Redirect } from \"react-router-dom\";\n\n/**\n * Page which prints a Route and all its info\n */\nexport class ShowRoute extends Component {\n\n\t/**\n\t * The page receives a route through the state\n\t * @param props\n\t * \t\t\turi, URI of the route to load\n\t * \t\t\twebId, webId of the current user\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.linkRuta = decodeURIComponent(props.match.params.uri);\n\t\tthis.state = {promiseIsResolved: false};\n\t\tthis.route = this.getRoute();\n\t\tthis.webId = props.webId;\n\t}\n\n\t/**\n\t * Loads the route\n\t */\n\tasync getRoute() {\n\t\tlet promise = RDFToRoute.parse(this.linkRuta);\n\t\treturn await promise.then((res) => {\n\t\t\tthis.route = res;\n\t\t\tthis.setState({promiseIsResolved: true});\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t(this.state.promiseIsResolved) ?\n\t\t\t\t((this.route)?<div>    {/* Shows the map and info when it finishes loading the Route */}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={12} md={2}/>\n\t\t\t\t\t\t<Col xs={12} md={8} className=\"route-container\">\n\t\t\t\t\t\t\t{/* Name, description and share button */}\n\t\t\t\t\t\t\t<RouteTitle route={this.route} share={this.props.match.params.share === \"my\"}\n\t\t\t\t\t\t\t\t\t\trouteURL={this.linkRuta} webId={this.webId}/>\n\t\t\t\t\t\t\t<RouteMap route={this.route}/> \t\t\t\t\t{/* Map and route */}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={12} md={2}/>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={12} md={2}/>\n\t\t\t\t\t\t<Col xs={12} md={6}>\n\t\t\t\t\t\t\t{/* Images of the route */}\n\t\t\t\t\t\t\t<div className=\"image-slide\"><RoutesCarousel media={this.route.media}/></div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={12} md={2}>\n\t\t\t\t\t\t\t{this.props.match.params.share === \"my\"\n\t\t\t\t\t\t\t\t? <RoutesMediaUpload route={this.route} webId={this.webId}/>\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t<RoutesItinerary route={this.route}/> {/* List of points of the route */}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={12} md={2}/>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>:<Redirect to=\"/404\" />\n\t\t\t\t): <div>\n\t\t\t\t\t<Spacer/>\n\t\t\t\t\t<Loader size=\"150px\"/>\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n","import FriendsRoutesComponent from \"./friendsRoutes.container\";\n\nexport default FriendsRoutesComponent;\n\n","\nimport React from \"react\";\nimport {routeHelper} from \"../../viade\";\nimport {RouteList} from \"../../components/\";\n\n/**\n * Page displaying the friend shared routes\n * @param props\n * \t\t\twebId, webId of the users\n * @returns {*}\n * @constructor\n */\nconst FriendsRoutesComponent = (props) => {\n\tconst {webId}=props;\n\t\treturn (\n\t\t\t<RouteList webId={webId} readRoutes={routeHelper.fetchSupportedUrlSharedWithMeRoutes} share={false}/>\n\t\t);\n};\n\nexport default FriendsRoutesComponent;","import NotificationItem from \"./notification-item.component\";\n\nexport default NotificationItem;","import React, { Fragment } from \"react\";\nimport { notificationHelper } from \"../../../../viade\";\nimport { NotificationCard } from \"../../../../components\";\nimport { errorToaster } from \"../../../../utils\";\n\nclass NotificationItem extends React.Component {\n  constructor(props) {\n    super(props);\n    const { url, webId, setSharing, isSharing } = props;\n    this.url = url;\n    this.webId = webId;\n    this.setSharing = setSharing;\n    this.isSharing = isSharing;\n    this.state = {};\n  }\n\n  init = async () => {\n    if (this.state.notification) {\n      return;\n    }\n    try {\n      const notification = await notificationHelper.fetchNotification(this.url);\n      this.setState({ notification: notification });\n    } catch (err) {\n      let link = { href: this.url, label: this.url };\n      errorToaster(err.message, err.name, link);\n    }\n  };\n\n  addSharedWithMe = async (notification) => {\n    if (!notification) {\n      return;\n    }\n    if (!notification.read) {\n      try {\n        this.setSharing(true);\n        await notificationHelper.addRouteSharedWithMe(\n          notification.object,\n          notification.actor\n        );\n        const marked = await notificationHelper.markAsRead(\n          notification\n        );\n        this.setSharing(false);\n        return marked;\n      } catch (err) {\n        throw err;\n      }\n    }\n  };\n\n  render() {\n    this.init();\n    return (\n      <Fragment>\n        {this.state.notification ? (\n          <NotificationCard\n            name={this.state.notification.title}\n            user={this.state.notification.actor\n              .toString()\n              .substr(8, this.state.notification.actor.toString().length - 40)}\n            read={this.state.notification.read}\n            action={() => this.addSharedWithMe(this.state.notification)}\n            condition={() => notificationHelper.hasNotBeenAccepted(this.state.notification.object,this.webId)}\n            message=\"That route has already been shared with you\"\n            disabled={this.isSharing}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nexport default NotificationItem;\n","import NotificationsList from \"./notifications-list.component\";\nexport default NotificationsList;","import React, {useState} from \"react\";\nimport {notificationHelper, storageHelper} from \"../../../../viade\";\nimport NotificationItem from \"../NotificationItem\";\nimport {Col, Row} from \"react-bootstrap\";\nimport {errorToaster} from \"../../../../utils\";\nimport {Loader} from \"../../../../components\";\nimport Spacer from \"../../../../components/Spacer\";\n\nconst NotificationsList = (props) => {\n\tconst [notifications, setNotifications] = useState();\n\tconst [isSharing, setSharing] = useState(false);\n\tconst {webId}=props;\n\tconst initNotifications = async () => {\n\t\tif (notifications) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tlet inbox=storageHelper.getInboxFolder(webId);\n\t\t\tlet urls = await notificationHelper.fetchNotificationsURLS(inbox);\n\t\t\tsetNotifications(urls);\n\t\t} catch (error) {\n\t\t\terrorToaster(error.message, error.name);\n\t\t}\n\t};\n\tinitNotifications();\n\n\treturn (\n\t\t<div>\n\t\t\t{notifications\n\t\t\t\t? <Row className=\"justify-content-md-center\">\n\t\t\t\t\t<Col key=\"col-1\" xs={12} sm={12} md={12} lg={1} xl={1}/>\n\t\t\t\t\t<Col key=\"col-2\" xs={12} sm={12} md={12} lg={10} xl={10}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{notifications.length > 0\n\t\t\t\t\t\t\t\t? notifications.map((url, index) => (\n\t\t\t\t\t\t\t\t\t<Col md={12} lg={4} key={index}>\n\t\t\t\t\t\t\t\t\t\t<NotificationItem\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tisSharing={isSharing}\n\t\t\t\t\t\t\t\t\t\t\tsetSharing={setSharing}\n\t\t\t\t\t\t\t\t\t\t\turl={url}\n\t\t\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>))\n\t\t\t\t\t\t\t\t: <h4 style={{textAlign: \"center\", margin: \"15px 0 0 0\", width: \"100%\"}}>\n\t\t\t\t\t\t\t\t\tSadly, you don't have notifications to show here yet :(\n\t\t\t\t\t\t\t\t</h4>}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col key=\"col-3\" xs={12} sm={12} md={12} lg={1} xl={1}/>\n\t\t\t\t</Row>\n\t\t\t\t: <div>\n\t\t\t\t\t<Spacer/>\n\t\t\t\t\t<Loader size=\"150px\"/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default NotificationsList;","import Notifications from \"./notifications.component\";\nexport default Notifications;","import React from \"react\";\nimport {NotificationsList} from \"./children\";\n\n/**\n * Page listing the notifications\n * @param props     Properties to extend\n * @returns {*}\n * @constructor\n */\nconst Notifications = (props) => {\n   \n  return (\n    <div>\n      <NotificationsList {...props}/>\n      </div>\n  );\n};\n\nexport default Notifications;\n","import PublicLayout from \"./public.layout\";\n\nexport default  PublicLayout;","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {useWebId} from \"@inrupt/solid-react-components\";\nimport {AuthNavBar, NavBar} from \"../../components\";\n\n/**\n* Controls the paths that can be accessed by any user (may or may not be logged in). \nIn addition, it also shows NavBar or Auth NavBar depending on whether the user is logged in or not.\n*@param {Component} component - The Container to be shown\n*@param {String} path - path asigned to the container\n*/\nconst PublicLayout = (props) => {\n  const { component: Component, ...rest } = props;\n  const webId=useWebId();\n  return (\n    <Route\n      {...rest}\n      component={({ history, location, match }) => (\n        <div>\n          {webId ? (\n            <AuthNavBar {...{ history, location, match, webId }} />\n          ) : (\n            <NavBar\n              {...{ history, location, match }}\n            />\n          )}\n          <Component {...{ history, location, match }} />\n        </div>\n      )}\n    />\n  );\n};\n\nexport default PublicLayout;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { higherOrderComponent } from \"../util\";\n\nexport default higherOrderComponent(\"WithHistory\", (Component) =>\n  (props) => <Component {...props} history={useHistory()} />);\n","/**\n * Determines the display name of a component\n * https://reactjs.org/docs/higher-order-components.html\n */\nexport function getDisplayName(Component) {\n  return Component.displayName || Component.name || \"Component\";\n}\n\n/**\n * Creates a higher-order component with the given name.\n */\nexport function higherOrderComponent(name, createWrapper) {\n  return (Component) => {\n    const Wrapper = createWrapper(Component);\n    Wrapper.displayName = `${name}(${getDisplayName(Component)})`;\n    return Wrapper;\n  };\n}\n\n","import PrivateLayout from \"./private.layout\";\n\nexport default PrivateLayout;","import React from \"react\";\nimport { withWebId } from \"@solid/react\";\nimport {withHistory} from \"./components\";\n\nexport const withAuthorization = (Component, Loader) =>\n  withHistory(withWebId(\n    class WithAuthorization extends React.Component {\n      render() {\n        const { webId ,history} = this.props;\n        switch (webId) {\n          case undefined:\n            return Loader || null;\n          case null:\n            history.push(\"/\");\n            return null;\n          default:\n            return <Component {...this.props} />;\n        }\n      }\n    }\n  ));\n","import React, {useEffect} from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {withAuthorization} from \"../../hooks\";\nimport {AuthNavBar} from \"../../components\";\nimport {permissionHelper} from \"../../utils\";\nimport {useWebId} from \"@inrupt/solid-react-components\";\n\n/**\n * Controls the paths that can be accessed only by logged users. If a not logged-in user tries to access that path he will be redirected to \"/login\".In addition, it also shows Auth NavBar.\n * @param Component\n * @param webId\n * @param location\n * @param history\n * @param rest\n * @returns {*}\n * @constructor\n */\nconst PrivateLayout =({component:Component, location, history, ...rest }) => {\n  const webId=useWebId();\n  const errorMessages = {\n    message: \"The application permissions are not properly set. Please add additional permissions and try again\",\n    title: \"Error\",\n    label: \"Learn more\",\n    href: \"https://solidsdk.inrupt.net/public/general/en/app-permissions.html\"\n  };\n  useEffect(() => {\n    if (webId) {\n      permissionHelper.checkPermissions(webId, errorMessages);\n    }\n  }, [webId, errorMessages]);\n\n  return  (\n    <Route\n      {...rest}\n      component={({ history, location, match }) => (\n        <div>\n          <AuthNavBar {...{ history, location, match, webId }} />\n          <Component {...{ history, location, match,webId }} />\n        </div>\n      )}\n    />\n  );\n};\n\nexport default withAuthorization(PrivateLayout);\n","import React, {Fragment} from \"react\";\nimport {HashRouter, Switch} from \"react-router-dom\";\n\nimport {\n\tFriendsRoutes,\n\tHome,\n\tMyRoutes,\n\tNotFound,\n\tProfile,\n\tShowRoute,\n\tShare,\n\tNotifications\n} from \"./containers\";\n\nimport {PrivateLayout, PublicLayout} from \"./layouts\";\n\n\n/**\n * Manages the BrowserRouter and so, all the route navigation\n * @returns {*}\n * @constructor\n */\nconst Routes = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Fragment>\n\t\t\t\t{/* Chooses the first route matching the direction and loads it */}\n\t\t\t\t<Switch>\n\t\t\t\t\t{\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t  PublicLayout para rutas que se tienen que mostrar a todos los usuarios(estén o no loggeados)\n\t\t\t\t\t\t  NotLoggedInLayout para rutas que se tienen que mostrar a usuarios que NO están loggeados\n\t\t\t\t\t\t  PrivateLayout para rutas que se tienen que mostrar a usuarios que SI están loggeados\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t\t<PublicLayout component={Home} path=\"/\" exact/> {/* Homepage - \"/\" */}\n\t\t\t\t\t<PrivateLayout component={FriendsRoutes} path=\"/friendsRoutes\" exact/> {/* Friends - \"/friends\" */}\n\t\t\t\t\t<PrivateLayout component={Profile} path=\"/profile\" exact/> {/* Profile - \"/profile\" */}\n\t\t\t\t\t<PrivateLayout component={MyRoutes} path=\"/myRoutes\" exact/> {/* My Routes - \"/myRoutes\" */}\n\t\t\t\t\t<PrivateLayout component={ShowRoute} path=\"/showRoute/:share/:uri\"/> {/* Show Route - \"/showRoute...\" */}\n\t\t\t\t\t<PrivateLayout component={Share} path=\"/share\" exact /> {/* Share - \"/share\" */}\n\t\t\t\t\t<PrivateLayout component={Notifications} path=\"/notifications\" exact /> {/* Notifications - \"/notifications\" */}\n\t\t\t\t\t<PublicLayout component={NotFound} path=\"*\"/> {/* Error - \"*\" */}\n\t\t\t\t</Switch>\n\t\t\t</Fragment>\n\t\t</HashRouter>\n\t);\n};\n\n\nexport default Routes;","import React, {Fragment} from \"react\";\nimport Routes from \"./routes\";\nimport {ToastContainer} from \"react-toastify\";\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Routes/>\n\t\t\t<ToastContainer\n\t\t\t\tposition=\"top-center\"\n\t\t\t\tautoClose={3000}\n\t\t\t\thideProgressBar={false}\n\t\t\t\tnewestOnTop={false}\n\t\t\t\tcloseOnClick\n\t\t\t\trtl={false}\n\t\t\t\tpauseOnVisibilityChange\n\t\t\t\tdraggable\n\t\t\t\tpauseOnHover\n\t\t\t/>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {ErrorBoundary} from \"./components\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<ErrorBoundary>\n\t\t<App/>\n\t</ErrorBoundary>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}